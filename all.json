[{"sentence_samples": [{"sentence": "The JDBC Message Store should support Postgresql", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "JDBC support for Firebird database", "sentence_label": "title"}, {"sentence": "Support does not exist for the Firebird database.", "sentence_label": "current"}, {"sentence": "Information can be found at [URL] and the JDBC mailing list is at [URL]", "sentence_label": "example"}, {"sentence": "It shouldn't be difficult, Firebird is an open enterprise level database, so it should have all the features you require.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow JDBC persistence adapter to use custom prefixes", "sentence_label": "title"}, {"sentence": "It would be nice to support configurable prefix for these tables, so that multiple standalone brokers can use a single database.", "sentence_label": "expected"}, {"sentence": "Currently table names are hardcoded in [FILE]", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "create a security plugin using the Acegi framework", "sentence_label": "title"}, {"sentence": "[URL]", "sentence_label": "example"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Outbound Resource Adapter", "sentence_label": "title"}, {"sentence": "Create a JCA Outbound Resource Adapter (RAR)", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow a client to choose if non transacted persistent message should use sync or async send.", "sentence_label": "title"}, {"sentence": "I propose that we add a ConnectionFactory property that controls if non-transacted persistent messages use async sends to the broker.", "sentence_label": "expected"}, {"sentence": "ActiveMQ currently sends all messages to the broker using an async send.", "sentence_label": "current"}, {"sentence": "This allows the client send() method call to be very fast since it does not have to wait for the message to arrive at the server.", "sentence_label": "explanation"}, {"sentence": "Unfortunately, most folks will assume that the send() method should block when sending a non-transacted persistent message.", "sentence_label": "drawback"}, {"sentence": "They will expect the send to work like JDBC operation using auto-commit.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Automatic periodic cleanup of the JDBC database", "sentence_label": "title"}, {"sentence": "Add a periodic cleanup of the database.", "sentence_label": "expected"}, {"sentence": " It removes expired messages and messages that been acked by all durable subscribers.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add MessageConsumer stop and start methods.", "sentence_label": "title"}, {"sentence": "Allow a message consumer to have a start or stop cycle.", "sentence_label": "expected"}, {"sentence": "When stopped, messages are not delivered to the consumer until the consumer is started.", "sentence_label": "explanation"}, {"sentence": "Similar to how a the connection start or stop methods work except at individual consumer level.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "suppport jmDNS (Zeroconf for Java) as a way to discover brokers", "sentence_label": "title"}, {"sentence": "We should provide a plugin to allow easy location of brokers using jmDNS", "sentence_label": "expected"}, {"sentence": "Zeroconf (Apple Rendezvous) is a standard protocol for discovering services on a network using multicast.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "allow JMS [METHOD] to be asynchronous and not block the client", "sentence_label": "title"}, {"sentence": "In very high throughput scenarios, like market data, we may wish the JMS send() message to succeed and add the message to an internal RAM channel for dispatching down a socket at a later date, to boost the performance throughput.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make a custom JNDI Context to allow destinations to be browsed", "sentence_label": "title"}, {"sentence": "We can make Destinations available for browsing by tools like Hermes using a simple JNDI Context", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "let producer example sleep between publishing messages", "sentence_label": "title"}, {"sentence": "You can now provide a -DsleepTime=xxx for the producer.", "sentence_label": "expected"}, {"sentence": "This will cause the producer to sleep xxx ms between publishing messages.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "provide shell script to run ActiveMQ from the command line from a binary distro", "sentence_label": "title"}, {"sentence": "being able to type activemq from the command line, assuming your PATH was correct etc would be cool", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "support for composite Destinations", "sentence_label": "title"}, {"sentence": "We would also need to watch for this in Queue based dispatching such as how we do wildcard queue dispatching", "sentence_label": "explanation"}, {"sentence": "When subscribing to, say, your stock portfolio on a topic it would be much better to subscribe to a single destination \"Code\"", "sentence_label": "expected"}, {"sentence": "Rather than having 3 separate subscriptions", "sentence_label": "current"}, {"sentence": "From the JMS Providers perspective this is much cheaper too!", "sentence_label": "benefit"}, {"sentence": "Also on the publishing side of things, if we publish to a composite queue it could provide fine grained control over different queues as an alternative to durable topics.", "sentence_label": "benefit"}, {"sentence": "so folks can explicitly browse the queues, can delete any item in the queue, can have many consumers per queue etc.", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Pooling JMS ConnectionFactory", "sentence_label": "title"}, {"sentence": "Add a pooling JMS ConnectionFactory which will use a single physical JMS Connection under the covers and use a pool of sessions to avoid creating too many physical JMS resources when using the Spring JmsTemplate or EJBs.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "support advisory messages for start/stop of consumers and producers", "sentence_label": "title"}, {"sentence": "We should generate some advisory messages when a consumer/producer start/stop so that JMS clients can monitor & see who's subscribing to what etc.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "XA support", "sentence_label": "title"}, {"sentence": "We need an XA connection implementation", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Optimise the subscription dispatching, particularly the topic hierarchy", "sentence_label": "title"}, {"sentence": "Optimise the subscription dispatching, particularly the topic hierarchy and wildcards", "sentence_label": "expected"}, {"sentence": "Also any selector tuning would be cool", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Need a remote protocol for embedded brokers", "sentence_label": "title"}, {"sentence": "However, for brokers that are remote, where multicast discovery is not possible and where outbound connections are the only option, a new type of network connection is required that proivdes full multiplex message transfer from the remote location", "sentence_label": "expected"}, {"sentence": "Typical Network connections for ActiveMQ are uniplexed - fully connectivity being established between brokers by both brokers connecting to one another.", "sentence_label": "current"}, {"sentence": "For brokers on the same network, this is trivial, as discovery automates the process.", "sentence_label": "drawback"}, {"sentence": "In addition, the protocol should be based on the peer:// protocol, enabling a JMS client to create an embedded broker automatically, that uses remote network connections.", "sentence_label": "explanation"}, {"sentence": "This enables the client to publish messages, even if the transport has diconnected.", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "use Derby as our default, integrated, JDBC persistence engine in the release?", "sentence_label": "title"}, {"sentence": "Maybe by default we should use Derby as the default JDBC persistence, particularly as it supports full XA.", "sentence_label": "expected"}, {"sentence": "Then our out of the box persistence could be a combination of Derby and the Journal?", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support demand based publishing", "sentence_label": "title"}, {"sentence": "Create a demand advisor that lets a publisher know when there is demand of the messages it can produce.", "sentence_label": "expected"}, {"sentence": "Useful when creating the messages to be published is an expensive operation.", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add Sybase support", "sentence_label": "title"}, {"sentence": "The JDBC Message Store should support Sybase", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Tool to display the raw message content of messages currently queued", "sentence_label": "title"}, {"sentence": "The raw content of messages in the queue can give a great deal of information about failing clients.", "sentence_label": "explanation"}, {"sentence": " A tool to actively inspect such things would be very handy - exposed as part of the jmx info would be fine.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "add option to message groups to configure frequency of forcing a new consumer", "sentence_label": "title"}, {"sentence": "This is a just a suggested feature,", "sentence_label": "useless"}, {"sentence": "see this discussion for more details [URL]", "sentence_label": "example"}, {"sentence": "The basic idea was to allow configuring a frequency (either elapsed time or message count) to force a new consumer for a given message group (similar to setting JMSXGroupSeq header to ?)", "sentence_label": "expected"}, {"sentence": "Would help distribute the load across consumers to better protect against slow consumers, etc.", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "GBeans Should allow configuration of store location", "sentence_label": "title"}, {"sentence": "ActiveMQ is placing its data store in the current directory - given Geronimo can be started from anywhere this is not a good idea.", "sentence_label": "current"}, {"sentence": "Instead the user should be able to configure the location of the store and this should be resolved relative to the root directory obtained from ServerInfo That defaults to var/activemq.", "sentence_label": "expected"}, {"sentence": "See: [URL]", "sentence_label": "example"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow to \"reschedule\" messages", "sentence_label": "title"}, {"sentence": "However we need to be able to \"reschedule\" the message.", "sentence_label": "expected"}, {"sentence": "So we would like to be able to remove or change the delay after adding the message to the queue.", "sentence_label": "expected"}, {"sentence": "We use the new delay or scheduling feature which comes with activemq 5.4.0.", "sentence_label": "explanation"}, {"sentence": "This is really cool and works out well.", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow ssl context configuration through spring or xbean", "sentence_label": "title"}, {"sentence": " It would be better if it was possible to configure via spring or xbean.", "sentence_label": "expected"}, {"sentence": "amq ssl works with the [CODE] system properties and can be configured via SslBroker without the system properties as shown in (web-page-link)", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "JMS 2.0 Support", "sentence_label": "title"}, {"sentence": "Expand the broker support to include JMS 2.0.", "sentence_label": "expected"}, {"sentence": "The biggest impacts are going to be the client side changes to support the simplified API (It looks like \"web-page-link\" covers that), and the ability to share subscriptions across multiple clients.", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Exposing Session Count on the broker", "sentence_label": "title"}, {"sentence": "We thought it would be better if we can see the session count on broker in some way where we can expose that in our metrics tool if this property gets exposed as a mbean.", "sentence_label": "expected"}, {"sentence": "Currently , The broker metrics are good to get the connection count and other metrics.", "sentence_label": "explanation"}, {"sentence": "Recently , we had an issue with the high number of sessions due to the issue in the client code in connecting to broker.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Better Fault Tolerance", "sentence_label": "title"}, {"sentence": "Other queue technologies provide a manner of fault tolerance missing from AMQ message semantics.", "sentence_label": "current"}, {"sentence": "That is, messages can be acknowledged at any time by a client.", "sentence_label": "explanation"}, {"sentence": "Failing to do so within the messages TTL, should result in the message re-appearing on the queue so another client can re-try it.", "sentence_label": "drawback"}, {"sentence": "Reliable messaging with AMQ currently pertains to only message receipt, but in practical systems distributing work via a queue this is unsufficient semantics to ensure tolerance of faults \"during\" work processing.", "sentence_label": "explanation"}, {"sentence": "In that case, clients will only acknowledge a message in the event of successful processing of that message (left to the client to decide).", "sentence_label": "drawback"}, {"sentence": "If the client were to suffer a fatality during processing, the work associated with the message is left undone in the current AMQ because it cannot be re-processed.", "sentence_label": "drawback"}, {"sentence": " In these extreme (but not uncommon) fault conditions, it is not possible for the client to \"re-queue\" the message.", "sentence_label": "drawback"}, {"sentence": "Combining TTL, re-queue behavior (in the Broker) and INDIVIDUAL_ACKNOWLEDGE (on the client) of messages should achieve the desired increase in fault-tolerance described here.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "support AIO (or AIO4J)", "sentence_label": "title"}, {"sentence": "IBM's implemented AIO4J with is a reference implementation of AIO for true asynchronous IO.", "sentence_label": "explanation"}, {"sentence": "We should support this ASAP!", "sentence_label": "expected"}, {"sentence": "So far outbound is working in the modules/aio4j module but we've yet to support inbound.", "sentence_label": "current"}, {"sentence": "We have done the WireFormat refactorings so it should be pretty easy to implement this now.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Time out for Durable Subscribers", "sentence_label": "title"}, {"sentence": "I propose to have an enhanced version of the createDurableSubscriber method accepting an addtional parameter with a timeout value.", "sentence_label": "expected"}, {"sentence": "This feature comes from practical considerations.", "sentence_label": "explanation"}, {"sentence": "Imagine consumers that create durable subscribers on a broker.", "sentence_label": "explanation"}, {"sentence": " If those consumers die unexpectedly and are not revived, the durable subscription continues to exist and messages sent to the according topic will be stored persistently.", "sentence_label": "explanation"}, {"sentence": "The intended behavior on the broker side is to drop a durable subscription if no active subscriber has been connected within the given timeout value.", "sentence_label": "explanation"}, {"sentence": "By default the feature should be turned off.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow the timer to be configured (and disabled) for the async clear down of durable topic messages", "sentence_label": "title"}, {"sentence": "So Retroactive Consumers can receive all messages ever sent on a durable topic", "sentence_label": "benefit"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Keep-alive for ReliableTransportChannel", "sentence_label": "title"}, {"sentence": "A thread which periodically checks if the channels are alive by sending a special packet which must be acknowledged within a specified timeframe.", "sentence_label": "explanation"}, {"sentence": "If not, the channel will be disconnected and the standard ReliableTransportChannel will reestablish the channel.", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add request-id and response-id headers to STOMP connect/connected handshake", "sentence_label": "title"}, {"sentence": "For the new activemq-cpp library, we need to extend the STOMP connect/connected handshake so that we get back a response-id for our response correlator.", "sentence_label": "expected"}, {"sentence": "To do this, we need to send something in the connect request that contains a client-defined request-id.", "sentence_label": "explanation"}, {"sentence": "My first thought was to just reuse the message-id header, but that is typically reserved for cases when a client is expecting to acknowledge a message.", "sentence_label": "explanation"}, {"sentence": "So rather than risk breaking that paradigm, I propose a new header \"request-id\" that is just used on the connect message.", "sentence_label": "expected"}, {"sentence": "When the broker receives a connect request with a request-id header, it creates a connected response with a response-id set to the request-id of the original request.", "sentence_label": "explanation"}, {"sentence": "This way the client can treat the handshake as a true request/response.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "BufferedTransportFilter or similar feature", "sentence_label": "title"}, {"sentence": "I'm considering using ActiveMQ for an app that would transfer a large number of messages over the http transport (across firewalls/internet).", "sentence_label": "expected"}, {"sentence": " I would want to use async messages (i.e. useAsyncSend=true) to boost performance.", "sentence_label": "expected"}, {"sentence": "Would it make sense to introduce a BufferedTransportFilter to boost performance even further(considering the fact that these messages would be traveling over the internet)?", "sentence_label": "expected"}, {"sentence": "That is, the BufferedTransportFilter would wait a configurable amount of time before \"batching together\" all the messages it received so far (or after some configurable limit in terms of bytes and/or number of messages) and then pass this on to the next Transport.", "sentence_label": "explanation"}, {"sentence": "Ideally, the Transport API would have to be extended to allow for a onewayBatch(List<Object> messageBatch) method (and the default implementation would just iterate over the list and rely on the existing oneway(Object) method.", "sentence_label": "explanation"}, {"sentence": "HttpClientTransport could then be extended to allow for a single POST to send multiple messages over the internet.", "sentence_label": "benefit"}, {"sentence": "Is this something that was considered?", "sentence_label": "useless"}, {"sentence": " Or that exists in some other form that I missed while going through the sources?", "sentence_label": "useless"}, {"sentence": "I would be willing to contribute some time for implementing this if the maintainers think its a worthwhile feature to have.", "sentence_label": "useless"}, {"sentence": "Thanks,", "sentence_label": "useless"}, {"sentence": "Hernan", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "add tcp keepalive, linger, tcpnodelay/disable nagle support to stomp protocol", "sentence_label": "title"}, {"sentence": "Please add TCP_NODELAY, TCP_KEEPCNT, TCP_KEEPIDLE, TCP_KEEPINTVL, and SO_LINGER to the stomp transport.", "sentence_label": "expected"}, {"sentence": "See \"man -s 7 tcp\" on linux.", "sentence_label": "example"}, {"sentence": "These options help ActiveMQ recognize disappeared connections outside of the application layer.", "sentence_label": "benefit"}, {"sentence": "TCP_NODELAY is a performance option for small messages.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implement JSR 356 based WebSocket transport", "sentence_label": "title"}, {"sentence": "The present WS transport boots up an embedded Jetty instance on its own port, which does not make sense when embedding ActiveMQ in a container-hosted application.", "sentence_label": "current"}, {"sentence": "Although not that difficult to hack together manually, there should be a supported first-party mechanism to configure a WS Stomp/MQTT endpoint when embedded in a JSR 356 compatible container.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support Time To Live for activemq connection that uses tcp and nio transport", "sentence_label": "title"}, {"sentence": "Add a new connection string parameter to support a time to live (expiry time) for activemq connection", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support AMQP 0.9.1", "sentence_label": "title"}, {"sentence": "ActiveMQ seems to only support AMQP 1.0 which does not have very broad adoption.", "sentence_label": "current"}, {"sentence": "For example, it is difficult to find a AMQP 1.0 client library for python.", "sentence_label": "example"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "SpringIDE extension plugin for configuration namespace", "sentence_label": "title"}, {"sentence": "This description is based on a response to a post on the Spring forums by cdupuis (see \"web-page-link\")", "sentence_label": "explanation"}, {"sentence": "Out of the box Spring IDE only knows about NamespaceHandlers that are part of the Spring Portfolio.", "sentence_label": "explanation"}, {"sentence": "Therefore Spring IDE is not able to validate the Bean Reference to a bean that would be generated by a NamespaceHandler at runtime, but not known in Spring IDE's runtime environment.", "sentence_label": "explanation"}, {"sentence": "This also means that amq namespace elements don't appear in the Spring or Project Explorer.", "sentence_label": "explanation"}, {"sentence": "Because Spring IDE lives in the OSGi environment of your Eclipse instance it can't take any of your project's jar files and look for NamespaceHandlers.", "sentence_label": "explanation"}, {"sentence": "Spring IDE can \"learn\" about any namespace by adding suppport for custom namespaces, see [URL]", "sentence_label": "example"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support cometd as a protocol", "sentence_label": "title"}, {"sentence": "I'm not sure if cometd maps to JMS well but it would be very interesting to suppport cometd as a protocol along with stomp, xmpp, rest, etc.", "sentence_label": "expected"}, {"sentence": "I know websockets are being worked on for 5.4 and this would be awesome to add.", "sentence_label": "explanation"}, {"sentence": "I'm aware of the existing servlet that ships with activemq and with the more recent demo code using jetty that is hosted over at fuse but it would be nicer to see this rolled into the broker as a first class citizen.", "sentence_label": "explanation"}, {"sentence": "I'm opening this to see if there is any traction for this and, in the off chance that I have time, I might look into trying my hand at this.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Request/Response Option for AJAX interface", "sentence_label": "title"}, {"sentence": "In addition to the standard publish/subscribe message handling used by the AJAX client to communicate to ActiveMQ, it would be helpful in some situations to be able to simulate a more typical request/response scenario.", "sentence_label": "expected"}, {"sentence": "Is it performant to do this using the existing API or is there a need to develop new Javascript classes to support it?", "sentence_label": "explanation"}, {"sentence": "For example, one approach may be to create a new topic and message consumer in the JS client.", "sentence_label": "example"}, {"sentence": "Attach the consumer and send the message.", "sentence_label": "explanation"}, {"sentence": "When the response is received, the callback is notified and the consumer is discarded.", "sentence_label": "explanation"}, {"sentence": "It seems that this approach may work, but it appears very inefficient due to the number of objects created/disposed.", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "allow topics in particular but also queues to have a 'namespace URI' like WS-Notification", "sentence_label": "title"}, {"sentence": "This would allow a real clean mapping from WS-N topics and ActiveMQ at the protocol level.", "sentence_label": "benefit"}, {"sentence": "We could use the namespace as a level of indirection to map to a broker, a cluster of brokers or even a particular area of a network etc.", "sentence_label": "explanation"}, {"sentence": "The namespace could be a broker's name too.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Axis/JMS/ActiveMQ demo", "sentence_label": "title"}, {"sentence": "I have created a self-contained demo of using Axis/JMS/ActiveMQ", "sentence_label": "explanation"}, {"sentence": "James suggested that I pass it along for possible inclusion in the examples", "sentence_label": "explanation"}, {"sentence": "All of the code is in the enclosed ZIP", "sentence_label": "explanation"}, {"sentence": "Cheers,", "sentence_label": "useless"}, {"sentence": "Chris", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "message type metadata exposing", "sentence_label": "title"}, {"sentence": "users may wish to see what types of messages are sent on what destinations.", "sentence_label": "expected"}, {"sentence": "Similarly we might wanna capture what XSD types are used on each destination to help folks grok the message model used in an organisation", "sentence_label": "expected"}, {"sentence": "for example, we may wish to collate together all Message.getMessageType() values are used for each Destination.", "sentence_label": "example"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "message type restrictions on destinations", "sentence_label": "title"}, {"sentence": "Some users may want to restrict certain types (for example, XSD types) of messages to be sent on certain destinations.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "ActiveMQ version 5.7.0 ??", "sentence_label": "title"}, {"sentence": "Can you guys release a 5.6.1 since mKahadb has been fixed in trunk i believe.", "sentence_label": "expected"}, {"sentence": "Given that multi kahadb is broken in version 5.6.0 which was one of the major features in this version, when can we expect ActiveMQ 5.7.0 to be out ??", "sentence_label": "explanation"}, {"sentence": "Please refer [URL]", "sentence_label": "example"}, {"sentence": "Thanks,", "sentence_label": "useless"}, {"sentence": "Bhanu", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "I have post the jms interface with jni ,C dll and Delphi test.", "sentence_label": "title"}, {"sentence": "I have no time to change.", "sentence_label": "useless"}, {"sentence": "Some where is chinese.", "sentence_label": "useless"}, {"sentence": "The interface was used jndi ,so can use in any JMS Server (Perhaps,You have to some change the java code.)", "sentence_label": "explanation"}, {"sentence": "I am not wirte the linux C lib.", "sentence_label": "explanation"}, {"sentence": "You can write the makefile yourself.", "sentence_label": "explanation"}, {"sentence": "Good Luck.", "sentence_label": "useless"}, {"sentence": "Sorry", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Options to modify message properties when composite destinations are used", "sentence_label": "title"}, {"sentence": "What about options to be able to change message properties (persistance and others) when they transfer to others destinations ?", "sentence_label": "expected"}, {"sentence": "One of our need is to be able to change message properties while we transfer messages through composite destinations.", "sentence_label": "expected"}, {"sentence": "the same way that with deadLetterStrategy we can add the option processNonPersistent=\"true\" and persist any message", "sentence_label": "explanation"}, {"sentence": "For example, we received messages by MQTT conector, with QoS=0 for performance reasons (no acknowledge, message not persisted).", "sentence_label": "example"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide startup option to flush journal to store then exit the broker", "sentence_label": "title"}, {"sentence": "This is a wish for a command line argument that will flush the journal to the database and quit.", "sentence_label": "expected"}, {"sentence": "This makes it possible to: Do some kinds of message administration / emergency fixing in SQL.", "sentence_label": "benefit"}, {"sentence": "Upgrade even if there are incompatible changes by first flushing the journal and then applying the appropriate SQL change script to the database.", "sentence_label": "benefit"}, {"sentence": "Switch the kind of journaling, switch to no journaling, etc.", "sentence_label": "benefit"}, {"sentence": "Jason", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Cannot configure the load balancing count when using Message Groups", "sentence_label": "title"}, {"sentence": "We are seeing ActiveMQ configure the first 10 messages with different JMSXGroupID values to the same consuming node before distributing subsequent messages across the attached consumers.", "sentence_label": "explanation"}, {"sentence": "We need to be able to configure this value down to 1 to allow us to evenly balance the load across the consumers in a round robin fashion.", "sentence_label": "expected"}, {"sentence": "But we cannot see from the documentation how to configure this property.", "sentence_label": "current"}, {"sentence": "For example:", "sentence_label": "example"}, {"sentence": "This results in an unevenly balanced cluster of consumers when utilising Message Groups.", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Transport Connection to: [URL] failed: [TRACE]", "sentence_label": "title"}, {"sentence": "Here is a description of the problem:", "sentence_label": "explanation"}, {"sentence": "Transport Connection to: [URL] failed: [TRACE]", "sentence_label": "current"}, {"sentence": "How should I solve it\uff1f", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unable to apply policy when set refreshInterval=-1 for cachedLDAPAuthorizationMap", "sentence_label": "title"}, {"sentence": "the LDAP server I used is Active Directory.", "sentence_label": "explanation"}, {"sentence": "when I try to set [CODE] for [CLASS], I got the following errors:[TRACE]", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SASL PLAIN auth with AMQP doesn't take authzid into account", "sentence_label": "title"}, {"sentence": "SASL PLAIN authentication with AMQP doesn't take authzid into account and fails authentication when it's fully legal in SASL PLAIN.", "sentence_label": "current"}, {"sentence": "See [URL] for a more detailed description including debug logs.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ActiveMQ truststore client.ts not working", "sentence_label": "title"}, {"sentence": "We have had our ActiveMQ truststore getting corrupted in our production server last week.", "sentence_label": "explanation"}, {"sentence": "So I replaced the [FILE] file from a backup and imported the app servers .pfx certificates into it.", "sentence_label": "explanation"}, {"sentence": "Now, customers are unable to establish a connection to ActiveMQ server on 61616, getting SSL errors.", "sentence_label": "current"}, {"sentence": "I'm noticing below error in [FIEL].", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "So I tried creating a new [FILE] file by following below steps from your KB. But the issue persists.", "sentence_label": "current"}, {"sentence": "If I use the [FILE] file on the client machine, I'm able to establish the connection successfully.", "sentence_label": "current"}, {"sentence": "Could you please help resolve this issue asap?", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Docker container having ActiveMQ restart making Queues Tab on Console inaccessible", "sentence_label": "title"}, {"sentence": "In my project we have ActiveMQ 5.14.3 embedded withing docker image.", "sentence_label": "explanation"}, {"sentence": "After initial deployment ActiveMQ Web console work fine, however when I restart container Queues Tab in Web Console throwing JSP exception on [FILE] line 59.", "sentence_label": "current"}, {"sentence": "Hence unable to access queue details from Web Console.", "sentence_label": "current"}, {"sentence": "If I delete 'data' folder within container then restart container, Web Console Queue Tab is working fine.", "sentence_label": "current"}, {"sentence": "But deleting 'data' folder is not good option as I loose all previous data.", "sentence_label": "drawback"}, {"sentence": "Can you please help on issue?", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Past Release Downloads Does Not Work", "sentence_label": "title"}, {"sentence": "The links for any of the past release downloads don't work, in particular [URL]", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Getting error after some time in ActiveMQ", "sentence_label": "title"}, {"sentence": "Hi Team,", "sentence_label": "useless"}, {"sentence": "We are using Apache ActiveMQ version 5.14.4 in our one of application.", "sentence_label": "explanation"}, {"sentence": "We are getting below errors on one of our environment: [TRACE]", "sentence_label": "current"}, {"sentence": "Can you please help us on this, what we can do it to resolve above issue.", "sentence_label": "useless"}, {"sentence": "Thanks in adavance", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Number Of Pending Messages Did Not Reflect Its Queues Number", "sentence_label": "title"}, {"sentence": "Having issue  on number of pending messages in any queues created as the number did not reflect the total number of message id.", "sentence_label": "current"}, {"sentence": "This is usually happen during transaction is heavy to my active mq system.", "sentence_label": "explanation"}, {"sentence": "Would like to know why this issue occur at the first place?", "sentence_label": "useless"}, {"sentence": "Is this similar issue occur before and what are the solution?", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JDBC store - pending high priority messages batch cannot be consumed after low priority message batch", "sentence_label": "title"}, {"sentence": "With priority message enabled a batch of low priority messages can leave the cursor unable to load subsequent high priority messages.", "sentence_label": "current"}, {"sentence": "More visible when [CODE].", "sentence_label": "explanation"}, {"sentence": "A new consumer or browse will not be able to see pending messages.", "sentence_label": "drawback"}, {"sentence": "Issue occurs after dispatch of low priority messages, an empty store and the addition of high priority messages.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION]: Chunk stream does not exist at page on broker start", "sentence_label": "title"}, {"sentence": "I am seeing this regularly upon restarts in all versions from 5.4.x -", "sentence_label": "explanation"}, {"sentence": "I cannot downgrade due to breaking issues in previous versions.", "sentence_label": "explanation"}, {"sentence": "The broker was shutdown cleanly with no logged issues.", "sentence_label": "current"}, {"sentence": "Deleting the activemq-data directory seems to be the only recovery solution (which is not an option in production)", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[FILE] page is saying \"Can't find brush for : xml\"", "sentence_label": "title"}, {"sentence": "[FILE] page is saying \"Can't find brush for : xml\"", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "So I can't looking into configuration for MQTT.", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "activemq-pool - Either adds new mbeans or add/remove pair of mbean for each producer in use", "sentence_label": "title"}, {"sentence": "On the AMQ dev mailing list we have talked about a new issue [URL].", "sentence_label": "explanation"}, {"sentence": "I found out that using the camel-example-management, which has an embedded AMQ broker and using Camel with the VM transport to produce/consume messages, then there is mbean issues.", "sentence_label": "current"}, {"sentence": "It works fine in AMQ 5.10.0.", "sentence_label": "explanation"}, {"sentence": "But is wrong in AMQ 5.10.1 and 5.11.0.", "sentence_label": "explanation"}, {"sentence": "See the attached screenshots.", "sentence_label": "example"}, {"sentence": "Notice how the mbean tree for dynamic producers keeps growing for 5.10.1 and 5.11.0.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Dispatching large messages over AMQP is very slow.", "sentence_label": "title"}, {"sentence": "When testing against the QPid JMS client we see that a producer sending large messages 10mb+ is quite fast but a consumer takes exponentially longer to receive the message.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Persistent topic messages not stored in store", "sentence_label": "title"}, {"sentence": "Even when message sent to topic is persistent and there are non-durable consumers, it is lost when broker fail-over happens in Shared Storage Master/Slave.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release", "sentence_label": "title"}, {"sentence": "The KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release.", "sentence_label": "current"}, {"sentence": "Furthermore, the key A2F9E313 does not appear to be available from the pgp.mit.edu server.", "sentence_label": "current"}, {"sentence": "This means that it is impossible to check the integrity of the release.", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "HTTPS transportConnector does not create a SslSocket but a plain text one", "sentence_label": "title"}, {"sentence": "Trying to enable HTTPS transportConnector in [FILE] file, it is impossible to make it communicate in SSL.", "sentence_label": "current"}, {"sentence": "I added the line:[URL] in the [FILE] file, and i can see at startup that a plain text socket seem to have been created, instead of a ssl one: [TRACE]", "sentence_label": "current"}, {"sentence": "When i connect with a https client (based on Spring JmsTemplate class), i cannot connect.", "sentence_label": "current"}, {"sentence": "I have to mention also that i can successfully connect using ssl connection (so the certificates are OK) and also in HTTP.", "sentence_label": "explanation"}, {"sentence": "Thanks a lot for your work!", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ActiveMQ is not JCA1.5 compliant", "sentence_label": "title"}, {"sentence": "When attempting to install the ActiveMQ RAR, these errors are thrown, and appear to be vaild and correct (verified by browsing the ActiveMQ source code).", "sentence_label": "current"}, {"sentence": "Classloading problems appear to prevent using ActiveMQ using the Foriegn JMS facility of Weblogic.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "set findMessageStatement cause problem for JDBCPersistenceAdapter due to error in [FILE]", "sentence_label": "title"}, {"sentence": "field [PARAMS] in [FILE] is never used and [METHOD] is using findMessageStatement which causes problem.", "sentence_label": "current"}, {"sentence": "Because if someone overwrite the default findMessageStatement, it will cause [METHOD] to fail.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NullPointer Exception Occurs when using producer flow control", "sentence_label": "title"}, {"sentence": "Looks like there is a synchronization issue still with producer based flow control.", "sentence_label": "current"}, {"sentence": "Here is the stack trace of the problem:[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Non temporary destination removing failure", "sentence_label": "title"}, {"sentence": "When deleting a non temporary destination and after restarting ActiveMQ the destination is reloaded", "sentence_label": "current"}, {"sentence": "so in fact this destination has not been deleted.", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ActiveMQMessageConsumer.unconsumedMessages continues to grow", "sentence_label": "title"}, {"sentence": "I have written a message producer that is generating messages at a high rate of speed.", "sentence_label": "explanation"}, {"sentence": "The consumer does process the messages at a slower rate of speed.", "sentence_label": "current"}, {"sentence": "I profiled the producer using YourKit and noted that [METHOD] does not ever go down.", "sentence_label": "current"}, {"sentence": "The number of messages sent to the consumer is the same number of messages that are contained in the [METHOD] list.", "sentence_label": "current"}, {"sentence": "I have tried many different configurations and have been unsuccessful in getting this problem to go away.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "failover option maxReconnectAttempts is not working.", "sentence_label": "title"}, {"sentence": "I have only one broker is my environment and I am using the failover url in my client code.", "sentence_label": "explanation"}, {"sentence": "The failover url is [URL].", "sentence_label": "explanation"}, {"sentence": "I have specified maxReconnectAttempts as 1000 so if my broker is down my client will try atleast 1000 times for reconnect before giving the error.", "sentence_label": "explanation"}, {"sentence": "But as soon as my broker is down, my client exits after trying one time to reconnect.", "sentence_label": "current"}, {"sentence": "My client is supposed to try atleast 1000 times to reconnect.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Inactivity Monitor: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long", "sentence_label": "title"}, {"sentence": "From a different poster: I'm programming some kind of messaging program that sends messages in sparse frequency using activeMQ.", "sentence_label": "explanation"}, {"sentence": "I got exceptions like following and connection between client and activeMQ server is closed.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "EOFExceptions and Broken Pipe exceptions everywhere in 5.0 (my services seem to run fine under 4.1 and 4.1.1 and somewhat better in 5.1-SNAPSHOT [if you don't count the queue size problem] which is critical)", "sentence_label": "title"}, {"sentence": "I keep getting these errors when any of my services startup...", "sentence_label": "current"}, {"sentence": "This version doesn't look too stable.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "possible dynamic instability in AMQStore indexes", "sentence_label": "title"}, {"sentence": "Due to incorrect assignment of index names - an index physical file can be shared between different durable subscribers - which leads to a dynamic instability of the underlying index - with undefined results.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AMQ Store deletes data files which are in use", "sentence_label": "title"}, {"sentence": "The AMQ Store allocates entries in the data logs for commands (including messages/acknowledgements/transaction boundaries etc) - but relies on the reference store for keeping track of data files that are being used.", "sentence_label": "current"}, {"sentence": "Updates to the reference store happen at a [METHOD] - asynchronously.", "sentence_label": "explanation"}, {"sentence": "The problem is that for a fast producer, the current data file (one being written to) can move on past the last known data file to the reference store.", "sentence_label": "current"}, {"sentence": "As the [METHOD] task is a scheduled task - and not coupled to check points - the cleanup task can remove data files that the reference store is not yet aware of AND have are previous to the current data file being written too.", "sentence_label": "current"}, {"sentence": "This issue can result in errors from the AMQ Store such as:[URL]", "sentence_label": "drawback"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Dead loop on log file reading", "sentence_label": "title"}, {"sentence": "We restarted our activemq instance(5.13.4) but found it hung on recovering data.", "sentence_label": "current"}, {"sentence": "I got the data and ran a debug and found these:[TRACE]", "sentence_label": "current"}, {"sentence": "I don't know if this is a problem when the file is saved or there is something need to be fixed when reading.", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Negative queue size (reproducible)", "sentence_label": "title"}, {"sentence": "When you \"purge\" queue from web admin console, it zeroes queue message counter.", "sentence_label": "current"}, {"sentence": "But if you have an active consumer at that time which pre-fetched messages than your consumer will keep sending ack as it process messages from its buffer.", "sentence_label": "current"}, {"sentence": "ActiveMQ will keep decrement counter upon receiving each ack.", "sentence_label": "current"}, {"sentence": "So when consumer is done queue will show MINUS<consumer buffer size>.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "HTTP transport broken in 5.12", "sentence_label": "title"}, {"sentence": "A regression from [URL].", "sentence_label": "useless"}, {"sentence": "Connection watchdog is started for every initiated connection and stopped on WireFormatInfo command.", "sentence_label": "explanation"}, {"sentence": "HTTP transport doesn't send WireFormatInfo so the watchdog never realises that the connection has been successfully established.", "sentence_label": "current"}, {"sentence": "The connection gets terminated every 30 seconds by the watchdog.", "sentence_label": "current"}, {"sentence": "At the beginning, everything looks fine, but then you start getting exceptions and start losing packets.", "sentence_label": "current"}, {"sentence": "I haven't seen that myself, but I had people reporting that if HTTP transports are in use, it eventually destabilises the broker and affects non-HTTP transports too.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Reconnection attempt logic seems wrong in JmsConnector#doInitializeConnection", "sentence_label": "title"}, {"sentence": "the reconnection attempts logic based on the reconnection policy seems wrong.", "sentence_label": "current"}, {"sentence": "In [CLASS] the loop trying to reconnect to the foreign broker only execute once due to the erroneous test in the while [CODE] should be [CODE].", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Preallocation strategy of zeros can leak file descriptors causing crash", "sentence_label": "title"}, {"sentence": "If the preallocationStrategy is set to 'zeros', ActiveMQ can intermittently become unable to allocate direct buffer memory with the default JVM settings.", "sentence_label": "current"}, {"sentence": "The exception isn't handled, and ends up both creating an empty journal file and, more importantly, leaking a file descriptor.", "sentence_label": "drawback"}, {"sentence": "ActiveMQ eventually runs out of file descriptors and crashes.", "sentence_label": "drawback"}, {"sentence": "In addition to handling this condition, perhaps the default ACTIVEMQ_OPTS_MEMORY settings should configure enough direct memory to allow some multiple of log files to be created near simultaneously, or at least this possibility documented in the KahaDB settings.", "sentence_label": "explanation"}, {"sentence": "Relevant logs:[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Failover transport memory leak on rollback", "sentence_label": "title"}, {"sentence": "See this description:[URL]", "sentence_label": "explanation"}, {"sentence": "I'm not sure but maybe the [CLASS] should call [METHOD] instead of [METHOD]", "sentence_label": "expected"}, {"sentence": "Cheers,", "sentence_label": "useless"}, {"sentence": "Fabrice", "sentence_label": "useless"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ActiveMQ corrupted state when local disk fills up and Queues begin to buffer to KahaDB", "sentence_label": "title"}, {"sentence": "There are already issues reporting this in AMQ-3098 and AMQ-5786 but they have been closed as Incomplete, I've left a comment on 5786 but I fear that it may get lost.", "sentence_label": "useless"}, {"sentence": "Fundamentally KahaDB & ActiveMQ do not survive if Queues start filling up and buffering to KahaDB disk when the disk then becomes full because of an external issue (in our case rsyslog).", "sentence_label": "current"}, {"sentence": "Because KahaDB does not pre-allocate space, it seems vunerable to this case.", "sentence_label": "explanation"}, {"sentence": "I will attach broker logs and Kahadb store during the corrupted state.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Broker crashes after a few minutes of reading and writing messages", "sentence_label": "title"}, {"sentence": "I am using a Replicated Level DB setup of ActiveMQ 5.13.1", "sentence_label": "explanation"}, {"sentence": "The cluster starts successfully, however the broker crashes after a few minutes of reading and writing messages.", "sentence_label": "current"}, {"sentence": "The log contains either one of the following two stack traces:[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Found (and fixed) 3 instances of impossible casts in the activemq code", "sentence_label": "title"}, {"sentence": "Running static analysis on activemq I was able to identify 3 instances of impossible casts in the code.", "sentence_label": "current"}, {"sentence": "Attaching patch files to fix.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unable to config maxThreadPoolSize in broker", "sentence_label": "title"}, {"sentence": "The default value of maxThreadPoolSize is Integer.MAX_VALUE in TaskRunnerFactory for broker service, which does not make any sense.", "sentence_label": "current"}, {"sentence": "If you set [CODE] but you are still able to create as many threads as you want.", "sentence_label": "expected"}, {"sentence": "Suggest to make this configurable to limit the threads number the ActiveMQ broker can create.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ActiveMQ failed to start with KahaDB reporting corrupt journal records and throwing NegativeArraySizeException", "sentence_label": "title"}, {"sentence": "ActiveMQ failed to start up, with the following information:[TRACE]", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "VMTransport uses broken double checked locking", "sentence_label": "title"}, {"sentence": "the [METHOD] method uses the \"double checked locking\" idiom to avoid the synchronization overhead if the messageQueue has already been instantiated.", "sentence_label": "explanation"}, {"sentence": "however, this idiom is broken unless the reference is marked as volatile.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "allowLinkStealing option is not working when using mqtt over websocket", "sentence_label": "title"}, {"sentence": "A first tcp/ip connection is still alive even if a second client with the same clientId connects with allowLinkStealing as true.", "sentence_label": "current"}, {"sentence": "There is a server log as follows in this scenario.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "I tested this scenario by using hivemq websocket.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot use the JDBCIOExceptionHandler when kahadb is configured with lease-database-locker", "sentence_label": "title"}, {"sentence": "The JDBCIOExceptionHandler is limited to operating with the JDBCPersistenceAdapter.", "sentence_label": "current"}, {"sentence": "It should be allowed to work in combination with the KahaDBPersistenceAdapter if it's configured to use a LeaseDatabaseLocker as a locker.", "sentence_label": "expected"}], "project_name": "activemq.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "NullPointerException in DemandForwardingBridgeSupport.collectBrokerInfos", "sentence_label": "title"}, {"sentence": "We have seen the following NPE setting up a demand forwarding bridge [TRACE]", "sentence_label": "explanation"}, {"sentence": "This occurred in one of our tests but only under load so seems to be a race condition of some sort.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AMQP Memory leaks in the AMQP Protocol converter on sender link close", "sentence_label": "title"}, {"sentence": "On close of sender links we do not clean up all the mappings for the ConsumerContext instances which leads a build up of context objects in the subscriptions map.", "sentence_label": "current"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "QueueBrowser hangs when browsing large queues", "sentence_label": "title"}, {"sentence": "When trying to browse a queue with a QueueBrowser, the browsing will hang and never complete.", "sentence_label": "current"}, {"sentence": "This appears to happen only with \"a lot\" of message in the queue.", "sentence_label": "explanation"}, {"sentence": "1000 messages works correctly, but 10000 hangs.", "sentence_label": "explanation"}, {"sentence": "I have attached a unit test that exhibits the problem.", "sentence_label": "explanation"}, {"sentence": "Change the \"messageToSend\" variable in the test method to see the difference between small queue size and large queue size.", "sentence_label": "explanation"}, {"sentence": "I've attached the unit test code as well as the output from one of the runs with 10000 messages.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "MQTT Transport codec does not properly deal with partial read of frame header", "sentence_label": "title"}, {"sentence": "The Codec used to parse MQTT Frames does not properly deal with the case where only part of the initial frame header arrives.", "sentence_label": "current"}, {"sentence": "This can happen in NIO+SSL etc where the incoming packet has only the first byte or so of the frame which causes the process header method get stuck in an endless loop.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot consume messages. Failed to fill batch . cased by NegativeArraySizeException", "sentence_label": "title"}, {"sentence": "Consumers cannot consume any message.", "sentence_label": "current"}, {"sentence": "I had to delete the queue in order to get ActiveMQ to start consuming messages.", "sentence_label": "drawback"}, {"sentence": "With the error messages below:[TRACE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Queue Messages lost after read timeout on REST API.", "sentence_label": "title"}, {"sentence": "I have been trying to send/receive messages via a Queue using the REST API.", "sentence_label": "explanation"}, {"sentence": "While testing I found that some messages got lost after a consuming request times out when no message is available.", "sentence_label": "current"}, {"sentence": "Here is a transcript of the test case I used:[CODE]", "sentence_label": "explanation"}, {"sentence": "The last wget returns after the given read timeout without any message.", "sentence_label": "current"}, {"sentence": "When looking at the managament console, the message has been consumed.", "sentence_label": "current"}, {"sentence": "I tested this with 5.8.0 on linux as well as with 5.8.0, 5.9.0 and a freshly built 5.10.0 on windows.", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] hangs when amqp+nio is used", "sentence_label": "title"}, {"sentence": "The follow test will cause a hang when run against amqp+nio transport.", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Session.commit() hangs when amqp+nio+ssl is used", "sentence_label": "title"}, {"sentence": "This is similar to AMQ-5042.", "sentence_label": "explanation"}, {"sentence": "To reproduce run [METHOD] using nio+ssl.", "sentence_label": "explanation"}, {"sentence": "(I will add JMSClientNioPlusSslTest shortly)", "sentence_label": "explanation"}], "project_name": "activemq.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Allow different implementation of transfer mechanism in the DefaultRepositoryProxyConnectors class", "sentence_label": "title"}, {"sentence": "We would like to use a different implementation for transferring an artifact from the remote proxy.", "sentence_label": "expected"}, {"sentence": "This particular remote proxy we have is not Maven repository.", "sentence_label": "explanation"}, {"sentence": "Our transport library handles the bridging work so we would like to use it instead of the default implementation using Wagon.", "sentence_label": "expected"}, {"sentence": "Could you make a change in the DefaultRepositoryProxyConnectors so that it can be extendable?", "sentence_label": "expected"}, {"sentence": "We would just want to override the transport method which uses Wagon.", "sentence_label": "expected"}, {"sentence": "Please take a look at the submitted patch.", "sentence_label": "explanation"}, {"sentence": "Thanks.", "sentence_label": "useless"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add description field to the different types of repositories", "sentence_label": "title"}, {"sentence": "When looking over the repositories page it would be useful to have a description for each of the repositories configured.", "sentence_label": "expected"}, {"sentence": "Psonally I need it to be able to describe the owner of the repository and indended purpose.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "ability to use file protocol using UNC path for Managed repository", "sentence_label": "title"}, {"sentence": "Currently, if I try to use a network share with a UNC path when creating a Managed Repository, the path is replaced with a newly created directory on the system root.", "sentence_label": "current"}, {"sentence": "For example, using the path of file:/\\\\path_to_network_share gets changed to file:/C:/path_to_network share.", "sentence_label": "example"}, {"sentence": "I have tried a combination of strings for the url but have not been able to connect to a network share.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Ability to delete an artifact from the web interface", "sentence_label": "title"}, {"sentence": "Sometimes when viewing an artifact through the Archiva Web UI, I'd like to delete it from the repository.", "sentence_label": "expected"}, {"sentence": "Currently the only way to do this by deleting it from the managed repository filesystem.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow uploading multiple artifacts", "sentence_label": "title"}, {"sentence": "Just a suggestion.", "sentence_label": "explanation"}, {"sentence": "In cases like uploading 10 or more artifacts, it's hassle uploading 1 artifact at a time.", "sentence_label": "drawback"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add the possibility to schedule retrieve remote indexes when application startup", "sentence_label": "title"}, {"sentence": "When Starting Archiva, it would be nice to retreive all remote indexes that are checked to be used for remote repository before activating the automatic retreive actions.", "sentence_label": "expected"}, {"sentence": "Idealy a parameter would be nice to all download on startup.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "downloading (optionnaly) remote index to display remote artifacts in search results", "sentence_label": "title"}, {"sentence": "if a managed repo has remote repos, artifacts are available but not display in a search result.", "sentence_label": "current"}, {"sentence": "configure an optionnel remote index url", "sentence_label": "expected"}, {"sentence": "running this download in a configurable schedule", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "search on artifacts with OSGI Metadatas fields", "sentence_label": "title"}, {"sentence": "Ability to search on some OSGI metadatas symbolic-name, version, export-packages.", "sentence_label": "expected"}, {"sentence": "See improvmenents in maven-indexer MINDEXER-36", "sentence_label": "explanation"}, {"sentence": "Need an update of maven-indexer.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "monitor repository scanning progress", "sentence_label": "title"}, {"sentence": "currently it's hard to tell where a repository scanning task is up to.", "sentence_label": "current"}, {"sentence": "Even though the percentage completion may not be easy to estimate, we can assess how many files have already been processed.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Web services for editing a managed repository", "sentence_label": "title"}, {"sentence": "Currently, we only have web services for add, delete and retrieve of managed repositories.", "sentence_label": "current"}, {"sentence": "This should also show up in the audit events and audit log report, and must be indicated that it was done remotely.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Web services for repository merging or artifact promotion", "sentence_label": "title"}, {"sentence": "I think CRUD for managed repositories should be a pre-requisite of this.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for NPanday artifact types", "sentence_label": "title"}, {"sentence": "NPanday (<URL>) declares a number of new artifact handlers that Maven can use as extensions to be able to deploy dotNET artifacts into a repository.", "sentence_label": "explanation"}, {"sentence": "There should be an Archiva plugin that can recognise these types for path conversion so that they can be uploaded through the web form, and viewed in the artifact information page correctly.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Proxy should work transparently with either maven 1.x or 2.x repositories.", "sentence_label": "title"}, {"sentence": "Have the maven-proxy act as either a maven 1.x or maven 2.x repository, depending on which client accesses it.", "sentence_label": "explanation"}, {"sentence": "Brett believed this should be managable with aliasing.", "sentence_label": "expected"}, {"sentence": "This was originally posted as a maven-proxy feature at <URL>", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "caching repository query interface", "sentence_label": "title"}, {"sentence": "need to be able to query the repository to see if artifacts exist, what versions are available, etc.", "sentence_label": "expected"}, {"sentence": "This needs to interoperate with the indexing, and where applicable should cache information, balancing the need to keep a low memory overhead but avoid repetitive disk reads on metadata files.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "utilise repository relocation information during conversion of an artifact", "sentence_label": "title"}, {"sentence": "we should allow some extra metdata in the m1 pom that can be recognised as relocation information: <CODE>", "sentence_label": "expected"}, {"sentence": "when encountering this, the converted POM and JAR will go to the new location in the m2 repository, and the marker POM (just the relocation information) should go to the old location (and any artifact there should be removed)", "sentence_label": "explanation"}, {"sentence": "This would allow us to move Jakarta commons en mass to the dotted groupId layout for example.", "sentence_label": "example"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "repository: transitive dependency report", "sentence_label": "title"}, {"sentence": "repository tool to ensure that transitive dependencies will work.", "sentence_label": "expected"}, {"sentence": "we basically need to know that every artifact that is referenced in one POM is actually in the repository along with its POM.", "sentence_label": "explanation"}, {"sentence": "We need to know that the dependency relationships among all artifacts in the repository form a closed set.", "sentence_label": "expected"}, {"sentence": "otherwise the transitive dependency mechanism in m2 will break and we need to be wary of this.", "sentence_label": "drawback"}, {"sentence": "eventually i would like to create graphical representations of the dependencies amongst projects but this can come later.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "LDAP Support and Documentation", "sentence_label": "title"}, {"sentence": "It would be very nice to integrate with our corporate LDAP rather than maintain a separate User DB for authentication.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add remote repository health check", "sentence_label": "title"}, {"sentence": "A cron based check of remote repositories (cron value per remote).", "sentence_label": "explanation"}, {"sentence": "Option:<LIST>", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "using LDAP can be configurable with the ui", "sentence_label": "title"}, {"sentence": "currently to use ldap users/admin must edit a configuration file and restart their instance.", "sentence_label": "current"}, {"sentence": "This must be configurable with the ui.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "download artifacts when coming from search results", "sentence_label": "title"}, {"sentence": "Search is based on maven index.", "sentence_label": "explanation"}, {"sentence": "Users can have results for artifact not here.", "sentence_label": "explanation"}, {"sentence": "So going to artifact info display an empty result.", "sentence_label": "current"}, {"sentence": "We must download artifacts.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Upload (deploy) artifacts to a repository - via a web form (not using wagon)", "sentence_label": "title"}, {"sentence": "The web interface should allow to upload artifacts to the repository.", "sentence_label": "expected"}, {"sentence": "For M1 one could just ftp the artifacts as needed but with M2 having to go through the file:deploy plugin is a pain.", "sentence_label": "drawback"}, {"sentence": "Archiva could help a lot here", "sentence_label": "benefit"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "ability to have multiple reports", "sentence_label": "title"}, {"sentence": "currently the reports are all aggregated into one representation and execution.", "sentence_label": "current"}, {"sentence": "It should be possible to have separate groups, with just the health ones tied to the indexing and the others run on demand.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "add user management and basic security", "sentence_label": "title"}, {"sentence": "this issue just needs the ability to create and manage users and groups, log in, and restrict access to the administration interface.", "sentence_label": "expected"}, {"sentence": "Further operations may add the need for more security later on.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "web service interface", "sentence_label": "title"}, {"sentence": "this needs a new jira component.", "sentence_label": "explanation"}, {"sentence": "We need a comprehensive web services interface to the application.", "sentence_label": "expected"}, {"sentence": "Like RSS, it should be a new view on the same actions.", "sentence_label": "expected"}, {"sentence": "The more we can derive that from the repository-core interfaces, the better.", "sentence_label": "expected"}, {"sentence": "This should include administration and security.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "create a second index with a subset of information, and have it compressed", "sentence_label": "title"}, {"sentence": "required for the eclipse plugin.", "sentence_label": "explanation"}, {"sentence": "Will need to follow up with Jason on exactly what data is required.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Repository Manager should have a means to remove old snapshot builds", "sentence_label": "title"}, {"sentence": "A nice feature for the MRM to have would be a way to set rules on when older SNAPSHOT builds of the form <CODE> should be removed from the repository.", "sentence_label": "expected"}, {"sentence": "This could either be time based (for example any builds older than a month) or count based (for example keep only the newest 5 builds).", "sentence_label": "expected"}, {"sentence": "In addition to the artifact itself, md5 and sha1 files should also be cleaned out.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Delete more then one Artifact at once", "sentence_label": "title"}, {"sentence": "As suggested by Wendy <URL> I open this issue to keep track on the feature of bulk delete actions on artifacts.", "sentence_label": "expected"}, {"sentence": "As described in <URL>:\"Imagine I would like to remove <CODE> and all its children/subprojects (that are referenced as modules in the parent).\"", "sentence_label": "expected"}, {"sentence": "It would be nice to have form that allow to only specific the package and then delete everything below it.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add artifact search box to the default decorator", "sentence_label": "title"}, {"sentence": "Add artifact search box to the default decorator.", "sentence_label": "expected"}, {"sentence": "Being able to search from every page highlights the improved search for 1.2 and reduces the amount of clicks to get to the quicksearch page.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "add RSS view to repository manager", "sentence_label": "title"}, {"sentence": "possibly needs a new component in JIRA.", "sentence_label": "explanation"}, {"sentence": "Items that could have RSS:<LIST>", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "add a background task scheduler", "sentence_label": "title"}, {"sentence": "we need to be able to schedule tasks.", "sentence_label": "expected"}, {"sentence": "We should use quartz, and reuse code from Continuum that does similarly.", "sentence_label": "expected"}, {"sentence": "There needs to be a way to add/remove/configure scheduled tasks such as indexing, report execution and syncing", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Ability to merge repositories", "sentence_label": "title"}, {"sentence": "Need to be able to merge one repository into another, updating metadata and not overwriting existing artifacts.", "sentence_label": "expected"}, {"sentence": "The source repository should remain unchanged.", "sentence_label": "expected"}, {"sentence": "It should produce output listing what was merged and what wasn't.", "sentence_label": "expected"}, {"sentence": "Additions to the target repo should show in the audit log.", "sentence_label": "expected"}, {"sentence": "Related thread: <LINK>", "sentence_label": "example"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide 302 redirect for latest SNAPSHOT", "sentence_label": "title"}, {"sentence": "It would be very useful to have a single link that would always give you the latest snapshot jar, for example: <LINK>", "sentence_label": "expected"}, {"sentence": "Right now this is 404 because there's no file called <FILE>;", "sentence_label": "explanation"}, {"sentence": "instead, it has a specific jar file with a versioned name, for example <FILE>.", "sentence_label": "example"}, {"sentence": "It would be handy if Archiva recognized the URL above and provided a 302 redirect to the current latest deployed snapshot.", "sentence_label": "benefit"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Virtual repositories or repository grouping", "sentence_label": "title"}, {"sentence": "A number of managed repositories can be grouped together with that group having only one url.", "sentence_label": "explanation"}, {"sentence": "So you only need to specify that url in the <FILE> file and when Archiva receives a request via that url, it would look for that artifact from the repositories belonging to that group.", "sentence_label": "expected"}, {"sentence": "More details are dicussed here: <LINK>", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Project Tree view", "sentence_label": "title"}, {"sentence": "Similar to the Dependency Tree tab, it would be nice to see a Project Tree showing the pom hierarchy (parent-and-modules) with links.", "sentence_label": "expected"}, {"sentence": "The data should be available in plain text as well (xml through the xmlrpc interface?)", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support inclusion of pom file when deploying an artifact via the web upload form", "sentence_label": "title"}, {"sentence": "Currently the web upload form only supports pom generation when uploading M2 artifacts.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Repository purge feature for snapshots", "sentence_label": "title"}, {"sentence": "We need a way to purge a repository of snapshots older than a certain date, (optionally retaining the most recent one) and fixing the metadata.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "complete the proxy interface", "sentence_label": "title"}, {"sentence": "the current proxy interface is not well integrated and the tests are failing.", "sentence_label": "current"}, {"sentence": "Complete this integration.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add basic managed repository management support on adding repository, deleting repository, and loading repository by id", "sentence_label": "title"}, {"sentence": "Add basic managed repository management support like adding repository, deleting repository, and loading repository by id.", "sentence_label": "expected"}, {"sentence": "The add repository can take the following parameters:<LIST>", "sentence_label": "explanation"}, {"sentence": "deleting and loading a repository can take repository id as parameter.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Switch for disabling user registration", "sentence_label": "title"}, {"sentence": "It would be nice to have a single switch to disable the registration of arbitrary users, so new users can only be registered by the administrator.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Adding a find jar by checksum functionality to the REST api", "sentence_label": "title"}, {"sentence": "In 1.3.x versions, an applet gave us the possibility to know if a jar (on our local disk) was already in the repo, using the checksum files.", "sentence_label": "explanation"}, {"sentence": "I would like to have this useful functionality back in v2.x,, but through a REST service : I provide a checksum code, and I get the list of artifacts that correspond to this checksum.", "sentence_label": "expected"}, {"sentence": "Thanks !", "sentence_label": "useless"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Show Job Status / Whats going on behind the scenes", "sentence_label": "title"}, {"sentence": "It would be nice to see whats going on in the background, without always looking into the log.", "sentence_label": "expected"}, {"sentence": "Maybe a Log Viewer or such.", "sentence_label": "explanation"}, {"sentence": "When adding a new task like scanning a repo, it would be also nice to get a percentage display or at least to see \"ok, currently i am scanning repo X and have X mb downloaded\" or such.", "sentence_label": "benefit"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "validator: report if artifacts are out of place", "sentence_label": "title"}, {"sentence": "report if artifacts are out of place.", "sentence_label": "expected"}, {"sentence": "you can tell this because in m2 the POM is packaged with the artifact in <FILE-PATH> so with that information you can assess weather the artifact is in the right location.", "sentence_label": "explanation"}, {"sentence": "this should not happen if tools are being used to deploy but it would be a good check to have.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Shutdown of Tomcat causes Exception when running Archiva Project", "sentence_label": "title"}, {"sentence": "It looks like the Quartz thread is still running because the web-context has been unloaded before.", "sentence_label": "current"}, {"sentence": "This could maybe happen because the Quartz threads are not yet under Spring control ([URL]).", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Add proxy connector is broken", "sentence_label": "title"}, {"sentence": "\"id\" attribute for \"property\" tag is no longer available in struts-core 2.1.8.1.", "sentence_label": "current"}, {"sentence": "In the attached patch, the id attribute was just removed and did not encounter a problem doing so.", "sentence_label": "explanation"}, {"sentence": "Also attached a selenium script to add a proxy connector.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Can't download large archive file due to [EXCEPTION]", "sentence_label": "title"}, {"sentence": "I tried to download a large archive(3GB,3,275,052,860 bytes to be precise) that I uploaded to Apache Archiva 1.3.6 using Eclispe Aether API and attempt to download it failed.", "sentence_label": "current"}, {"sentence": "Note: I was able to upload and download 1GB file fine.", "sentence_label": "current"}, {"sentence": "So it may seems that there is probably an attempt to convert a Long value (3,275,052,860) to an Integer value in the code below that results in [EXCEPTION]: For input string: \"3275052860\"", "sentence_label": "explanation"}, {"sentence": "Detail of archiva trace log: [TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unable to restart Archiva after restarting Tomcat : \"SQL Exception: Failed to start database\"", "sentence_label": "title"}, {"sentence": "After restarting Tomcat, I get the following exception in the log file: [TRACE]", "sentence_label": "current"}, {"sentence": "And Archiva does'nt work anymore!!!!!", "sentence_label": "current"}, {"sentence": "Please help!", "sentence_label": "useless"}, {"sentence": "Fanx.", "sentence_label": "useless"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Archiva consumer archetype cannot complete integration-test on windows", "sentence_label": "title"}, {"sentence": "Building archiva as mention in [URL] fail on windows during verify goal in [FILE] of archiva-consumer-archetype", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Error 500 after Login", "sentence_label": "title"}, {"sentence": "Using Version 1.2.1 productive an this error occurs", "sentence_label": "current"}, {"sentence": "Can you help me please?", "sentence_label": "useless"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unable to get artifact-level maven-metadata.xml of artifacts that are only three directory levels deep", "sentence_label": "title"}, {"sentence": "Example request path that would fail: [URL]", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "No access to repositories with guest as a global repo observer", "sentence_label": "title"}, {"sentence": "After granting the Global Repository Observer role to the guest user, I am prompted for an id and password when accessing the url for a managed repository such as the preconfigured 'internal' repo.", "sentence_label": "current"}, {"sentence": "MRM-323 seems to be the same thing, but on Tomcat.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot manually delete artifacts via web GUI", "sentence_label": "title"}, {"sentence": "This bug has caused me considerable amounts of trouble.", "sentence_label": "drawback"}, {"sentence": "If you upload a series of .jar's and make a mistake, you cannot delete the one uploaded artifact that you messed up.", "sentence_label": "current"}, {"sentence": "I uploaded a pom file, but I accidentally left in [CODE].", "sentence_label": "explanation"}, {"sentence": "Now, I can't delete the pom artifact when I log in as admin and delete the artifact from the default internal repo.", "sentence_label": "current"}, {"sentence": "Archiva indicates that I successfully deleted the artifact, but the artifact remains.", "sentence_label": "current"}, {"sentence": "It does not go away if I refresh the page, shift + refresh the page, or log out and log back in.", "sentence_label": "current"}, {"sentence": "This forces me to delete the entire package to which I uploaded 40-something .jar artifacts.", "sentence_label": "drawback"}, {"sentence": "I have to start all over again.", "sentence_label": "drawback"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Bad mod on file in the bundle", "sentence_label": "title"}, {"sentence": "When building the bundle of Archiva, some files have incorrect mod: [TRACE]", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception trying to change Passwort", "sentence_label": "title"}, {"sentence": "trying to change the passwort results in exception as shown in ghe screenshot", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "One of our two archiva servers does appear to close file descriptors.", "sentence_label": "title"}, {"sentence": "We have two archiva servers.", "sentence_label": "explanation"}, {"sentence": "One gets \"Too many files open\" after a few days (a few hundred builds) and has to be restarted.", "sentence_label": "current"}, {"sentence": "However the second server fails to even perform one build.", "sentence_label": "current"}, {"sentence": "If you see the attached file you can see archiva exhausts all of it file descriptors in under a minute.", "sentence_label": "explanation"}, {"sentence": "After that the server has to be restarted.", "sentence_label": "drawback"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot upload artifact to WEB UI any more", "sentence_label": "title"}, {"sentence": "Here is reference to the discussion [URL]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "pom version is not resolved", "sentence_label": "title"}, {"sentence": "I compose pom.version from 4 properties:[CODE]", "sentence_label": "explanation"}, {"sentence": "But it looks Archiva does not resolve pom.version and it is not possible to browse this artifact (see attached screenshot).", "sentence_label": "current"}, {"sentence": "Attached [FILE], mentioned project's pom.xml and screenshot of browse page.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Network proxy does not work for version 1.1", "sentence_label": "title"}, {"sentence": "With the default setup of archiva (after following instructions about how to setup archiva in tomcat) I am unable to use a network proxy.", "sentence_label": "current"}, {"sentence": "The id is devproxy, the protocol is http, the host is devproxy (dns entry for the proxy server) and the port is 80.", "sentence_label": "explanation"}, {"sentence": "I've left the repositories the same as in the default setup, and in the proxy connectors I've changed central from (direct connection) to devproxy.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Archiva runs out of heap memory", "sentence_label": "title"}, {"sentence": "Archiva appears to run out of heap memory frequently and the service crashes.", "sentence_label": "current"}, {"sentence": "512mb should be more than enough.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "should not respond with a 404 if proxying a file results in a remote error", "sentence_label": "title"}, {"sentence": "if any repository returns success, return success", "sentence_label": "current"}, {"sentence": "otherwise, if any repository returns in error, return a generic error (500), saying to check the logs.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot download a strut-module artifact in a Legacy repository", "sentence_label": "title"}, {"sentence": "I still have legacy Maven 1.1 projects which uses the struts-module plugin.", "sentence_label": "explanation"}, {"sentence": "I was using maven-proxy until now but decided to switch to archiva.", "sentence_label": "explanation"}, {"sentence": "However when I try to download a struts-module in my Maven 1.X repository, I get the following exception: [TRACE]", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Link to mailling list subscription do not work", "sentence_label": "title"}, {"sentence": "Currently all the links to subscribe on the mailing list do not work on this page [URL] result in 404 page not found.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Rest call for copyArtifact throws [EXCEPTION] if destination exists", "sentence_label": "title"}, {"sentence": "The rest service copyArtifact throws [EXCEPTION], if the destination artifact exists already.", "sentence_label": "current"}, {"sentence": "Should either overwrite, or return a proper error response.", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Obsolete snapshots are not getting deleted from the disk", "sentence_label": "title"}, {"sentence": "The configuration of the repository: [CODE]", "sentence_label": "explanation"}, {"sentence": "After a month of operation, old snapshot files are still in the repository directory.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unable to deploy on wildfly 10", "sentence_label": "title"}, {"sentence": "I can't deploy archiva on wildfly 10: [TRACE]", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Deleting files from repository in filesystem confuses Archiva", "sentence_label": "title"}, {"sentence": "Archiva seems to have a problem when files and/or directories from its repository are deleted.", "sentence_label": "current"}, {"sentence": "I see lots of exceptions and such messages in the archiva.log: [TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Failure to publish sbt plugins", "sentence_label": "title"}, {"sentence": "Sbt plugins have somewhat specific structure, because they can be compiled for specific version of Scla and specific version of Sbt.", "sentence_label": "explanation"}, {"sentence": "If I try to publish [URL] to Archiva, it gets upload successfully, directories are created, but no content.", "sentence_label": "current"}, {"sentence": "The log file shows an error: [ERROR]", "sentence_label": "explanation"}, {"sentence": "But if you generate pom file with sbt itself, it will have [CODE]", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Change Password via Edit Details button not working", "sentence_label": "title"}, {"sentence": "After logging into our Archiva instance, I can click on the Edit Details button to change the password.", "sentence_label": "current"}, {"sentence": "I enter the existing password and the new password (twice) and click the OK button.", "sentence_label": "current"}, {"sentence": "The dialog remains on screen with no indication of what has happened.", "sentence_label": "current"}, {"sentence": "After a while, I closed by web browser window and opened a new one - I then attempted to login with the new password, only to find that the password change had not occurred.", "sentence_label": "current"}, {"sentence": "After an investigation, I found that the change password dialog was making a POST to [URL], which was failing with a 500 Internal Server Error.", "sentence_label": "explanation"}, {"sentence": "The stack trace follows [TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Filelock unit test issue on windows file system", "sentence_label": "title"}, {"sentence": "[METHOD] is failing on line 78 because of an execption raised in [EXCEPTION]", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "It's disrupting behaviour of plugin on windows 8.1.", "sentence_label": "explanation"}, {"sentence": "[URL] is showing similar symptom.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Customised guest user for LDAP not working", "sentence_label": "title"}, {"sentence": "When using the following: [CODE] I was unable to download anything without authentication.", "sentence_label": "current"}, {"sentence": " Renaming the LDAP user to guest and then changing the configuration solved the problem.", "sentence_label": "explanation"}, {"sentence": "(Note, it would still be great to not require this user at all, and just let 'guest' be built-in instead)", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "validation doesn't work for Windows users on path of add managed repository page", "sentence_label": "title"}, {"sentence": "Windows paths typically have ':' in them for the drive letter, but this is no longer accepted as valid in the location field of the repository.", "sentence_label": "current"}, {"sentence": "This applies to other settings such as \" \" as well, we should only exclude those that are a problem for XSS", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "problem reports for a given repository show errors in other repositories", "sentence_label": "title"}, {"sentence": "after scanning my repositories, I searched for problem reports constrained by the 'test' repository.", "sentence_label": "explanation"}, {"sentence": "However, while it was a limited set of reports, some from other repositories (notably internal) also appeared.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "metadata updater consumer should delete any proxy metadata that it cannot parse.", "sentence_label": "title"}, {"sentence": "metadata updater consumer should delete any proxy metadata that it cannot parse.", "sentence_label": "expected"}, {"sentence": "The following exception is thrown: [TRACE]", "sentence_label": "current"}, {"sentence": "The proxy metadata looks like this: [CODE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "upload page does not allow certain characters in version string", "sentence_label": "title"}, {"sentence": "Unfortunately, I'm required to have some version numbers like this: [CODE]", "sentence_label": "explanation"}, {"sentence": "This is ok for the mvn deploy mechanism for uploading to archiva, but when uploading from the new UI web page provided by archiva 1.1.1 this causes problems, and will not upload.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "track consumers in use and index version to know when an repository needs to be reindexed", "sentence_label": "title"}, {"sentence": "currently if you add consumers, it will not trigger a re-scan of the repository.", "sentence_label": "current"}, {"sentence": "By tracking the ones in use we should be able to trigger full scans of the repository as appropriate, also making upgrades easier", "sentence_label": "expected"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Archiva does not expose certain artifacts for download", "sentence_label": "title"}, {"sentence": "I have a module that publishes an artifact of type tar, but when I browse to it in Archiva, the tar file is not available for download", "sentence_label": "current"}, {"sentence": "For a given artifact: [CODE]", "sentence_label": "explanation"}, {"sentence": "In the directory there does exist a file of compatible layout, [JAR]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Syntax error in DOAP file release section; wrong bug-database URL", "sentence_label": "title"}, {"sentence": "DOAP files can contain details of multiple release Versions, however each must be listed in a separate release section,", "sentence_label": "current"}, {"sentence": "for example: [CODE]", "sentence_label": "example"}, {"sentence": "Please can the project DOAP be corrected accordingly?", "sentence_label": "useless"}, {"sentence": "Also the DOAP still references Codehaus", "sentence_label": "explanation"}, {"sentence": "Thanks.", "sentence_label": "useless"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Urls are not correctly constructed for artifacts with multiple extensions", "sentence_label": "title"}, {"sentence": "For instance [FILE] will assume extension is zip", "sentence_label": "example"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] exception with JBoss", "sentence_label": "title"}, {"sentence": "The redback-integration artifact still contains some references on taglibs which doesn't exist anymore", "sentence_label": "current"}, {"sentence": "this cause a failure when deploying in jboss.", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Javascript error when no archiva_login cookie present", "sentence_label": "title"}, {"sentence": "When the archiva_login cookie is not present the method to retrieve the user session fails with a javascript error.", "sentence_label": "current"}, {"sentence": "This causes the main page to not load correctly.", "sentence_label": "current"}, {"sentence": "Adding the snippet below fixes the issue - but probably doesn't conform to your style guidelines.", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "The underlying problem is that cookieContent is undefined and the call to [CODE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "RSS feeds do not work after Struts upgrade", "sentence_label": "title"}, {"sentence": "Struts is grabbing them and not finding the feeds servlet.", "sentence_label": "current"}, {"sentence": "May also impact the XMLRPC interface.", "sentence_label": "drawback"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "archiva-cli does not work", "sentence_label": "title"}, {"sentence": "Multiple failures due to missing dependencies / spring configuration.", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NPE while browsing artifact with missing pom", "sentence_label": "title"}, {"sentence": "The browsing page for some artifacts is failing with the following error", "sentence_label": "current"}, {"sentence": "An error has happened you must contact the administrator to check the logs.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "\"Remember me\" not working", "sentence_label": "title"}, {"sentence": "The remember me feature doesn't seem to work.", "sentence_label": "current"}, {"sentence": "I get logged out quite frequently (didn't use a stopwatch, but about 10-15 minutes of inactivity are sufficient to log me out)", "sentence_label": "current"}], "project_name": "archiva.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Complete relationship information in the structure model", "sentence_label": "title"}, {"sentence": "Complete the set of relationships surfaced by the structure model", "sentence_label": "expected"}, {"sentence": "for example, including support for declare parents etc.", "sentence_label": "example"}, {"sentence": "Mik you had a document listing the things yet to be done here?", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "memory footprint in weaver", "sentence_label": "title"}, {"sentence": "The footprint of the weaver is pretty high even if classes are not woven.", "sentence_label": "current"}, {"sentence": "I use the weaver implementation to weave on a class per class basis in the weaving class loader and observed an immense memory consumption because every class I would like to give to the weaver got parsed and it seems to me that all these parsing information are kept somewhere.", "sentence_label": "current"}, {"sentence": "Is this really necessary?", "sentence_label": "useless"}, {"sentence": "Would it be possible to improve the memory footprint somehow?", "sentence_label": "expected"}, {"sentence": "Maybe be skipping unnecessary information after the parsing?", "sentence_label": "expected"}, {"sentence": "Even much nicer would be if these is a possibility to do fastmatch without parsing the incoming class completely.", "sentence_label": "expected"}, {"sentence": "That would reduce the number of created objects during dynamic class loading tremendously.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "build cancel during weaving", "sentence_label": "title"}, {"sentence": "The build can not be cancelled during the bytecode weaving stage.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "-inpath instead of -injars so directories can be passed in.", "sentence_label": "title"}, {"sentence": "To utilise the binary weaving capability of aspectj, it is currently necessary to jar up the class files that you want to weave into and pass the jar in on the -injars option to the compiler.", "sentence_label": "current"}, {"sentence": "This can be awkward and makes ANT scripts and IDE integration more difficult that it needs to be.", "sentence_label": "drawback"}, {"sentence": "It would be nice to replace the -injars option with a -inpath option that could cope with either jar files or directories (having a format very like 'classpath').", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "-Xreweavable should be the default", "sentence_label": "title"}, {"sentence": "In order to facilitate widespread use of LTW we need to ensure code is compiled with \u00c3\u0082\u00c2\u00a8CXreweavable.", "sentence_label": "expected"}, {"sentence": "However we cannot rely on developers to use this flag so it must be the default.", "sentence_label": "expected"}, {"sentence": "Unfortunately the current code bloat is unacceptable for large projects.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Extend test coverage for aspect libraries and incremental compilation", "sentence_label": "title"}, {"sentence": "Extend our test coverage for binary weaving from aspect libraries and incremental compilation, the two newest areas in the codebase.", "sentence_label": "expected"}, {"sentence": "Can we leverage our existing suite of tests in some way and exercise them in these new modes?", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Special case if(false) to not require a dynamic test", "sentence_label": "title"}, {"sentence": "FastMatch, the efficient pattern matching for pointcuts on the constant pool, is currently only implemented for the within pointcut.", "sentence_label": "current"}, {"sentence": "I am planning to provide further oimplementations for other pointcuts by release 1.2.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Complete implementation of @SuppressAjWarnings", "sentence_label": "title"}, {"sentence": "ensure that @SuppressAJWarnings are indeed suppressed during pointcutoperations.", "sentence_label": "expected"}, {"sentence": "This requires wrapping major pointcut operations with calls to Lint from the associated advice.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Improve the extensibility of AspectJ weaver to support PointcutDoctor", "sentence_label": "title"}, {"sentence": "As seen at AOSD 2007, PointcutDoctor (\"web-page-link\") is a natual extension of AJDT that helps developers write correct pointcuts.", "sentence_label": "explanation"}, {"sentence": "It shows \"almost matched\" join points for a pointcut, and explains *why* a pointcut doesn't match (or does match) a given join point.", "sentence_label": "explanation"}, {"sentence": "The goal of this request is to improve the extensibility of AspectJ weaver so that tools like PointcutDoctor are able to augment the weaving process, and thus, run on top of unmodified AspectJ compiler.", "sentence_label": "expected"}, {"sentence": "The key of this improvement is to allow an extender to add customized ShadowMungers (i.e. subclasses of ShadowMunger) that run in parallel to other ShadowMungers such as Advice.", "sentence_label": "explanation"}, {"sentence": "That is, as an Advice, these additional ShadowMungers will go through each Shadow produced in the weaving process and perform operations defined by the extender.", "sentence_label": "explanation"}, {"sentence": "We are more than happy to implement these changes and release them as a patch.", "sentence_label": "useless"}, {"sentence": "We greatly appreciate your comments!", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "support annotation value matching", "sentence_label": "title"}, {"sentence": "There is a need sometimes to determine statically (at weave time) whether an annotation has a particular value.", "sentence_label": "expected"}, {"sentence": "If it can be determined at weave time rather than using reflection code within the advice, certain scenarios can be optimized.", "sentence_label": "benefit"}, {"sentence": "For example, this trace annotation <CODE>", "sentence_label": "example"}, {"sentence": "Without the ability to match on annotation values statically, if we came across this method and advice <CODE>, we would have to do reflection in the advice just to discover we shouldn't be tracing.", "sentence_label": "drawback"}, {"sentence": "If that scenario could be matched entirely statically: <CODE>, then we can avoid weaving the criticalMethod() in the first place.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Allow the ltw configuration to be directly specified rather than discovered on the classpath", "sentence_label": "title"}, {"sentence": "Currently the property: <CODE> can be set to name the ltw configuration file that the loadtime weaver searches for.", "sentence_label": "current"}, {"sentence": "The default value is: <FILE> and the weaver searches the classpath for xml files matching any of those three possibilities.", "sentence_label": "explanation"}, {"sentence": "A typical override might therefore be: <CODE>", "sentence_label": "explanation"}, {"sentence": "however the weaver will still only look for it on the classpath.", "sentence_label": "current"}, {"sentence": "In some environments the ltw user may just want to name the aop config file to use, and not be forced to include it on the classpath.", "sentence_label": "drawback"}, {"sentence": "We have had the suggestion to make it protocol based, which i like, but for now I would just allow support for \"file:\".", "sentence_label": "expected"}, {"sentence": "If \"file:\" is the prefix, it will be treated as direct reference to the file to use, otherwise it will be searched for.", "sentence_label": "expected"}, {"sentence": "This change would mean all existing uses of the override will be fine, but new users will be all to exploit the flexibility of naming their configuration directly.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Enhance declare error to support type patterns", "sentence_label": "title"}, {"sentence": "Currently, declare error only accepts a pointcut expression.", "sentence_label": "current"}, {"sentence": "It would be nice if it also accepted a type pattern.", "sentence_label": "expected"}, {"sentence": "For example:<CODE>", "sentence_label": "example"}, {"sentence": "It's kind of like compile-time enforcement of interface methods, only I want it to support non-public methods.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Type System support annotations optional", "sentence_label": "title"}, {"sentence": "I'm going to make the annotations added to class files to support the AjType reflection system optional.", "sentence_label": "expected"}, {"sentence": "The option '-reflectable' will ensure they are there, but without that option they won't be there.", "sentence_label": "explanation"}, {"sentence": " They are rarely used and increase code size as well as interfere with regular reflection (which is what many systems/frameworks are typically using anyway to look at AspectJ code).", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "upgrade to Java7 (Eclipse 3.7.1)", "sentence_label": "title"}, {"sentence": "we should rebase AspectJ on eclipse 3.7.1 and pickup Java7 support.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Develop a benchmark suite for AspectJ runtime and weavetime performance", "sentence_label": "title"}, {"sentence": "We need a standard suite of performance (and memory usage) tests that help us explore both the compile (weave) and runtime performance of AspectJ.", "sentence_label": "expected"}, {"sentence": "This suite can help us measure performance and memory hotspots in 1.2 development, and serve as a basis for tracking release-release performance enhancements.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " ajc 1.1 rc1 should copy resources similar to java compiler", "sentence_label": "title"}, {"sentence": "The ajc compiler does not copy resources (non-java/aspect) files from the source tree to the output.", "sentence_label": "current"}, {"sentence": "This means that we have to compile first with the aspectj nature disabled, then compile with aspects.", "sentence_label": "drawback"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Declare warning/error output - more detail required.", "sentence_label": "title"}, {"sentence": "At present the declare warning and declare error functionality of the compiler provides no detailed information about what it is in the user code that has led to the generation of the compile-time warning or error.", "sentence_label": "current"}, {"sentence": "Consider the following test case <CODE>", "sentence_label": "explanation"}, {"sentence": "When I compile these two files I get the following warning \"file-path\"", "sentence_label": "current"}, {"sentence": "which is great if all I want to know is where the offending code is.", "sentence_label": "benefit"}, {"sentence": "But not nearly enough if I want to know what it is on the line that is contravening the policy (or policies) that I have specified in my aspect.", "sentence_label": "drawback"}, {"sentence": "In the above example it would be even more useful if the warning message was something like <file-path>", "sentence_label": "expected"}, {"sentence": "For large projects where there is an architectural imperative to reduce or completely remove coupling between certain components declare warning/error would be of far greater use if it could return more detailed info to say *why* not just *where* the desired enforcement rules have been broken.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Surface AspectJ parser through ajde", "sentence_label": "title"}, {"sentence": "AJDT (and other IDEs potentially) needs an interface whereby a single compilation unit (as an input stream or an abstraction of that - the content might come from an unsaved editor buffer) can be parsed by AspectJ with respect to a defined classpath / sourcepath, and receive in return a list of compilation errors / warnings existing in the file, together with a structure model for the file content.", "sentence_label": "expected"}, {"sentence": "The model may need to be at a lower level than the current asm ajde provides - the dom resulting from the parse may be more appropriate.", "sentence_label": "expected"}, {"sentence": "This requirement should be firmed up in the next couple of weeks.", "sentence_label": "explanation"}, {"sentence": "No byte codes should be dumped as a result of this operation, and it needs to happen in as light-weight and efficient a manner as possible.", "sentence_label": "expected"}, {"sentence": "The interface will be called to parse compilation units in AspectJ projects, and also for reconciling during editing.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " [ajdoc] add ajdoc support for inter-type declarations and other declare forms", "sentence_label": "title"}, {"sentence": "Currently ajdoc only exposes the \"Advises\" and \"Advised by\" relationships from the structure model.", "sentence_label": "current"}, {"sentence": "It needs to support inter-type field and member declarations using a UI similar to how Javadoc presents inherited members.", "sentence_label": "expected"}, {"sentence": "It also needs to support the other declare forms: error, warning, soft, parents, and precedence.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "support ajsym file generation for command line builds", "sentence_label": "title"}, {"sentence": "This has been requested by Ron and several others,", "sentence_label": "useless"}, {"sentence": "this will enable browsing crosscutting structure (e.g. via the AspectJ Browser) for builds done via the command line or Ant, and possibly via AJDT with some minor extensions to that.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "allow use of an environment variable to set compiler arguments", "sentence_label": "title"}, {"sentence": "I'm trying to create a special jsp compilation servlet in Tomcat 4.x that uses the aspectj compiler.", "sentence_label": "explanation"}, {"sentence": "I can plug in the compiler adapter, but I don't have control of the ant code they use to invoke the compiler, so I'd like to use an environment variable to do this (apparently the only mechanism they do support).", "sentence_label": "expected"}, {"sentence": "I'm doing this so I can pass an aspectpath in to weave aspects into the compiled jsp servlet.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "weaving information via messages", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "for the dynamic weaving functionality I implemented for the Eclipse runtime Ineed to know which aspect got woven into which class.", "sentence_label": "explanation"}, {"sentence": "Therefore it would be good if the weaver would generate messages during the bytecode weaving.", "sentence_label": "expected"}, {"sentence": "Those specialized messages could contain information for the aspect and the class.", "sentence_label": "explanation"}, {"sentence": "I implemented a special subclass of Message and added the creation of the message to the BcelAdvice class (a simple test case for this as well).", "sentence_label": "explanation"}, {"sentence": "Take a look at the patch for details.", "sentence_label": "explanation"}, {"sentence": "I used the <CODE> kind for this to not modify the IMessage interface.", "sentence_label": "explanation"}, {"sentence": "It might be better to have a special <CODE> for that, something like \"WOVEN\".", "sentence_label": "explanation"}, {"sentence": "I think there are more places (in addition to <CODE> where this kind of information should be generated, but I am not familiar enough to implement them all.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support SerialVersionUID field if no new fields declared on class", "sentence_label": "title"}, {"sentence": "Erik and Vincenz Braun had an email dialog in which Vincenz recommended a flag to declare a serialVersionUID field with the value of original class when weaving into class files (unless some aspect declared new state on the class, in which case a warning should be issued).", "sentence_label": "expected"}, {"sentence": "This is necessary for systems using remote invocations.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Need better error message for \"can't find type\"", "sentence_label": "title"}, {"sentence": "I have experienced situations where IAJC outputs a message like this at the end of compilation.", "sentence_label": "current"}, {"sentence": "[iajc] can't find type <CODE>", "sentence_label": "current"}, {"sentence": "In my case this was one time highly confusing since I did not expect the class in question to be referred anywhere in the project (I have to date still not located the reference).", "sentence_label": "drawback"}, {"sentence": "For such cases, it would be extremely nice if the error message would display WHY it need the class (for example the name of the refering class(es) or aspect(es) possibly with a reasonable cutoff as there is seldom need to list all referals).", "sentence_label": "expected"}, {"sentence": "So I would like a message like this:<CODE>", "sentence_label": "example"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Avoid clashes in the org.eclipse namespace by renaming our duplicates.", "sentence_label": "title"}, {"sentence": "We have recently renamed our 'copy' of BCEL to use a different package prefix so that our version never clashes with another version that might be around on a users system.", "sentence_label": "explanation"}, {"sentence": "This enhancement is to do the same thing for our 'copy' of the <CODE> code (in the shadows project).", "sentence_label": "explanation"}, {"sentence": "As part of packaging the shadows project to create the 'jdtcore' jar files (bin and src) we will rename the packages from <CODE> to <CODE>", "sentence_label": "expected"}, {"sentence": "This has a really nice side effect that we can make our version of the compiler accessible in the IDE.", "sentence_label": "benefit"}, {"sentence": "It should now be possible for AJDT to work more closely with it and get features like eager parsing to work.", "sentence_label": "benefit"}, {"sentence": "Care will be taken that we don't accidentally make the merge process a nightmare.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add versions to woven class files - enabling better backwards compatibility.", "sentence_label": "title"}, {"sentence": "We don't currently include a version in the class files that come out of the weaver.", "sentence_label": "current"}, {"sentence": "This can cause problems.", "sentence_label": "drawback"}, {"sentence": "For example, if we add a new attribute to a class file in a future version of AspectJ, then that attribute will cause older versions of AspectJ to blow up if they encounter it.", "sentence_label": "example"}, {"sentence": "If we include a version in the class file we can rev the version number when we add attributes (or change the class file form in another way), and by checking that version number in the weaver we can better determine whether we should fail if we encounter a new attribute (or other change), or if it is safe to continue processing.", "sentence_label": "expected"}, {"sentence": "I will add a new WeaverVersion attribute that includes 2 shorts.", "sentence_label": "expected"}, {"sentence": "Major and Minor:", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "provide more detail in -showWeaveInfo messages", "sentence_label": "title"}, {"sentence": "When advice is executed, the object you have to work with is the joinpoint.", "sentence_label": "current"}, {"sentence": "This can then be queried to get various information out of it.", "sentence_label": "current"}, {"sentence": "It would be nice, if as part of the weaving you could get hold of the same information.", "sentence_label": "expected"}, {"sentence": "This is particularly useful in the case of writing a coverage tool.", "sentence_label": "benefit"}, {"sentence": "In order to measure where you've been, you have to know all the places you could possibly go.", "sentence_label": "explanation"}, {"sentence": "The introduction of the -showWeaveInfo option means that we can record these places,", "sentence_label": "explanation"}, {"sentence": "however, this would be greatly enhanced by providing similar information as to that which is collected as the program is running.", "sentence_label": "benefit"}, {"sentence": "The information which would be good is the same as that obtained from <CODE>", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "RFE: Expose withinType for pertypewithin aspects", "sentence_label": "title"}, {"sentence": "Per type within aspects have a generated field <CODE>.", "sentence_label": "explanation"}, {"sentence": "Almost any time I ever use one of them, I'd like to access this field.", "sentence_label": "explanation"}, {"sentence": "Sometimes, for example, for deferred initialization, I have to create a duplicate field that initializes this as such: <CODE>", "sentence_label": "current"}, {"sentence": "It would be nice if there were a method with the signature Class getWithinType() defined on any pertypewithin aspect.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Split out the pointcut parser for use standalone", "sentence_label": "title"}, {"sentence": "Some environments want to use the pointcut parser but not the weaver.", "sentence_label": "explanation"}, {"sentence": "For example, Spring uses the pointcut parser but then may choose to implement weaving via dynamic proxies.", "sentence_label": "example"}, {"sentence": "In this situation the <CODE> is overkill as the weaver is not being used", "sentence_label": "current"}, {"sentence": "and indeed the weaver being in the jar can sometimes cause problems.", "sentence_label": "drawback"}, {"sentence": "Not technical problems, more likely problems related to application system rollout being delayed because approval is needed for a weaver to be deployed rather than just a simple parser.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[2.1] Integrate AJDT and Generics", "sentence_label": "title"}, {"sentence": "Hello,", "sentence_label": "useless"}, {"sentence": "It seems to me that it could be very useful to integrate AJDT and generics into the 2.1  release as part of the JDT in order to counter dotNET initiative.", "sentence_label": "expected"}, {"sentence": "Actually I think that Java must evolves drastically to face the NET framework, and especially in : simplifying the libraries, improving virtual machine performances, adding new inovative concepts in the language", "sentence_label": "expected"}, {"sentence": "I know that this is more the Sun process to provide us with such things.", "sentence_label": "explanation"}, {"sentence": "Nevertheless I believe that IBM/OTI can influence the process by providing and populating new libraries(SWT, etc), and concepts(aspects, and generics for instance)", "sentence_label": "explanation"}, {"sentence": "best regards", "sentence_label": "useless"}, {"sentence": "Xavier", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Ajde does not support new AspectJ 1.1 compiler options", "sentence_label": "title"}, {"sentence": "The <CODE> interface does not yet support the new AspectJ 1.1 compiler options.", "sentence_label": "current"}, {"sentence": "These need to be added to the interface, any old or renamed options deprecated, and then the correct processing needs to happen within Ajde to pass these options to the compiler.", "sentence_label": "expected"}, {"sentence": "This enhancement is needed by the various IDE projects for there AspectJ 1.1 support.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "retitle warning to \"circular {advice} dependency at\"", "sentence_label": "title"}, {"sentence": "When writing aspects with cycles in the advice precedence, get warning \"circular dependency at {join point}\"  should be \"circular advice dependency\" or \"circular advice precedences at {join point} -- reorder the advice in the aspect\".", "sentence_label": "expected"}, {"sentence": "FWIW,", "sentence_label": "useless"}, {"sentence": "here's an example of circularity in advice precedence: <CODE>", "sentence_label": "example"}, {"sentence": "See programming guide for more discussion of circularity in advice precedence.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Support for pertype aspect instantiation model", "sentence_label": "title"}, {"sentence": "Provide support for a pertype aspect instantiation model - this is needed (as documented in the <VERSION> release notes) to support designs that require state to be held on a per-type basis (for example, some common logging idioms).", "sentence_label": "expected"}, {"sentence": "Some language design work needs to be done to consider the form of pertype.", "sentence_label": "expected"}, {"sentence": "It could be as the following:", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Ability to specify prune directories", "sentence_label": "title"}, {"sentence": "We use Bitkeeper for our source control at my company which creates SCCS directories in our source.", "sentence_label": "explanation"}, {"sentence": "These directories confuse the ajc compiler and cause errors.", "sentence_label": "drawback"}, {"sentence": "It would be very useful if we could specify directories to prune (besides CVS).", "sentence_label": "expected"}, {"sentence": "As suggested by Wes Isberg, perhaps a syntax like: <COMMAND>", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "xlint warning: match impossible due to args numericity conflict", "sentence_label": "title"}, {"sentence": "Some pointcuts will never match because the number of args is specified differently in two places (from signatures and/or args(x)).", "sentence_label": "current"}, {"sentence": "for example, <CODE>", "sentence_label": "example"}, {"sentence": "When weaving advice (but not declare warning), it would be nice to have an XLint warning indicating that the pointcut can never match.", "sentence_label": "expected"}, {"sentence": "Perhaps also optimize away as never matching.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "-X should output available -X options", "sentence_label": "title"}, {"sentence": "ajc should emit the available -X options on -help or -X request (the latter like java) to get more traffic and feedback on the experimental options.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support for simple dump file", "sentence_label": "title"}, {"sentence": "When the compiler terminates abnormally (exception) or behaves unexpectedly (warning/error/abort) a simple dump of the compiler state should be produced to aid problem diagnosis.", "sentence_label": "expected"}, {"sentence": "The content and conditions under which the dump is produced should be configurable by the user but the facility should be enabled by default for exceptions.", "sentence_label": "expected"}, {"sentence": "Consequently its inclusion should have negligible impact on compiler performance and footprint.", "sentence_label": "expected"}, {"sentence": "The file should be attached to bug reports to give a complete and objective description of the user's environment and support problem resolution where a testcase cannot be provided.", "sentence_label": "expected"}, {"sentence": "One approach is to write a uniquely name file (using date & time) in the current directory", "sentence_label": "current"}, {"sentence": "for example <FILE-TXT> which should be human readable (it can be zipped if large) to allow the user to potentially diagnose their own problems or remove potentially sensitive data before submission.", "sentence_label": "example"}, {"sentence": "It should contain basic information such as AspectJ version, system properties and command line as well as failure information such as _full_ exception stack trace, compiler messages and internal compiler state.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Extend aspectjrt.jar manifest with OSGi attributes", "sentence_label": "title"}, {"sentence": "Add OSGi attributes into aspectjrt.jar so that it can be used unmodified in an OSGi environment.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create a jar file that can be used for load-time weaving.", "sentence_label": "title"}, {"sentence": "Several folks have asked for a jar file as part of the aspectj distribution that contains just the subset of <FILE-JAR> needed for load-time weaving.", "sentence_label": "expected"}, {"sentence": "I've got a patch for <FILE-XML> (non-committed) that creates this (<FILE-JAR> - the name could be changed) and have verified that this lighter-weight jar (<NUMBER>MB vs <NUMBER>MB) does indeed contain everything that is needed.", "sentence_label": "explanation"}, {"sentence": "Three questions for us to resolve:", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Some Pointcut PatternNodes are missing getters to traverse syntax tree", "sentence_label": "title"}, {"sentence": "In order to find out which other pointcuts are referenced by a pointcut definition, i need to access the private members of the CflowPointcut, IfPointcut and NotPointcut PatternNodes found in the weaver module.", "sentence_label": "expected"}, {"sentence": "Unlike the OrPointcut and AndPointcut classes, they are missing the appropriate getter methods.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Option to list weaved components", "sentence_label": "title"}, {"sentence": "I've been looking for a feature where the compiler could output a list of classes/methods that had aspects woven into them.", "sentence_label": "expected"}, {"sentence": "That could allow people to see easily what classes were touched by the compiler and serves as good verification for the build", "sentence_label": "benefit"}, {"sentence": "is the only other way to know to test that the aspect is really in place?", "sentence_label": "explanation"}, {"sentence": "Diffing against a known file within a build run may then log possible errors ( if method attributes/accesses change, etc. ).", "sentence_label": "explanation"}, {"sentence": "In my case, the actual benefit is that I can use the list to develop my own list of access descriptors.", "sentence_label": "benefit"}, {"sentence": "That way I may use the fully qualified classname and the methodname to add them into my security database.", "sentence_label": "benefit"}, {"sentence": "Using the \"Signature\" class I can then easily verify access to that method through other means.", "sentence_label": "benefit"}, {"sentence": "Anyway, I do hope you consider the idea.", "sentence_label": "useless"}, {"sentence": "Thanks for developing such a great tool & functionality.", "sentence_label": "useless"}, {"sentence": "I found AspectJ to be the easiest usable around with the best documentation for newcomers!", "sentence_label": "useless"}, {"sentence": "Kind regards,", "sentence_label": "useless"}, {"sentence": "Gerard", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Allow aspectPath to contain directories", "sentence_label": "title"}, {"sentence": "The -aspectpath option to the compiler only allows jar or zip files, not directories.", "sentence_label": "current"}, {"sentence": "But inpath and classpath allow directories.", "sentence_label": "explanation"}, {"sentence": "This capability would improve the handling of aspects spanning multiple projects in Eclipse.", "sentence_label": "benefit"}, {"sentence": "AJDT can currently only support jar or zip files on the aspect path, which requires one of the projects to create an outjar instead of writing to the bin directory as usual.", "sentence_label": "current"}, {"sentence": "The iajc ant task could then also be enhanced to support aspectpath directories.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Generate and Include Separate Aspect List for LTW", "sentence_label": "title"}, {"sentence": "Given the need to explicitly enumerate aspects that will be applied by load-time weaving, it will be a significant benefit to allow auto-generating this list when building an AspectJ system,", "sentence_label": "expected"}, {"sentence": "for example, by appending to a defined output file when compiling.", "sentence_label": "example"}, {"sentence": "It would then be very useful if an <FILE-XML> file could reference this as an external file with a list of aspects, so the list can be regenerated without replacing human edited portions of an <FILE-XML> file.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " support for matching of subclasses of annotated classes", "sentence_label": "title"}, {"sentence": "I have two classes, Foo and Bar <CODE>", "sentence_label": "explanation"}, {"sentence": "I would like to have a way to match all subclasses of any class annotated with annotation @Ann.", "sentence_label": "expected"}, {"sentence": "Currently I can easily match Foo, with @Ann  but I cannot match Bar (unless it is explicitelly annotated with @Ann)", "sentence_label": "current"}, {"sentence": "The same could apply to methods, for example matching of all the methods wich override a method annotated with some annotation.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support nexted exceptions in weaver/compiler", "sentence_label": "title"}, {"sentence": "There are a number of places in the weaver where we catch exceptions, for example IOException, and rethrow an application-specific exceptions, for example BCException.", "sentence_label": "explanation"}, {"sentence": "Unfortunately because we need to continue to support JDK <VERSION_NUMBER> we cannot nest the exceptions and so the stack trace is lost.", "sentence_label": "current"}, {"sentence": "We should define a root exception for the weaver and add a constructor to allow nesting: we can use RemoteException as a model.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Upgrade to Eclipse 3.1 final JDT compiler level", "sentence_label": "title"}, {"sentence": "updgrade the jdt compiler inside AspectJ to the <VERSION-NUMBER> final level.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Complete implemenation of runtime pointcut parsing and matching", "sentence_label": "title"}, {"sentence": "The weaver API for runtime pointcut parsing and matching needs extending for all of the new pointcuts we have added in AJ5.", "sentence_label": "expected"}, {"sentence": "Recommended approach is to implement JavaLangReflectObjectType as a new ReferenceTypeDelegate, and a JavaLangReflectWorld in place of BcelWorld.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Improve logging and error reporting in weaver / ajc", "sentence_label": "title"}, {"sentence": "For can't find type and related style errors we really don't have enough information in the reports coming from ajc at the moment.", "sentence_label": "current"}, {"sentence": "A flight recorder tracking progress through the key stages of compilation and weaving would be a big help and may well pay for itself in the run up to <VERSION> final.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Targetting 1.2.1 runtime when building with the 1.5.0 compiler.", "sentence_label": "title"}, {"sentence": "Some products are now shipping <FILE-JAR> from the <VERSION> compiler.", "sentence_label": "current"}, {"sentence": "We would like the users of these products to benefit from all the latest and greatest enhancements in the tools and compiler when developing their code.", "sentence_label": "expected"}, {"sentence": "however, they will need to deploy this code on a runtime containing the <VERSION> aspectjrt.", "sentence_label": "expected"}, {"sentence": "We have made some enhancements in the <VERSION> runtime that affect compatibility", "sentence_label": "explanation"}, {"sentence": "one that springs to mind is changing the signature of the code that builds join point objects to save memory at runtime.", "sentence_label": "expected"}, {"sentence": "We need to enable users to specify they want to deploy on a back level aspectj", "sentence_label": "expected"}, {"sentence": "something like a \"-ajruntimetarget <VERSION>\" option only with a better name", "sentence_label": "example"}, {"sentence": "this would generate code that ran against the <VERSION> <FILE-JAR>.", "sentence_label": "explanation"}, {"sentence": "At the same time I think we should perhaps (if they aren't there already) reinstate the old way of building join point objects so that code targetting a <VERSION> runtime will run happily if it finds a <VERSION> runtime around.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Issue version message during load-time weaving", "sentence_label": "title"}, {"sentence": "It would be very useful to know exactly which version of the weaver is being used for LTW.", "sentence_label": "expected"}, {"sentence": "An informational message could be issued when each WeavingAdaptor instance is created (it is possible to have multiple versions of AspectJ in a system).", "sentence_label": "expected"}, {"sentence": "This message could be similar to the that issued by \"ajc -version\".", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support  compiler warning for swallowed exception in catch block", "sentence_label": "title"}, {"sentence": "So many people have asked how to write a declare warning / error to detect empty catch blocks, that this is clearly a desirable feature.", "sentence_label": "expected"}, {"sentence": "But it's impossible with declare warning / error.", "sentence_label": "current"}, {"sentence": "And it's pretty hard in byte code (the old \"what's the end of a catch block\" problem).", "sentence_label": "current"}, {"sentence": "But it's not hard if you've got a compiler.", "sentence_label": "explanation"}, {"sentence": "So why don't we just add a new front-end compiler warning (works only when building from source) on swallowed exceptions.", "sentence_label": "expected"}, {"sentence": "This would behave like the existing \"undocumentedEmptyBlock\" warning, except be specific to catch blocks so that you can turn it on without getting lots of warnings you don't want in many other places.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Don't Dump Bytecodes to Syserr in LTW", "sentence_label": "title"}, {"sentence": "The load-time weaving system can produce truly massive quantities of output when there's a weaving error, since the system dumps the bytecode to syserr.", "sentence_label": "current"}, {"sentence": "It would be much better to produce an ajcore file and just point to it, or use some other log.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "iajc should print summary like javac", "sentence_label": "title"}, {"sentence": "The iajc ant task should produce a summary of what it is doing,", "sentence_label": "expected"}, {"sentence": "like the javac task does: [javac] Compiling 189 source files to <PATH>", "sentence_label": "example"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Docs page should reference load-time weaving", "sentence_label": "title"}, {"sentence": "the <FILE-PHP> page should list load-time weaving as a topic that is covered in the development environment guide.", "sentence_label": "expected"}, {"sentence": "Several users have been confused about where to find this information", "sentence_label": "drawback"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Upload aspectj jars to ibiblio", "sentence_label": "title"}, {"sentence": "Here are the instructions [URL]", "sentence_label": "explanation"}, {"sentence": "Aspectj <VERSION> jars need to be uploaded, and we should update the release procedure docs to include publishing jars to ibiblio as part of the process.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add an option to generate aj-synthetics with true synthetic flag", "sentence_label": "title"}, {"sentence": "In a number of cases tools are getting confused over generated aj members that are  \"aj-synthetic\" but not marked with the synthetic attribute (because in the past, this has upset other tools).", "sentence_label": "current"}, {"sentence": "The most recent example was a JAXB posting on the list - by having a perthis() clause in an aspect that matched a type with JAXB 2 annotations the user was no longer able to use JAXB.", "sentence_label": "example"}, {"sentence": "This is a serious issue, and will prevent the usage of JAXB 2 with any type into which we introduce properties as aj-synthetic members.", "sentence_label": "drawback"}, {"sentence": "The JAXB 2 solution to ignore such fields is to annotate them with @XmlTransient, but since the field does not exist in the user program they can't even do this!", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support system and user aop.xml configuration files", "sentence_label": "title"}, {"sentence": "Both AJDT (\"web-page-link\") and AspectJ (\"web-page-link\") support the generation of an <FILE-XML> to declare the set of know aspects for LTW.", "sentence_label": "explanation"}, {"sentence": "However if the user modifies the file to add options etc then the changes can be over-written.", "sentence_label": "explanation"}, {"sentence": "There is a need to allow the user to provide their own configuration in a separate file.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Allow multiple levels of LTW information", "sentence_label": "title"}, {"sentence": "It would be nice if basic information about load-time weaving (what version of AspectJ is being used, what loaders are doing weaving and what configuration is being used) was available without all of the -verbose information listing of all classes woven or not woven.", "sentence_label": "expected"}, {"sentence": "It's also unfortunate that the flags for weaving level are 2 quite different ones:", "sentence_label": "explanation"}, {"sentence": "Why not something like <CODE>", "sentence_label": "example"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Tracing and Logging Framework", "sentence_label": "title"}, {"sentence": "With the growing popularity of load-time weaving it is becoming increasing difficult to diagnose complex problems given the limited diagnostic information available: stack trace, verbose output, and dumped byte-code.", "sentence_label": "drawback"}, {"sentence": "For compiler errors it is usually possible for the bug raiser to attach a simple testcase but this is not possible when the problem may concern the environment or integration with middleware.", "sentence_label": "current"}, {"sentence": "I therefore propose we implement a tracing/logging mechanism that will capture low level entry/exit information as well as existing informational messages and route them to one of the existing logging infrastructures such as JDK <VERSION> or Jakarta Commons logging.", "sentence_label": "expected"}, {"sentence": "see Ron's comment in Bug 150271 \"Allow multiple levels of LTW information\"", "sentence_label": "example"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Contribution: Support -Xset in Load-Time Weaving Configuration", "sentence_label": "title"}, {"sentence": "I needed this to try out a setting in the pipelined compilation (<CODE>)", "sentence_label": "expected"}, {"sentence": "I was able to verify that it parsed and set an option correctly in the debugger.", "sentence_label": "explanation"}, {"sentence": "I also have included a test that sets all the currently available options.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support stdout/stderr specifications for the ant compiler test step", "sentence_label": "title"}, {"sentence": "For <compile> and <run> steps the expected output can be specified.", "sentence_label": "expected"}, {"sentence": "This should be possible for <ant> as well and allow simplify forked testing.", "sentence_label": "expected"}, {"sentence": "Most of the support is there is just needs to be fixed and used.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Facilitate LTW testing in a custom ClassLoader hierarchy", "sentence_label": "title"}, {"sentence": "Currently the suite allows us to test LTW with a single ClassLoader either in process or via Ant fork.", "sentence_label": "current"}, {"sentence": "In reality AspectJ LTW is used with a variety of application servers each with a more complex ClassLoader hierarchy.", "sentence_label": "explanation"}, {"sentence": "We need to be able to test these kinds of scenarios using XML-based JUnit testcases without resorting to something like Tomcat.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Clarify message for circularDependency", "sentence_label": "title"}, {"sentence": "The existing message makes it fairly easy to confuse with a normal Xlint warning case: unorderedAdviceAtShadow.", "sentence_label": "current"}, {"sentence": "I propose adding the prefix circular advice dependency: before this message to make it more clear what's wrong.", "sentence_label": "expected"}, {"sentence": "I've attached a weaver patch with an attempt at clarifying.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Trace should use System.identityHashCode, not hashCode", "sentence_label": "title"}, {"sentence": "The tracing module uses <CODE> to identify untrusted objects when formatting.", "sentence_label": "current"}, {"sentence": "I think it would be a little safer and more accurate to use <CODE>.", "sentence_label": "expected"}, {"sentence": "This way the tracing code wouldn't call any application-defined code, and would give a value that can't change if the loader state changes.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Problem Diagnosis Guide", "sentence_label": "title"}, {"sentence": "To complement the Programming and Development Environment Guides we need documentation to describe the various PD mechanisms, but new and old, offered by AspectJ.", "sentence_label": "expected"}, {"sentence": "In particular it should emphasize the difference between information provided for the user and that which should be attached to bug reported to enable diagnosis.", "sentence_label": "expected"}, {"sentence": "The features covered should include messages (\"-verbose\", Xlint etc), ajcore, tracing and LTW dump.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Suppress Xlint warnings per @SuppressWarnings", "sentence_label": "title"}, {"sentence": "You can configure Xlint warnings via the JDT/Compiler preferences page, even on a per project base", "sentence_label": "current"}, {"sentence": "But seemingly you can't use the @SuppressWarnings-Annotation to switch off this warnings for individual locations.", "sentence_label": "current"}, {"sentence": "You can only use some standard tokens for this annotation (for example for unchecked generics).", "sentence_label": "current"}, {"sentence": "This renders some of this warnings almost useless.", "sentence_label": "drawback"}, {"sentence": "So the request is: make the eclipse java compiler recognize the Xlint warning IDs for @SuppressWarnings", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Can you make an XML schema or a DTD available for <FILE-XML>", "sentence_label": "title"}, {"sentence": "As I was writting an <FILE-XML> file, I found it annoying that there is no XML schema available for it.", "sentence_label": "current"}, {"sentence": "I am using eclipse to develop my aspect libraries, and I am used to getting context sensitive help and autocompletion on my XML files.", "sentence_label": "explanation"}, {"sentence": "It would really speed up the development and avoid error entries if such an XML schema was made available in the distribution, or better on a web server.", "sentence_label": "expected"}, {"sentence": "Note that aspectwerkz had dtds for their config file.", "sentence_label": "explanation"}, {"sentence": "Thanks,", "sentence_label": "useless"}, {"sentence": "Lionel Fradin", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Parameter annotation matching", "sentence_label": "title"}, {"sentence": "AspectJ does not currently support parameter or package annotations.", "sentence_label": "current"}, {"sentence": "We should support parameter annotations.", "sentence_label": "expected"}, {"sentence": "kind of thing you want to do: <CODE>", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make checking of aspectjrt.jar existence optional", "sentence_label": "title"}, {"sentence": "In some environments we can't find the runtime jar as <FILE-JAR> or <FILE-JAR>.", "sentence_label": "explanation"}, {"sentence": "Rather than put out a warning when the user can do nothing about it, let's make the check optional so it can be deactivated in environments where the user knows what they are doing.", "sentence_label": "expected"}, {"sentence": "New command line option <COMMAND>", "sentence_label": "explanation"}, {"sentence": "defaults to true but can be set off via <COMMAND> or in iajc with <COMMAND>", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "split matching and weaving", "sentence_label": "title"}, {"sentence": "The proposal is to split the matching and weaving process.", "sentence_label": "expected"}, {"sentence": "Although the pointcut matching is already usable as a standalone entity, it cannot currently be used without also having the weaving code around (and so the entirety of <FILE-JAR> is required).", "sentence_label": "current"}, {"sentence": " Also, when the matching is used standalone it still attempts to access the information necessary to determine a match through reflection.", "sentence_label": "current"}, {"sentence": " It would be better if that were pluggable (perhaps an abstraction over the required information) and then the user could embed it wherever they wish and provide that information however suits their environment.", "sentence_label": "expected"}, {"sentence": "Two use cases need supporting:", "sentence_label": "explanation"}, {"sentence": "This second case will enable much neater matching in Eclipse and even sets up the possibility of showing matches *as you type*", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[plan] aspects can be 'optional' and run depending on available dependencies", "sentence_label": "title"}, {"sentence": "Some aspect libraries are shipped separately to their dependencies.", "sentence_label": "explanation"}, {"sentence": "For example the spring persistence aspects are separate to the jpa jars.", "sentence_label": "example"}, {"sentence": "Due to the inclusion of the aspect on the aspect path the user may see errors about the JPA jar missing, even though they weren't actually using JPA in the first place.", "sentence_label": "drawback"}, {"sentence": "It should be possible to make these aspects optional so that if their dependencies cannot be found they just switch off, since the users code cannot be requiring them anyway.", "sentence_label": "expected"}, {"sentence": "Appropriate messages must come out indicating what has happened.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Support registering additional dependencies from compilation participants", "sentence_label": "title"}, {"sentence": "A compilation participant can add new dependencies to a file.", "sentence_label": "explanation"}, {"sentence": "we should support this in the AjState object and surface it through the AjCompiler", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Form of declare annotation that removes annotations", "sentence_label": "title"}, {"sentence": "Unlike removing entries from a type hierarchy, removing annotations is far less dangerous and addresses some use cases.", "sentence_label": "explanation"}, {"sentence": "for example, you want to switch from some bunch of annotations to another bunch.", "sentence_label": "example"}, {"sentence": "So we need something like <CODE> (syntax not yet decided).", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "change message about 'not built reweavable' into an xlint", "sentence_label": "title"}, {"sentence": "the message that comes out indicating a type cannot be woven because it has previously been built (deliberately) in not-reweavable mode is currently a hard error.", "sentence_label": "current"}, {"sentence": "We should make it an xlint (defaulting to error).", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " construction of entire aspects using aop.xml", "sentence_label": "title"}, {"sentence": "Currently the ability to customize aspects in <FILE-XML> is quite limited.", "sentence_label": "current"}, {"sentence": "Basically for some abstract aspect with an abstract pointcut, the XML can concretize the pointcut.", "sentence_label": "current"}, {"sentence": "This still requires the user to have used the AspectJ compiler to build the abstract aspect.", "sentence_label": "current"}, {"sentence": "It might be nice if that need to use the AspectJ compiler was not necessary in common cases.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " ajc option to change -Xlint level per-message without Xlintfile", "sentence_label": "title"}, {"sentence": "The -Xlintfile option is not a great fit for controlling message across multiple build projects, specifically in my case from the pluginManagement section of a maven parent pom.", "sentence_label": "current"}, {"sentence": "The problem is that you need a local file to configure the per-message output levels (ignore/warning/error) when you really want to specify it in the build script or in a shared file.", "sentence_label": "current"}, {"sentence": "As an alternative to -Xlintfile, it would be handy to be able to change an Xlint warning level per message using command line options.", "sentence_label": "expected"}, {"sentence": "For example: <COMMAND> would override the <FILE> file for the adviceDidNotMatch message.", "sentence_label": "example"}, {"sentence": "With Regards", "sentence_label": "useless"}, {"sentence": "Rob", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "pertarget.PertargetAspect$ajcMightHaveAspect is implemented by too many objects", "sentence_label": "title"}, {"sentence": "When compiling with a pertarget aspect, it seems that suddenly all available classes whatsoever implement the interface <CODE>.", "sentence_label": "current"}, {"sentence": "This is certainly too much.", "sentence_label": "drawback"}, {"sentence": "Only possible target classes need to implement this (indeed the highest type surfices, subclasses can inherit this implementation).", "sentence_label": "expected"}, {"sentence": "This would reduce code bloat.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "doc implications of Foo.class", "sentence_label": "title"}, {"sentence": "The expression <FILE> is converted by compilers to something like the following in bytecode: <CODE>", "sentence_label": "current"}, {"sentence": "As a result, pointcuts matching any of this code will, well, match.", "sentence_label": "current"}, {"sentence": "Users not familiar with this conversion might be confused,", "sentence_label": "drawback"}, {"sentence": "so we should document it, likely in a section on the implications of weaving bytecode rather than source code.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "want xlint message for improper annotation type", "sentence_label": "title"}, {"sentence": "When an annotation can only target one kind of thing (for example, a type) but is used to modify something else in a pointcut (e.g., a method),", "sentence_label": "current"}, {"sentence": "it would be nice if the compiler emitted an error,", "sentence_label": "expected"}, {"sentence": "since the two situations can be confusingly similar: <CODE>", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Lazy instantiation of thisJoinPoint", "sentence_label": "title"}, {"sentence": "In cases where the body of advice refers to a non-statically evaluable portion of thisJoinPoint (so that it can't be optimized by the compiler to thisJoinPointStaticPart),the JoinPoint object is currently always created before entering the advice body - even if the JoinPoint object would never actually be accessed (because of a test within the advice for example).", "sentence_label": "current"}, {"sentence": "Since: thisJoinPoint is often used in tracing applications", "sentence_label": "explanation"}, {"sentence": "it would be nice if there was a way to create JoinPoint objects lazily on first actual reference within the advice body.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "performance improvements for runtime library", "sentence_label": "title"}, {"sentence": "I am heavily using the runtime signature information from <CODE> and the <CODE> method of it.", "sentence_label": "explanation"}, {"sentence": "This causes heavy String operations each time the toString method is called.", "sentence_label": "drawback"}, {"sentence": "Would it be possible to cache the resulting string for example in MethodSignatureImpl and similar classes for other signatures?", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "implement string-handle based asm API", "sentence_label": "title"}, {"sentence": "This will enable Eclipse/JDT integration (and other IDE containment hierarchy integration) as well as playing better with incremental model updates.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " ajdoc should generate relative links between crosscutting relationships", "sentence_label": "title"}, {"sentence": "This is a limitation of the original ajdoc that should be removed in the new ajdoc.", "sentence_label": "expected"}, {"sentence": "Without it the generated documentation can not be moved within or across filesystems unless paths match.", "sentence_label": "drawback"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Structure model enhancements", "sentence_label": "title"}, {"sentence": "Here is a list of the stucture that is needed: [LIST]", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " API for seeing join point shadows", "sentence_label": "title"}, {"sentence": "Provide an API for seeing join point shadows that are matched by one or more pointcuts", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "AJDoc: should be able to set encoding like javadoc", "sentence_label": "title"}, {"sentence": "ajdoc doesn't support the -encoding -docencoding and -charset options of javadoc.", "sentence_label": "current"}, {"sentence": "Especially, it doesn't pass on the -encoding to ajc.", "sentence_label": "current"}, {"sentence": "If your project uses a source file encoding (for example, UTF-8) differing form the platform standard, and some java identifiers use characters byond the standard ASCII range, you won't be able to use ajdoc at all.", "sentence_label": "drawback"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " [ajdoc] update ajdoc to support Java 5 language features", "sentence_label": "title"}, {"sentence": "Java 5 langauge features such as enums and annotations need to be supported by ajdoc.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Request for a new type of relationship in the structure model", "sentence_label": "title"}, {"sentence": "Declare soft relationships are currently 'advises' and 'advised by' relationships.", "sentence_label": "current"}, {"sentence": "Would it be possible to add 'softens' and 'softened by' (or 'softens exception at' and 'exception softened by') relationships to the structure model?", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Convert website to phoenix look and feel", "sentence_label": "title"}, {"sentence": "This enhancement is to cover spending some time overhauling the AspectJ site to fit in with the phoenix look and feel for the eclipse projects.", "sentence_label": "expected"}, {"sentence": "This would include setting up the necessary files to make the dashboard appear correctly for us: [URL]", "sentence_label": "expected"}, {"sentence": "Once prototyped, we can consider moving to it.", "sentence_label": "explanation"}, {"sentence": "Importantly, once converted it should be easy to maintain with new news items/plan updates - no unnecessarily funky php editing required.", "sentence_label": "benefit"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "SoftException.printStackTrace(..) should print wrapped throwable too", "sentence_label": "title"}, {"sentence": "SoftExceptions should print not only their trace but also that of the wrapped throwable.", "sentence_label": "expected"}, {"sentence": "We should be able to set a flag on class initialization whether we are running under <VERSION> and then implement it under <VERSION> using <CODE> and otherwise by direct delegation.", "sentence_label": "expected"}, {"sentence": "I can do this fix if we're agreed.", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "extend test harness to check extra source locations", "sentence_label": "title"}, {"sentence": "We just extended IMessage+ to support multiple ISourceLocations for a single message.", "sentence_label": "explanation"}, {"sentence": "This was needed for reasonalbe messages in the -Xlint warning for declaring types in call pcds.", "sentence_label": "explanation"}, {"sentence": " We should extend the harness to check for these when time permits.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "ajdoc should not use the Declaration and SymbolManager classes", "sentence_label": "title"}, {"sentence": "In order to speed up porting to the old HTML generation code ajdoc continues to use the following classes:", "sentence_label": "current"}, {"sentence": "These funtion only as a wrapper to the ASM, and are not needed.", "sentence_label": "drawback"}, {"sentence": "The next refactoring effort should get rid of them (and all those static methods as well!).", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support modifiers and attributes in type patterns", "sentence_label": "title"}, {"sentence": "I would like to be able to use a public modifier in type patterns, to only pick out public types.", "sentence_label": "expected"}, {"sentence": "This should also allow public to pick out only types with default access.", "sentence_label": "expected"}, {"sentence": "This would add public _TypePattern_ to the grammar for TypePatterns.", "sentence_label": "expected"}, {"sentence": "For example, in: <CODE>", "sentence_label": "example"}, {"sentence": "I'd like to use public * in that staticinitialization pointcut, to restrict the definition of the public interface to include only publicly visible types.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "need common isAspectJSourceFile() method", "sentence_label": "title"}, {"sentence": "Checks for files ending in \"java\" and \"aj\" are scattered throughout the code.", "sentence_label": "current"}, {"sentence": "These should be replaced with a common API call.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Weaving fails when JDK11 is in path with mixed case characters", "sentence_label": "title"}, {"sentence": "When our Jenkins tries to weave classes post-compile, AJC fails with the following error: [TRACE]", "sentence_label": "current"}, {"sentence": "The problem is that Jenkins installs JDKs in directories [URL] and ClassPathManager adds jars as a lowercase version of the path.", "sentence_label": "explanation"}, {"sentence": "It will work for Windows, but fails for any case-sensitive file system.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[REGRESSION] NullpointerException thrown instead of actual exception since 1.9.3", "sentence_label": "title"}, {"sentence": "This test case fails since aspectj 1.9.3 (1.9.4 also fails): [URL]", "sentence_label": "current"}, {"sentence": "It works fine with aspectj 1.9.2.", "sentence_label": "explanation"}, {"sentence": "The expectation is that the exception thrown by the aspect arrives in the catch block.", "sentence_label": "expected"}, {"sentence": "But instead a NullpointerException is thrown by aspectj without a clear stacktrace that indicates that it comes from aspectj.", "sentence_label": "current"}, {"sentence": "This happens with openjdk 1.8.0 8u212-b03 and openjdk 13 on ubuntu, thus should not be related to a specific java version.", "sentence_label": "explanation"}, {"sentence": "You can debug this directly in the linked github project as the test case should run anywhere.", "sentence_label": "explanation"}, {"sentence": "Just modify the supplied pom.xml to use the aspectj version you desire.", "sentence_label": "explanation"}, {"sentence": "The wrong exception caused by the regression is: [TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Annotation processing issues", "sentence_label": "title"}, {"sentence": "Seen by Oliver but I can't recreate as I can't cleanly import the project to build...", "sentence_label": "current"}, {"sentence": "spring-data-jpa from [URL]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Compliance with Java 9 and later", "sentence_label": "title"}, {"sentence": "Hello,", "sentence_label": "useless"}, {"sentence": "Weaving a jar file using AspectJ v1.9.1, under Java 9 and 10, generates the following code: [CODE]", "sentence_label": "current"}, {"sentence": "The execution of this code, under Java 9 and 10, generates the following execption:[TRACE]", "sentence_label": "current"}, {"sentence": "I have successfully tried to patch the sources of AspectJ so that I can move forward in my work.", "sentence_label": "explanation"}, {"sentence": "For your information, I added my patch attachment.", "sentence_label": "explanation"}, {"sentence": "Could you please take a look at this problem so that AspectJ complies with the specifications of Java 9 and above, concerning the initialization of the \"static final\" class attributes?", "sentence_label": "expected"}, {"sentence": "Thanks in advance.", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AJC issues errors for each non-existing jar file in CLASSPATH", "sentence_label": "title"}, {"sentence": "Submitting per Jim's suggestion.", "sentence_label": "useless"}, {"sentence": "I believe this is already fixed in the CVS tree.", "sentence_label": "useless"}, {"sentence": "AJC gives errors for each non-existing jar file in CLASSPATH:[CODE]", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "error Type mismatch: cannot convert from java.lang.String to java.lang.String", "sentence_label": "title"}, {"sentence": "When compiling a binary concrete aspect library (for later LTW) consisting of more than one aspect that performs an ITD on a target class not exposed to the weaver I get the following error: [TRACE]", "sentence_label": "current"}, {"sentence": "The error does not oocur if a complete build & weave is performed.", "sentence_label": "current"}, {"sentence": "Testcase attached.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Negative parameter annotation matching not behaving", "sentence_label": "title"}, {"sentence": "In this program: [CODE]", "sentence_label": "explanation"}, {"sentence": "It is incorrectly advising both constructors.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Warning \"couldn't find aspectjrt.jar on classpath\"", "sentence_label": "title"}, {"sentence": "The compiler makes this warning if \"aspectrt.jar\" file has a different name like \"aspectrt-1.3.jar\", which is the case when compiling with maven.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Incorrect generic override decp validation when binary weaving", "sentence_label": "title"}, {"sentence": "Reported on the mailing list with a test project here:[URL]", "sentence_label": "explanation"}, {"sentence": "The problem is that if compiling in a certain order the decp analysis done when binary weaving isn't able to do the right checking.", "sentence_label": "current"}, {"sentence": "For some reason I can't remember BcelMethods don't have backing generic members.", "sentence_label": "explanation"}, {"sentence": "Changing that is a more serious change, for now we'll just handle this in a special case in the decp checking.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Non synchronized access to WeakHashMap causes infinite loop", "sentence_label": "title"}, {"sentence": "The non synchronized access from AjTypeSystem.getAjType(clazz) to a static instance of WeakHashMap may cause an infinite loop at start up in a multi threaded system.", "sentence_label": "current"}, {"sentence": "The thread dump shows that 32 of 33 threads of the application stuck in WeakHashMap.get(Object)", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "BcelObjectType: String index out of range: -1", "sentence_label": "title"}, {"sentence": "Hello, I'm trying to log method invocations on a commercial tool (TIBCO BusinessWorks) and for the most part, it works.", "sentence_label": "current"}, {"sentence": "Unfortunately, some classes trigger the following error in the aspectj weaver: [TRACE]", "sentence_label": "current"}, {"sentence": "I'll attach the ajcores and the aspects I'm using.", "sentence_label": "explanation"}, {"sentence": "Thanks in advance, Joao", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Chained advice doesn't get applied on 2nd call to ProceedingJoinPoint#proceed()", "sentence_label": "title"}, {"sentence": "When multiple aspects match the same call joinpoint, if one of the aspects calls proceed() more than once, these extra calls skip the other aspects and go directly to the method body.", "sentence_label": "current"}, {"sentence": "So, assuming Aspect1 and Aspect2 matching the same method call, if Aspect1 precedes Aspect2, and Aspect1 calls proceed twice, the sequence current aspectj produces is as follows: [CODE]", "sentence_label": "current"}, {"sentence": "While the expected sequence should be:[CODE]", "sentence_label": "expected"}, {"sentence": "I have been able to reproduce this behaviour in an AJDT project and with command line compiling.", "sentence_label": "explanation"}, {"sentence": "Attached an AJDT project that shows the described problem.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "DeclareParents reports unnecessarily errors on nested wild types", "sentence_label": "title"}, {"sentence": "I'm getting \"can't use declare parents to make enum type FooBar implement an interface\" errors when using for instance @DeclareMixin(\"!*Aspect\") or @DeclareMixin(\"(@foo.bar.SomeAnnotation *)\")", "sentence_label": "current"}, {"sentence": "There is smartness in the DeclareParents not to report wild childs but it's only a shallow consideration whereas my wild type is deeply nested under negation and I get an error (or bunch of them) for not good reason.", "sentence_label": "explanation"}, {"sentence": "The shallow child instanceof WildTypePattern could be replaced with a visitor (see the attachment)", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "damaged manifest.mf prevents LTW running from jar", "sentence_label": "title"}, {"sentence": "introducing the automatic module name affected the structure in the weaver manifest.mf - preventing launching LTW with -javaagent and aspectjweaver.jar.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Can lose a super type bound when weaving a type using generics in its declaration", "sentence_label": "title"}, {"sentence": "Raised on the AspectJ mailing list, I've recreated it.", "sentence_label": "useless"}, {"sentence": "Weaving here: [CODE]", "sentence_label": "explanation"}, {"sentence": "weaving into this with a declare parents to add another interface causes SomeClass to disappear.", "sentence_label": "current"}, {"sentence": "This may not be exactly what the user was doing but it does indicate there is a way in which we write out type signatures and damage them.", "sentence_label": "explanation"}, {"sentence": "Maybe he has different cause but it leads to the same problem.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "overweaving can attribute duplicate attributes, one of which will not deserialize correctly", "sentence_label": "title"}, {"sentence": "When overweaving it is possible that a class will get a second WeaverState attribute.", "sentence_label": "current"}, {"sentence": "This second one will not be valid (it hasn't been correctly configured).", "sentence_label": "current"}, {"sentence": "This isn't normally a problem because the next thing that happens is that the class is defined to the VM.", "sentence_label": "current"}, {"sentence": "But if *another* weave step occurs, the malformed attribute will cause that weave to fail with this kind of message: [TRACE]", "sentence_label": "current"}, {"sentence": "The solution is to avoid adding the duplicate when overweaving.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "memory issues with the latest AspectJ enhancements", "sentence_label": "title"}, {"sentence": "Reported on the list.", "sentence_label": "useless"}, {"sentence": "Memory problems even with all the latest magic in AspectJ 1.6.7.", "sentence_label": "current"}, {"sentence": "See [URL]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Support Java10", "sentence_label": "title"}, {"sentence": "This is a bug to capture that we should upgrade AspectJ to a recent JDT that includes Java10 support.", "sentence_label": "expected"}, {"sentence": "This involves upgrading our asm dependency as well, and various places within AspectJ where we list supported Java versions.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "compliance parameter for -1.9", "sentence_label": "title"}, {"sentence": "It seems, when setting up the iajc ant task with source/target=1.9 the compliance level is no longer correctly derived and the default of \"1.4\" is used which fails the compiler with e.g. annotation based aspects.", "sentence_label": "current"}, {"sentence": "setting up iajc with compliance=\"-1.9\" does not work, as, in the list of valid options the \"-\" is missing from 1.9.", "sentence_label": "current"}, {"sentence": "The attached patch fixes that.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[JDK9] ajc$preClinit not allowed in static initializer", "sentence_label": "title"}, {"sentence": "Seems like the verifier in Java 9 became more strict.", "sentence_label": "current"}, {"sentence": "AJC generates code that attempts to initialize static final fields in ajc$preClinit, which is caleed on <clinit>, e.g., [CODE]", "sentence_label": "current"}, {"sentence": "Seems like Java 9 doesn't like this and it throws an IllegalAccessError during classloading: [CODE]", "sentence_label": "current"}, {"sentence": "I believe the only definitive solution, apart from removing the final modifier from ajc generated fields, would be inlining ajc$preClinit.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NullPointerException compiling aspect using @DeclareParents to implement interface", "sentence_label": "title"}, {"sentence": "I bumped into this problem when answering a StackOverflow question.", "sentence_label": "current"}, {"sentence": "See here for more details: [URL]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "DeclareParents NPE", "sentence_label": "title"}, {"sentence": "There is also an adjacent but unrelated problem with with DeclareParents where I got the following NPEs.", "sentence_label": "current"}, {"sentence": "These have been lurking at least after 1.8.6 and it affects the 1.9.2 that I've now been switching to it (see also related [URL])", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "This is caused by AcjMemberMaker that uses null instead of UnresolvedType.", "sentence_label": "explanation"}, {"sentence": "NONE like the other static methods do.", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "I patched only these methods but the NPE awareness of the ResolvedType.conflictingSignature and ResolvedType.compareMemberPrecedence could be enhanced with a non-null parameter assertion although I've seen in couple of places that the null condition is treated silently.", "sentence_label": "explanation"}, {"sentence": "Now I'm able to see the real reason which is a matter of another issue/comment.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "threadlocal in weavingadaptor is potential memory leak", "sentence_label": "title"}, {"sentence": "We have a web app with Spring and AspectJ LTW enabled.", "sentence_label": "explanation"}, {"sentence": "We are encountering:[DESC] error on Tomcat, when restarting application and I think this is referring to the ThreadLocal field declared in  org.aspectj.weaver.tools.WeavingAdaptor.java line 287 on AspectJ 1.7.0.", "sentence_label": "current"}, {"sentence": "Is there any workaround to avoid this leak?", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NullPointerException at org.aspectj.ajdt.internal.core.builder.AjBuildManager.checkRtJar(AjBuildManager.java:1372)", "sentence_label": "title"}, {"sentence": "When i try ti run a simple aspectj program from terminal using ant task in build.xml with ajc-1.9.4 (attached the source jar) it throws me the following error.", "sentence_label": "current"}, {"sentence": "There are so many bugs in NPE but they are not occurred at AjBuildManager.checkRtJar(AjBuildManager.java:1372)", "sentence_label": "explanation"}, {"sentence": "This is the latest release i guess and it throws an error.", "sentence_label": "explanation"}, {"sentence": "kindly help me to come out of this error.", "sentence_label": "useless"}, {"sentence": "Regards,", "sentence_label": "useless"}, {"sentence": "prashanth.k", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ClassCastException during load time weaving: InstructionHandle cannot be cast to BranchHandle", "sentence_label": "title"}, {"sentence": "We're attempting to upgrade AspectJ to 1.9.4 for a large Java server application and we're hitting a ClassCastException during load time weaving:[TRACE]", "sentence_label": "current"}, {"sentence": "It occurs while loading a class with multiple annotations in play, with a try / catch / rethrow in the middle of an annotated method.", "sentence_label": "current"}, {"sentence": "The problem appears to relate to assumptions in [LOC] that are not consistent with behaviour in [LOC]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "weaving classes from signed jar (signer mismatch)", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Problems with missing aspect instances for pertypewithin sometimes", "sentence_label": "title"}, {"sentence": "Reported on the mailing list.", "sentence_label": "useless"}, {"sentence": "If you use pertypewithin it can't do its job if the aspect can't see (via reflection rules) methods in the affected target.", "sentence_label": "current"}, {"sentence": "I think the visibility needs to be raised as part of applying the pertypewithin behaviour.", "sentence_label": "expected"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Support is(AbstractType)", "sentence_label": "title"}, {"sentence": "AbstractType is not currently supported but seems easy to add (to the type category type pattern is(...)).", "sentence_label": "current"}, {"sentence": "This adds it to the list of: class, interface, aspect, inner, anonymous, enum, annotation, final.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "AspectJ internal compiler error - nullpointer at CoreOutputLocationManager.java:300", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Compile error: NoClassDefFoundError thrown: Could not initialize class org.aspectj.weaver.bcel.ClassPathManager$JImageEntry", "sentence_label": "title"}, {"sentence": "I get such error when I try to do something in my roo project", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "InterTypeFieldBinding.java:122 - NullPointerException", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "I am trying to compile the following:[URL]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ArrayIndexOutOfBoundsException compiling stream", "sentence_label": "title"}, {"sentence": "The following is generated on neon.1:[TRACE]", "sentence_label": "explanation"}, {"sentence": "The following class triggers this exception:[CODE]", "sentence_label": "explanation"}, {"sentence": "I believe it is triggered by compiling the inner.stream()...", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Compilation error on JAVA 8 lambda type inference with AJC 1.8.9", "sentence_label": "title"}, {"sentence": "I got a compilation error on AJC 1.8.9 when I use java 8 lambda, but everything is ok on javac.", "sentence_label": "current"}, {"sentence": "Below is the compilation error info and reproducable code is in attachment:[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": " ITD in inner class shadowing (already fixed in HEAD)", "sentence_label": "title"}, {"sentence": "This bug affects 1.1.1 but is fixed in CVS HEAD.", "sentence_label": "explanation"}, {"sentence": "The 1.1.1 compiler complains about:[CODE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Problems occurred when invoking code from plug-in [LOC]", "sentence_label": "title"}, {"sentence": "After installing STS 3.7.3 based on Eclipse Neon 4.6 I get the following exceptions", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NullPointerException and core dump on specific obfuscated inner class", "sentence_label": "title"}, {"sentence": "I'm getting a NullPointerException on a specific class during loadtime weaving, which then results in an ajcore dump file. See below for part of the dump.", "sentence_label": "current"}, {"sentence": "I traced it back to an earlier bug and fix 432874.", "sentence_label": "explanation"}, {"sentence": "In this fix, getOuterClass has been fixed to return null in case the outer class of an obfuscated inner class (no $ in name anymore) cannot be determined.", "sentence_label": "explanation"}, {"sentence": "It seems that now the next step faills where the code tries to access the outerClass object anyway.", "sentence_label": "explanation"}, {"sentence": "Workaround is to exclude the class from the weaver.", "sentence_label": "explanation"}, {"sentence": "I can provide the specific classes upon request.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": " ClassFormatException if LocalVariableTable data cannot be fully read", "sentence_label": "title"}, {"sentence": "We stumbled upon the issue that sometimes a fully valid Java class could not be loaded / parsed by the aspectjweaver runtime.", "sentence_label": "current"}, {"sentence": "After heavy debugging we found out that the issue is a wrong call to \"DataInputStream.read(buffer)\" where actually the library expects all data to be read into the buffer; \"DataInputStream.readFully(buffer)\" must be used instead.", "sentence_label": "explanation"}, {"sentence": "The edge case was that the LocalVariableTable of the class lay exactly over the \"buffer border\" of the wrapping BufferedInputStream.", "sentence_label": "explanation"}, {"sentence": "The read() would not read all data, but returned less (what was left in the byte buffer) and told the underlying BufferedInputStream to load more data from the stream.", "sentence_label": "explanation"}, {"sentence": "As this data actually belonged to the not-fully-read LocalVariableTable any further byte-based evaluation of the class would lead to a ClassFormatException", "sentence_label": "explanation"}, {"sentence": "The issue is present at least in aspectjweaver 1.8.6, 1.8.8 and the current git version.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NullPointerException in [LOC]", "sentence_label": "title"}, {"sentence": "During maven build with aspectj-maven-plugin I got the following NullPointerException:", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "From the listed stacktrace it seems to be a bug of the AspectJ compiler or AJDT.", "sentence_label": "explanation"}, {"sentence": "The problem only occurs on Linux (tested with Ubuntu 14.04 and Debian) with Java 8 or Java 7, and with Maven 3.3 and Maven 3.0. The bug does not appear on MacOS.", "sentence_label": "explanation"}, {"sentence": "Steps to reproduce the error: [LIST]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NPE in IntelliJ since 1.8.7", "sentence_label": "title"}, {"sentence": "Seems the 1.8.7 release broke the integration with IntelliJ IDEA.", "sentence_label": "explanation"}, {"sentence": "During compilation, I'm getting this exception.", "sentence_label": "current"}, {"sentence": "Using the Ant compiler works fine for the same project, but we're forced to go back to 1.8.6 in order to be using the IDE.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Building Roo projects NPE in AnnotationDiscoveryVisitor", "sentence_label": "title"}, {"sentence": "Just building pet clinic:", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ClassFormatError \"invalid modifier 0x8\" when trying to make a default method @Loggable", "sentence_label": "title"}, {"sentence": "I am using JDK 1.8, jcabi-aspects 0.21.1 and AspectJ 1.8.5 in Eclipse Luna SR2.", "sentence_label": "explanation"}, {"sentence": "I build either in Eclipse or with the jcabi-maven-plugin 0.12.", "sentence_label": "explanation"}, {"sentence": "I have annotated a default method in an interface as @Loggable.", "sentence_label": "explanation"}, {"sentence": "After weaving, trying to load that class leads to an error:[ERROR]", "sentence_label": "current"}, {"sentence": "That's the \"static\" modifier.", "sentence_label": "explanation"}, {"sentence": "I have attached an example. Please compile and try to run java8.aspectsjtest.TheInterfaceTest as a JUnit 4 test.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "\"declare @field\" failing for \"final String\" fields (see also Bug 327141)", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AJC creates class files that cause [EXCEPTION] exceptions when using around advice on default methods in an interface", "sentence_label": "title"}, {"sentence": "Compiling an aspect that advises a default method (in JDK 8) with around advice results in an exception at run time.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "The attached zip file contains the artifacts needed to recreate this bug.", "sentence_label": "explanation"}, {"sentence": "[LIST]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AspectJ Internal Compiler Error", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] with generic inter type method declaration", "sentence_label": "title"}, {"sentence": "Below snippet produce [EXCEPTION].", "sentence_label": "current"}, {"sentence": "If I replace line [CODE] with [CODE]", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ajdoc fails when run with JDK 7", "sentence_label": "title"}, {"sentence": "I'm executing ajdoc via Maven and set source, target to 1.7 and complianceLevel to 1.8.", "sentence_label": "explanation"}, {"sentence": "When running the report generation with JDK 1.7.0_72 or 1.7.0_76, I run into the attached issue.", "sentence_label": "current"}, {"sentence": "1.8.0_40 does not lead to the problem.", "sentence_label": "explanation"}, {"sentence": "So, it looks to me as if the JDK 1.7 and 1.8 doclets are not properly identified.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Asjpect Crashing with Java 1.8 and Weblogic 12.1.3", "sentence_label": "title"}, {"sentence": "Hi,we recently migrated from java 1.5 and weblogic 9.2.4 to java 1.8 and weblogic 12.1.3 since then the existing aspects stopped working with java 1.8 and weblogic 12.1.3.", "sentence_label": "explanation"}, {"sentence": "The same aspects were working fine with java 1.5 and weblogic 12.1.3.", "sentence_label": "explanation"}, {"sentence": "I'm attaching the zip with all the aspects and aspectj core file that is being generated.", "sentence_label": "explanation"}, {"sentence": "This is very critical for us to deploy the same aspects on java 1.8 and weblogic 12.1.3.", "sentence_label": "explanation"}, {"sentence": "My Project Classpath has the following jars [JAR]", "sentence_label": "explanation"}, {"sentence": "I do have the following java agent set as JVM argument [JAR]", "sentence_label": "explanation"}, {"sentence": "I tried this with various eclipse versions like kepler, luna and mars and its the same issue across all the IDE versions.", "sentence_label": "explanation"}, {"sentence": "Please assist ASAP.", "sentence_label": "useless"}, {"sentence": "Thanks", "sentence_label": "useless"}, {"sentence": "Thiru", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Issue Resolving Type with Java 8 Lambda Functions", "sentence_label": "title"}, {"sentence": "I get a compiler error from ajc 1.8.6 when I try to compile a Java class making use of lambda functions:[CODE]", "sentence_label": "current"}, {"sentence": "The code that triggers this error is below. Note that this compiles with the Oracle JDK 1.8.0_60 compiler.", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "infinite loop during build time weaving when more than 2 aspects in hierarchy at [LOC]", "sentence_label": "title"}, {"sentence": "When weaving aspect, which has two base aspects, code from [CODE] goes into an infinite loop.", "sentence_label": "current"}, {"sentence": "There isn't assignment of boType inside while loop, so if lazyMethodGen doesn't find matching method in direct base class, it stays forewer in while loop, stack trace from build thread", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "I'm attaching simple maven test case and patch working for me.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] after adding project to inpath", "sentence_label": "title"}, {"sentence": "when I add my project to [LOC], it report an exception error.", "sentence_label": "current"}, {"sentence": "ADJT version:2.2.3", "sentence_label": "explanation"}, {"sentence": "Eclipse version:4.3.1", "sentence_label": "explanation"}, {"sentence": "[JAR] [JAR]", "sentence_label": "explanation"}, {"sentence": "Error log see below.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Annotation on introduced interface through declareparents causes AspectJ compiler error", "sentence_label": "title"}, {"sentence": "I'm using @DeclareParents to introduce an interface to certain entites.", "sentence_label": "explanation"}, {"sentence": " The problem is that when I add the following annotation @JsonView(View.Minimal.class) to the introduced interface, I get the following AspectJ compiler error", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception in thread \"main\" [LOC]: Instruction type does not match stack map", "sentence_label": "title"}, {"sentence": "Exception Details:[TRACE]", "sentence_label": "explanation"}, {"sentence": "Code snippet:[CODE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[ERROR] calling default method in Java 1.8", "sentence_label": "title"}, {"sentence": "The attached Java 1.8 code results in the following exception after compilation with ajc and executing the \"Main\" class", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "File descriptors leak in [METHOD]", "sentence_label": "title"}, {"sentence": "Undeploying a Webapp leaves open file descriptors if [METHOD] has been used to load any \"plugins\".", "sentence_label": "explanation"}, {"sentence": "We see this in Hudson when deployed to a Tomcat server", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "@Aspect aspect not correctly applied to Java 8 lambda-defined @Beans", "sentence_label": "title"}, {"sentence": "See Spring Framework issue: [URL]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "matching of generated classes is failing", "sentence_label": "title"}, {"sentence": "Classes can be generated whilst a JVM is running, for example proxies or those classes that represent lambdas.", "sentence_label": "explanation"}, {"sentence": "When Spring is using AspectJ for matching it can pass these generated classes to AspectJ - AspectJ tries to 'resolve them' by using [METHOD] to access them.", "sentence_label": "current"}, {"sentence": "That isn't going to work for generated types (and arguably is unnecessary since you already have the class in your hand!).", "sentence_label": "explanation"}, {"sentence": "See spring bug [URL]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Methods incorrectly tagged with ACC_INTERFACE during weave", "sentence_label": "title"}, {"sentence": "Reported via the mailing list (Tim Webster).", "sentence_label": "useless"}, {"sentence": "In his setup he was finding methods tagged as interface and it was tripping up code analysis tools.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Weaving failure with complex generic type", "sentence_label": "title"}, {"sentence": "Using aspectjtools 1.7.2 I get the following exception", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Attached are the classes I try to weave, and my code that does the actual weaving (reproducible also by command line).", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "abort ABORT -- ([EXCEPTION]) info cannot be null", "sentence_label": "title"}, {"sentence": "AspectJ Properties", "sentence_label": "explanation"}, {"sentence": "Dump file: ajcore.20150128.121204.163.txt", "sentence_label": "explanation"}, {"sentence": "Dump reason: java.lang.IllegalArgumentException", "sentence_label": "explanation"}, {"sentence": "Dump on exception: true", "sentence_label": "explanation"}, {"sentence": "Dump at exit condition: abort", "sentence_label": "explanation"}, {"sentence": "Exception Information", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "BUG - Use of Wrong Operator in String Comparison - [FILE]", "sentence_label": "title"}, {"sentence": "We are currently using [JAR] and during veracode analysis, this scanner found this bug in [FILE] (Line 767) in the version 1.6.8, 1.6.9 and 1.8.4 (Line 793): [TRACE]", "sentence_label": "current"}, {"sentence": "Description: Using '==' to compare two strings for equality or '!=' for inequality actually compares the object references rather than their values.", "sentence_label": "explanation"}, {"sentence": "It is unlikely that this reflects the intended application logic.", "sentence_label": "explanation"}, {"sentence": "Recommendations: Use the [METHOD] method to compare strings, not the '==' or '!=' operator.", "sentence_label": "explanation"}, {"sentence": "is this a false positive?", "sentence_label": "useless"}, {"sentence": "Thanks.", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] compile problem with -1.8", "sentence_label": "title"}, {"sentence": "Similar to other 'well known' local variables like [METHOD], the eclipse 1.8 compiler is complaining that [METHOD] is not initialized when it is a variable that we (AspectJ) look after.", "sentence_label": "current"}, {"sentence": "The fix is the same as for [METHOD] et al - just special case this well known variable.", "sentence_label": "explanation"}, {"sentence": "This did not surface in earlier testing because all the thisAspectInstance tests (in the 1.6.12 testsuite) compile with -1.5 - it is only when compiling with -1.8 that the extra checking is done.", "sentence_label": "explanation"}, {"sentence": "I'm copying the 1.6.12 tests into the 1.8.4 suite and having them specify -1.8.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AspectJ fails to build with Java 8u25", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "I noticed this compilation error when building AspectJ with Java 8u25:", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "It also fails with Java 8u40-b09.", "sentence_label": "explanation"}, {"sentence": "Java 8u5 worked fine.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "methods using [METHOD] failing to compile", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] creates wrong index entry for ignored entries", "sentence_label": "title"}, {"sentence": "The code states:[CODE]", "sentence_label": "explanation"}, {"sentence": "But for ignored entries, the crc(originalBytes) is ALWAYS not equal to the 'crcClass' value (which is ZERO).", "sentence_label": "current"}, {"sentence": "This means that the whole issue of caching simply does not work for the ignored entries.", "sentence_label": "current"}, {"sentence": "The fix is simple: in [METHOD] the code should ALWAYS calculate the 'crcClass' value on the original bytes, and add the 'crcWeaved' one only for non-ignored ones.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Abstract aspect hierarchy and annotation style leads to NPE", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "gives [TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "jsr269: annotation processing", "sentence_label": "title"}, {"sentence": "If using an annotation processor successfully in a Java project and the project is converted to an AspectJ project, the processor stops working.", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [FILE]", "sentence_label": "title"}, {"sentence": "Was originally being tracked as part of bug 375777.", "sentence_label": "explanation"}, {"sentence": "The exception is: [TRACE]", "sentence_label": "explanation"}, {"sentence": "There is an attached full trace to that other bug.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[ERROR] with Java8 but not with Java6", "sentence_label": "title"}, {"sentence": "In our Nuclos ERP system (git sources at [URL]), I encounter the following with Java 1.8.0:", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "This was tested against our sources, commit on branch master.", "sentence_label": "explanation"}, {"sentence": "Technical it is still the same bug as bug 421307.", "sentence_label": "explanation"}, {"sentence": "However, there is no way to circumvent it, as -XX:-UseSplitVerifier has been removed from the VM.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AspectJ Internal Error: unable to add stackmap attributes", "sentence_label": "title"}, {"sentence": "Code example [CODE]", "sentence_label": "explanation"}, {"sentence": "Output [TRACE]", "sentence_label": "explanation"}, {"sentence": "Thanks,", "sentence_label": "useless"}, {"sentence": "Danny", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Java 1.8.0: Incorrect setup for a generic type, raw type should not point to raw", "sentence_label": "title"}, {"sentence": "In our Nuclos ERP system (git sources at [URL]), I encounter the following with Java 1.8.0", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "This was tested against our sources, commit on branch master.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Java 1.8.0 problem: Can't ask to parameterize a member of non-generic type", "sentence_label": "title"}, {"sentence": "In our Nuclos ERP system (git sources at [URL]), I encounter the following with Java 1.8.0", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTIOn]: E not found - unable to determine URL", "sentence_label": "title"}, {"sentence": "After some code changes in our framework I get the following exceptions.", "sentence_label": "current"}, {"sentence": "Interesting is that it seems to depend on one line of code:[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "LTW not working when JMX is enabled", "sentence_label": "title"}, {"sentence": "When I enable JMX remote management on a JVM along with AspectJ load-time weaving (LTW), our Aspect doesn't appear to get woven in.", "sentence_label": "current"}, {"sentence": "This are the JVM arguments: [CODE]", "sentence_label": "explanation"}, {"sentence": "Note that if I don't enable JMX remote management, the Aspect works fine.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "External pointcut refs not resolved if named pointcut used by declare", "sentence_label": "title"}, {"sentence": "Get incorrect error [ERROR] when compiling this code using AJDT 1.1.4/AspectJ 1.1.1: [CODE]", "sentence_label": "current"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] when multiple threads enter the weaver", "sentence_label": "title"}, {"sentence": "I am using AspectJ 1.7.1.  Occasionally I see the following exception, which I believe is related to multiple threads initializing some internal state.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [METHOD] when building", "sentence_label": "title"}, {"sentence": "Eclipse has this problem compiling my AspectJ project", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Clean + rebuild does not help -- the problem always reproduces.", "sentence_label": "explanation"}, {"sentence": "Building from Maven (mvn install), everything is fine.", "sentence_label": "explanation"}, {"sentence": "The following message appears in the Event Log and may be related:", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "I'm unable to provide a sample since it's quite a large project.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Compilation error on JAVA 8 lambda type inference with AJC 1.8.9", "sentence_label": "title"}, {"sentence": "I got a compilation error on AJC 1.8.9 when I use java 8 lambda, but everything is ok on javac.", "sentence_label": "current"}, {"sentence": "Below is the compilation error info and reproducable code is in attachment: [TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "An internal error occurred during \"Compute launch button tooltip\" [ERROR]", "sentence_label": "title"}, {"sentence": "Every now and then I see an error popup window with the messsage \"An internal error occurred during: Compute launch button tooltip\"", "sentence_label": "current"}, {"sentence": "Ful exception in the log file is: [TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Under specific conditions the following error occurs: \"[EXCEPTION]: Invalid length 655xx in LocalVariableTable in class file\"", "sentence_label": "title"}, {"sentence": "While loading class files, after compiling the code below and enabling AspectJ's load time weaving in SpringFramework, the following error occurs: [TRACE]", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "Currently the following is known: [LIST]", "sentence_label": "explanation"}, {"sentence": "javap results [CODE]", "sentence_label": "explanation"}, {"sentence": "error stack trace [TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "An internal error occurred during: \"Initializing Java Tooling\"", "sentence_label": "title"}, {"sentence": "What steps will reproduce the problem? [LIST]", "sentence_label": "explanation"}, {"sentence": "Other times I have restarted the workbench this error hasn't happened.", "sentence_label": "explanation"}, {"sentence": "Error Details", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [LOC]", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [LOC]", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Aspectj bug with scala 2.9.0-SNAPSHOT", "sentence_label": "title"}, {"sentence": "Aspectj raises an exception when compiling scala 2.9.0 classes.", "sentence_label": "current"}, {"sentence": "The ajcore is attached to this ticket as well as a maven project to reproduce the bug.", "sentence_label": "explanation"}, {"sentence": "To reproduce: [LIST]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] on startup", "sentence_label": "title"}, {"sentence": "I'm seeing occasional (quite rare, actually) exceptions on starting my application (which uses Equinox Weaving to enhance Spring-managed beans at load time).", "sentence_label": "current"}, {"sentence": "Can't say for sure if the problem is with AspectJ or Spring.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] BuilderManager when save any class", "sentence_label": "title"}, {"sentence": "When I save an annotated class this fail occurrs (the annotation used is not for aspects).", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Compile error: [EXCEPTION] thrown: null", "sentence_label": "explanation"}, {"sentence": "Reproducible: Always", "sentence_label": "explanation"}, {"sentence": "Steps to Reproduce: [LIST]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] problem with handles", "sentence_label": "title"}, {"sentence": "To reproduce: [LIST]", "sentence_label": "explanation"}, {"sentence": "Handle processing problem, the handle is: [TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AspectJ Internal Compiler Error on every save of a file in AJ project", "sentence_label": "title"}, {"sentence": "Every time i save a file in project an error box is show with text below.", "sentence_label": "current"}, {"sentence": "Every time a clean is necessary to fix the error.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "When trying to clean all projects in the workspace I get a stack overflow exception", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Reproducible: Sometimes", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Wrong packaging of output jar file", "sentence_label": "title"}, {"sentence": "Steps To Reproduce:[LIST]", "sentence_label": "explanation"}, {"sentence": "More information: I tried to understand what is the difference between manually packed jar and Eclipse plugin packed jar, and they look almost the same to me when unpacked again - just the ordering of entries is different.", "sentence_label": "explanation"}, {"sentence": "But maybe I miss something.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Compile spring-framework-2.5.6, error occurred", "sentence_label": "title"}, {"sentence": "bug-88", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception message box popping up when modifying an aspect (HashMap.java:300)", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Reproducible: Sometimes", "sentence_label": "explanation"}, {"sentence": "Steps to Reproduce:[LIST]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "The following broken code is raising an exception in the compiler", "sentence_label": "title"}, {"sentence": "While working on bug 296044, I found that the compiler was throwing an excepiton under this code in default package AnnotAspect.aj", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unhandled exception: [METHOD] should never be called", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Compile error: [EXCEPTION] thrown: [METHOD] should never be called", "sentence_label": "explanation"}, {"sentence": "Reproducible: Sometimes", "sentence_label": "explanation"}, {"sentence": "Steps to Reproduce:?", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AJDT 1.5 inheritance handling bug", "sentence_label": "title"}, {"sentence": "We have simple hierarchy [CODE]", "sentence_label": "explanation"}, {"sentence": "when trying to read LegalClient list have following exception under final AJDT 1.5 for Eclipse 3.3", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "With AJDT ajdt_1.5.0.200705090533_archive.zip all works fine.", "sentence_label": "explanation"}, {"sentence": "All AJDT versions for Eclipse 3.2.2 and 3.2.1 works OK, too.", "sentence_label": "explanation"}, {"sentence": "Whats happens with final AJDT 1.5?!", "sentence_label": "useless"}, {"sentence": "Best regards,", "sentence_label": "useless"}, {"sentence": "Vladimir Borkovkin", "sentence_label": "useless"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] when using an anonymous inner class in a Aspect", "sentence_label": "title"}, {"sentence": "This runtime error occurs when i declare an inter-type method that uses an anonymous inner class.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "This has to do in part that the aspect and the class being declared on are in different packages.", "sentence_label": "explanation"}, {"sentence": "It looks like the aspect tries to call on the inner class but since Inner classes have a package level visibility we get an access error during runtime.", "sentence_label": "explanation"}, {"sentence": "This works when the class and the aspect are in the same package.", "sentence_label": "explanation"}, {"sentence": "I'm not sure if this should even be allowed to compile.", "sentence_label": "explanation"}, {"sentence": "I've attached the files i used to produce this error.  Just run the main method on class F.", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "AspectJ Compiler fails with [ERROR]", "sentence_label": "title"}, {"sentence": "The AspectJ Copmpiler fails with the [ERROR] at the end while compiling java classes (compile time weaving).", "sentence_label": "current"}, {"sentence": "The Aspect which causes it is an annotated Java class.", "sentence_label": "explanation"}, {"sentence": "It only causes the error, when the [METHOD] Annotation is used.", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "The Error occurs also when weaving a project where the join point does not match.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unexpected exception during compilation by AspectJ", "sentence_label": "title"}, {"sentence": "When I save my code (CTRL + S) in Eclipse, an exception occured...", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "aspectj.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "hadoop utilities need to support provided delegation tokens", "sentence_label": "title"}, {"sentence": "When using the webhdfs:// filesystem (especially from distcp), we need the ability to inject a delegation token rather than webhdfs initialize its own.", "sentence_label": "expected"}, {"sentence": "This would allow for cross-authentication-zone file system accesses.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "In HDFS, sync() not yet guarantees data available to the new readers", "sentence_label": "title"}, {"sentence": "In the append design doc ([URL]), it says \"A reader is guaranteed to be able to read data that was 'flushed' before the reader opened the file\"", "sentence_label": "expected"}, {"sentence": "However, this feature is not yet implemented.", "sentence_label": "explanation"}, {"sentence": "Note that the operation 'flushed' is now called \"sync\".", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "proxy to call LDAP for IP lookup and get user ID and directories, validate requested URL", "sentence_label": "title"}, {"sentence": "It is easy to manage user accounts using LDAP.", "sentence_label": "benefit"}, {"sentence": "by adding support for LDAP, proxy can do IP authorization in a headless fashion.", "sentence_label": "expected"}, {"sentence": "when a user send a request, proxy extract IP address and request PathInfo from the request.", "sentence_label": "explanation"}, {"sentence": "then it searches the LDAP server to get the allowed HDFS root paths given the IP address.", "sentence_label": "explanation"}, {"sentence": "Proxy will match the user request PathInfo with the allowed HDFS root path, return 403 if it could not find a match.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "A stress-test tool for HDFS", "sentence_label": "title"}, {"sentence": "It would be good to have a tool for automatic stress testing HDFS, which would provide IO-intensive load on HDFS cluster.", "sentence_label": "expected"}, {"sentence": "The idea is to start the tool, let it run overnight, and then be able to analyze possible failures.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for variable length block", "sentence_label": "title"}, {"sentence": "Currently HDFS supports fixed length blocks.", "sentence_label": "current"}, {"sentence": "Supporting variable length block will allow new use cases and features to be built on top of HDFS", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Quorum-based protocol for reading and writing edit logs", "sentence_label": "title"}, {"sentence": "Currently, one of the weak points of the HA design is that it relies on shared storage such as an NFS filer for the shared edit log.", "sentence_label": "current"}, {"sentence": "One alternative that has been proposed is to depend on BookKeeper, a ZooKeeper subproject which provides a highly available replicated edit log on commodity hardware.", "sentence_label": "explanation"}, {"sentence": "This JIRA is to implement another alternative, based on a quorum commit protocol, integrated more tightly in HDFS and with the requirements driven only by HDFS's needs rather than more generic use cases.", "sentence_label": "expected"}, {"sentence": "More details to follow.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS implementation should throw exceptions defined in AbstractFileSystem", "sentence_label": "title"}, {"sentence": "HDFS implementation [URL] should throw exceptions as defined in AbstractFileSystem.", "sentence_label": "expected"}, {"sentence": "To facilitate this, ClientProtocol should be changed to throw specific exceptions, as defined in AbstractFileSystem.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Verify datanodes' identities to clients in secure clusters", "sentence_label": "title"}, {"sentence": "Currently we use block access tokens to allow datanodes to verify clients' identities,", "sentence_label": "current"}, {"sentence": "however we don't have a way for clients to verify the authenticity of the datanodes themselves.", "sentence_label": "drawback"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add an api to get the visible length of a DFSDataInputStream.", "sentence_label": "title"}, {"sentence": "Hflush guarantees that the bytes written before are visible to the new readers.", "sentence_label": "current"}, {"sentence": "However, there is no way to get the length of the visible bytes.", "sentence_label": "drawback"}, {"sentence": "The visible length is useful in some applications like SequenceFile.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS Namenode and Datanode WebUI information needs to be accessible programmatically for scripts", "sentence_label": "title"}, {"sentence": "Currently Namenode and Datanode web page needs to be scraped by scripts to get this information.", "sentence_label": "current"}, {"sentence": "Having an interface where this structured information is provided, will help building scripts around it.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow long-running Mover tool to login with keytab", "sentence_label": "title"}, {"sentence": "The idea of this jira is to support mover tool the ability to login from a keytab.", "sentence_label": "expected"}, {"sentence": "That way, the RPC client would re-login from the keytab after expiration, which means the process could remain authenticated indefinitely.", "sentence_label": "benefit"}, {"sentence": "With some people wanting to run mover non-stop in \"daemon mode\", that might be a reasonable feature to add.", "sentence_label": "expected"}, {"sentence": "Recently balancer has been enhanced using this feature.", "sentence_label": "benefit"}, {"sentence": "Thanks Zhe Zhang for the offline discussions.", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide testing support for DFSClient to drop RPC responses", "sentence_label": "title"}, {"sentence": "We plan to add capability to DFSClient so that the client is able to intentionally drop responses of NameNode RPC calls according to settings in configuration.", "sentence_label": "expected"}, {"sentence": "In this way we can do better system test for NameNode retry cache, especially when NN failover happens.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Plugable block id generation", "sentence_label": "title"}, {"sentence": "The idea is to have a way to easily create block id generation engines that may fit a certain purpose.", "sentence_label": "expected"}, {"sentence": "One of them could be HDFS-898 started by Konstantin, but potentially others.", "sentence_label": "explanation"}, {"sentence": "We chatted with Dhruba about this for a while and came up with the following approach:", "sentence_label": "explanation"}, {"sentence": "There should be a BlockIDGenerator interface that has following methods:<LIST>", "sentence_label": "explanation"}, {"sentence": "First two methods are needed for block generation engines that hold a certain state.", "sentence_label": "explanation"}, {"sentence": "During the restart, when namenode reads the fsimage it will notify generator about all the blocks it reads from the image and during runtime namenode will notify the generator about block removals on file deletion.", "sentence_label": "explanation"}, {"sentence": "The instance of the generator will also have a reference to the block registry, the interface that BlockManager implements.", "sentence_label": "explanation"}, {"sentence": "The only method there is _blockExists(Block)_, so that the current random block id generation can be implemented, since it needs to check with the block manager if the id is already present.", "sentence_label": "explanation"}, {"sentence": "What does the community think about this proposal?", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS 20 append: Lightweight NameNode operation to trigger lease recovery", "sentence_label": "title"}, {"sentence": "Currently HBase uses append to trigger the close of HLog during Hlog split.", "sentence_label": "current"}, {"sentence": "Append is a very expensive operation, which involves not only NameNode operations but creating a writing pipeline.", "sentence_label": "drawback"}, {"sentence": "If one of datanodes on the pipeline has a problem, this recovery may takes minutes.", "sentence_label": "drawback"}, {"sentence": "I'd like implement a lightweight NameNode operation to trigger lease recovery and make HBase to use this instead.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide a stronger data guarantee in the write pipeline", "sentence_label": "title"}, {"sentence": "In the current design, if there is a datanode/network failure in the write pipeline, DFSClient will try to remove the failed datanode from the pipeline and then continue writing with the remaining datanodes.", "sentence_label": "current"}, {"sentence": "As a result, the number of datanodes in the pipeline is decreased.", "sentence_label": "current"}, {"sentence": "Unfortunately, it is possible that DFSClient may incorrectly remove a healthy datanode but leave the failed datanode in the pipeline because failure detection may be inaccurate under erroneous conditions.", "sentence_label": "drawback"}, {"sentence": "We propose to have a new mechanism for adding new datanodes to the pipeline in order to provide a stronger data guarantee.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Adopt JMXJsonServlet into HDFS in order to query statistics", "sentence_label": "title"}, {"sentence": "HADOOP-7144 added JMXJsonServlet into Common.", "sentence_label": "explanation"}, {"sentence": "It gives the capability to query statistics and metrics exposed via JMX to be queried through HTTP.", "sentence_label": "explanation"}, {"sentence": "We adopt this into HDFS.", "sentence_label": "expected"}, {"sentence": "This provides the alternative solution to HDFS-1874<LINK>.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add capability for NFS gateway to reject connections from unprivileged port", "sentence_label": "title"}, {"sentence": "Many NFS servers have the ability to only accept client connections originating from privileged ports.", "sentence_label": "explanation"}, {"sentence": "It would be nice if the HDFS NFS gateway had the same feature.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "DataTransfer Protocol using protobufs", "sentence_label": "title"}, {"sentence": "We've been talking about this for a long time", "sentence_label": "useless"}, {"sentence": "would be nice to use something like protobufs or Thrift for some of our wire protocols.", "sentence_label": "expected"}, {"sentence": "I knocked together a prototype of DataTransferProtocol on top of proto bufs that seems to work.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HA: Autopopulate standby name dirs if they're empty", "sentence_label": "title"}, {"sentence": "To setup a SBN we currently format the primary then manually copy the name dirs to the SBN.", "sentence_label": "current"}, {"sentence": "The SBN should do this automatically.", "sentence_label": "expected"}, {"sentence": "Specifically, on NN startup, if HA with a shared edits dir is configured and populated, if the SBN has empty name dirs it should downloads the image and log from the primary (as an optimization it could copy the logs from the shared dir).", "sentence_label": "expected"}, {"sentence": "If the other NN is still in standby then it should fail to start as it does currently.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for specifying a static uid/gid mapping for the NFS gateway", "sentence_label": "title"}, {"sentence": "It's quite reasonable that folks will want to access the HDFS NFS Gateway from client machines where the UIDs/GIDs do not line up with those on the NFS Gateway itself.", "sentence_label": "explanation"}, {"sentence": "We should provide a way to map these UIDs/GIDs between the systems.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS should issue multiple RPCs for listing a large directory", "sentence_label": "title"}, {"sentence": "Currently HDFS issues one RPC from the client to the NameNode for listing a directory.", "sentence_label": "current"}, {"sentence": "However some directories are large that contain thousands or millions of items.", "sentence_label": "drawback"}, {"sentence": "Listing such large directories in one RPC has a few shortcomings:<LIST>", "sentence_label": "drawback"}, {"sentence": "I propose to implement a directory listing using multiple RPCs.", "sentence_label": "expected"}, {"sentence": "Here is the plan:<LIST>", "sentence_label": "explanation"}, {"sentence": "This proposal will change the semantics of large directory listing in a sense that listing is no longer an atomic operation if a directory's content is changing while the listing operation is in progress.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implement erasure coding as a layer on HDFS", "sentence_label": "title"}, {"sentence": "The goal of this JIRA is to discuss how the cost of raw storage for a HDFS file system can be reduced.", "sentence_label": "expected"}, {"sentence": "Keeping three copies of the same data is very costly, especially when the size of storage is huge.", "sentence_label": "drawback"}, {"sentence": "One idea is to reduce the replication factor and do erasure coding of a set of blocks so that the over probability of failure of a block remains the same as before.", "sentence_label": "expected"}, {"sentence": "Many forms of error-correcting codes are available, see <LINK>.", "sentence_label": "example"}, {"sentence": "Also, recent research from CMU has described DiskReduce <LINK>.", "sentence_label": "example"}, {"sentence": "My opinion is to discuss implementation strategies that are not part of base HDFS, but is a layer on top of HDFS.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Intrinsic limits for HDFS files, directories", "sentence_label": "title"}, {"sentence": "Enforce a configurable limit on:<LIST>", "sentence_label": "expected"}, {"sentence": "The intention is to prevent a too-long name or a too-full directory.", "sentence_label": "benefit"}, {"sentence": "This is not about RPC buffers, the length of command lines, etc.", "sentence_label": "explanation"}, {"sentence": "There may be good reasons for those kinds of limits, but that is not the intended scope of this feature.", "sentence_label": "explanation"}, {"sentence": "Consequently, a reasonable implementation might be to extend the existing quota checker so that it faults the creation of a name that violates the limits.", "sentence_label": "expected"}, {"sentence": "This strategy of faulting new creation evades the problem of existing names or directories that violate the limits.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Serialize NN edits log as avro records", "sentence_label": "title"}, {"sentence": "Right now, the edits log is a mishmash of ad-hoc serialization and Writables.", "sentence_label": "current"}, {"sentence": "Switching it over to Avro records would be really useful for operator tools", "sentence_label": "expected"}, {"sentence": " an \"offline edits viewer\" would become trivial (\"avrocat\")", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create multi-format parser for edits logs file, support binary and XML formats initially", "sentence_label": "title"}, {"sentence": "Create multi-format parser for edits logs file, support binary and XML formats initially.", "sentence_label": "expected"}, {"sentence": "Parsing should work from any supported format to any other supported format", "sentence_label": "expected"}, {"sentence": "for example, from binary to XML and from XML to binary", "sentence_label": "example"}, {"sentence": "The binary format is the format used by FSEditLog class to read/write edits file.", "sentence_label": "explanation"}, {"sentence": "Primary reason to develop this tool is to help with troubleshooting, the binary format is hard to read and edit (for human troubleshooters).", "sentence_label": "benefit"}, {"sentence": "Longer term it could be used to clean up and minimize parsers for fsimage and edits files.", "sentence_label": "benefit"}, {"sentence": "Edits parser OfflineEditsViewer is written in a very similar fashion to OfflineImageViewer.", "sentence_label": "explanation"}, {"sentence": "Next step would be to merge OfflineImageViewer and OfflineEditsViewer and use the result in both FSImage and FSEditLog.", "sentence_label": "explanation"}, {"sentence": "This is subject to change, specifically depending on adoption of avro", "sentence_label": "explanation"}, {"sentence": "which would completely change how objects are serialized as well as provide ways to convert files to different formats", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Automatic failover support for NN HA", "sentence_label": "title"}, {"sentence": "HDFS-1623 was the umbrella task for implementation of NN HA capabilities.", "sentence_label": "explanation"}, {"sentence": "However, it only focused on manually-triggered failover.", "sentence_label": "current"}, {"sentence": "Given that the HDFS-1623 branch will be merged shortly, I'm opening this JIRA to consolidate/track subtasks for automatic failover support and related improvements.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Re-factor block access token implementation to conform to the generic Token interface in Common", "sentence_label": "title"}, {"sentence": "This makes it possible to use block access token as shared key for client-to-datanode authentication over RPC.", "sentence_label": "benefit"}, {"sentence": "However, access authorization is still based on block access token semantics.", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "The NameNode should expose name dir statuses via JMX", "sentence_label": "title"}, {"sentence": "We currently display this info on the NN web UI, so users who wish to monitor this must either do it manually or parse HTML.", "sentence_label": "current"}, {"sentence": "We should publish this information via JMX.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Umbrella jira for improved HDFS rolling upgrades", "sentence_label": "title"}, {"sentence": "In order to roll a new HDFS release through a large cluster quickly and safely, a few enhancements are needed in HDFS.", "sentence_label": "expected"}, {"sentence": "An initial High level design document will be attached to this jira, and sub-jiras will itemize the individual tasks.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Admin command to track file and locations from block id", "sentence_label": "title"}, {"sentence": "A dfsadmin command that allows finding out the file and the locations given a block number will be very useful in debugging production issues.", "sentence_label": "expected"}, {"sentence": "It may be possible to add this feature to Fsck, instead of creating a new command.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add Tracing to HDFS", "sentence_label": "title"}, {"sentence": "Since Google's Dapper paper has shown the benefits of tracing for a large distributed system, it seems like a good time to add tracing to HDFS.", "sentence_label": "expected"}, {"sentence": "HBase has added tracing using HTrace.", "sentence_label": "explanation"}, {"sentence": "I propose that the same can be done within HDFS.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for encrypting the DataTransferProtocol", "sentence_label": "title"}, {"sentence": "Currently all HDFS RPCs performed by NNs/DNs/clients can be optionally encrypted.", "sentence_label": "current"}, {"sentence": "However, actual data read or written between DNs and clients (or DNs to DNs) is sent in the clear.", "sentence_label": "drawback"}, {"sentence": "When processing sensitive data on a shared cluster, confidentiality of the data read/written from/to HDFS may be desired", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Expose last checkpoint time and transaction stats as JMX metrics", "sentence_label": "title"}, {"sentence": "I think we should expose at least the following:<LIST>", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness", "sentence_label": "title"}, {"sentence": "This issue proposes introduction of a new feature: the DataNode Lifeline Protocol.", "sentence_label": "expected"}, {"sentence": "This is an RPC protocol that is responsible for reporting liveness and basic health information about a DataNode to a NameNode.", "sentence_label": "explanation"}, {"sentence": "Compared to the existing heartbeat messages, it is lightweight and not prone to resource contention problems that can harm accurate tracking of DataNode liveness currently.", "sentence_label": "benefit"}, {"sentence": "The attached design document contains more details.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "OIV: add ReverseXML processor which reconstructs an fsimage from an XML file.", "sentence_label": "title"}, {"sentence": "OIV: add ReverseXML processor which reconstructs an fsimage from an XML file.", "sentence_label": "expected"}, {"sentence": "This will make it easy to create fsimages for testing, and manually edit fsimages when there is corruption.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Integration with BookKeeper logging system", "sentence_label": "title"}, {"sentence": "BookKeeper is a system to reliably log streams of records (<LINK>).", "sentence_label": "explanation"}, {"sentence": "The NameNode is a natural target for such a system for being the metadata repository of the entire file system for HDFS.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Generalize BlockInfo in preparation of merging HDFS-7285 into trunk and branch-2", "sentence_label": "title"}, {"sentence": "Per offline discussion with Andrew Wang, for easier and cleaner reviewing, we should probably shrink the size of the consolidated HDFS-7285 patch by merging some mechanical changes that are unrelated to EC-specific logic to trunk first.", "sentence_label": "expected"}, {"sentence": "Those include renaming, subclassing, interfaces, and so forth.", "sentence_label": "explanation"}, {"sentence": "This umbrella JIRA specifically aims to merge code changes around BlockInfo and BlockInfoContiguous back into trunk.", "sentence_label": "explanation"}, {"sentence": "The structure of BlockInfo -related classes are shown below:", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add status NameNode startup to webUI", "sentence_label": "title"}, {"sentence": "Currently NameNode WebUI server starts only after the fsimage is loaded, edits are applied and checkpoint is complete.", "sentence_label": "current"}, {"sentence": "Any status related to namenode startin up is available only in the logs.", "sentence_label": "current"}, {"sentence": "I propose starting the webserver before loading namespace and providing namenode startup information.", "sentence_label": "expected"}, {"sentence": "More details in the next comment.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support Archival Storage", "sentence_label": "title"}, {"sentence": "In most of the Hadoop clusters, as more and more data is stored for longer time, the demand for storage is outstripping the compute.", "sentence_label": "explanation"}, {"sentence": "Hadoop needs a cost effective and easy to manage solution to meet this demand for storage.", "sentence_label": "explanation"}, {"sentence": "Current solution is: <LIST>", "sentence_label": "current"}, {"sentence": "This adds along with storage capacity unnecessary compute capacity to the cluster.", "sentence_label": "drawback"}, {"sentence": "Hadoop needs a solution to decouple growing storage capacity from compute capacity.", "sentence_label": "explanation"}, {"sentence": "Nodes with higher density and less expensive storage with low compute power are becoming available and can be used as cold storage in the clusters.", "sentence_label": "expected"}, {"sentence": "Based on policy the data from hot storage can be moved to cold storage.", "sentence_label": "benefit"}, {"sentence": "Adding more nodes to the cold storage can grow the storage independent of the compute capacity in the cluster.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Plugin interface to enable delegation of HDFS authorization assertions", "sentence_label": "title"}, {"sentence": "When Hbase data, HiveMetaStore data or Search data is accessed via services (Hbase region servers, HiveServer2, Impala, Solr) the services can enforce permissions on corresponding entities (databases, tables, views, columns, search collections, documents).", "sentence_label": "explanation"}, {"sentence": "It is desirable, when the data is accessed directly by users accessing the underlying data files (for example from a MapReduce job), that the permission of the data files map to the permissions of the corresponding data entity (for example table, column family or search collection).", "sentence_label": "explanation"}, {"sentence": "To enable this we need to have the necessary hooks in place in the NameNode to delegate authorization to an external system that can map HDFS files/directories to data entities and resolve their permissions based on the data entities permissions.", "sentence_label": "expected"}, {"sentence": "I\u2019ll be posting a design proposal in the next few days.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS scalability with multiple namenodes", "sentence_label": "title"}, {"sentence": "HDFS currently uses a single namenode that limits scalability of the cluster.", "sentence_label": "current"}, {"sentence": "This jira proposes an architecture to scale the nameservice horizontally using multiple namenodes.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide volume management functionality for DataNode", "sentence_label": "title"}, {"sentence": "The current management unit in Hadoop is a node,", "sentence_label": "current"}, {"sentence": "for example if a node failed, it will be kicked out and all the data on the node will be replicated.", "sentence_label": "example"}, {"sentence": "As almost all SATA controller support hotplug, we add a new command line interface to datanode, thus it can list, add or remove a volume online, which means we can change a disk without node decommission.", "sentence_label": "expected"}, {"sentence": "Moreover, if the failed disk still readable and the node has enouth space, it can migrate data on the disks to other disks in the same node.", "sentence_label": "benefit"}, {"sentence": "A more detailed design document will be attached.", "sentence_label": "explanation"}, {"sentence": "The original version in our lab is implemented against 0.20 datanode directly,", "sentence_label": "explanation"}, {"sentence": "and is it better to implemented it in contrib?", "sentence_label": "explanation"}, {"sentence": "Or any other suggestion?", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for HTTPS and swebhdfs to HttpFS", "sentence_label": "title"}, {"sentence": "HDFS-3987 added HTTPS support to webhdfs, using the new scheme swebhdfs://.", "sentence_label": "explanation"}, {"sentence": "This JIRA is to add HTTPS support to HttpFS as well as supporting the DelegationTokens required by swebhdfs://", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "enable HDFS local reads via mmap", "sentence_label": "title"}, {"sentence": "Currently, the short-circuit local read pathway allows HDFS clients to access files directly without going through the DataNode.", "sentence_label": "current"}, {"sentence": "However, all of these reads involve a copy at the operating system level, since they rely on the read() / pread() / etc family of kernel interfaces.", "sentence_label": "drawback"}, {"sentence": "We would like to enable HDFS to read local files via mmap.", "sentence_label": "expected"}, {"sentence": "This would enable truly zero-copy reads.", "sentence_label": "benefit"}, {"sentence": "In the initial implementation, zero-copy reads will only be performed when checksums were disabled.", "sentence_label": "explanation"}, {"sentence": "Later, we can use the DataNode's cache awareness to only perform zero-copy reads when we know that checksum has already been verified.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "nntop: top--like tool for name node users", "sentence_label": "title"}, {"sentence": "In this jira we motivate the need for nntop, a tool that, similarly to what top does in Linux, gives the list of top users of the HDFS name node and gives insight about which users are sending majority of each traffic type to the name node.", "sentence_label": "expected"}, {"sentence": "This information turns out to be the most critical when the name node is under pressure and the HDFS admin needs to know which user is hammering the name node and with what kind of requests.", "sentence_label": "explanation"}, {"sentence": "Here we present the design of nntop which has been in production at Twitter in the past 10 months.", "sentence_label": "explanation"}, {"sentence": "nntop proved to have low cpu overhead (< 2% in a cluster of 4K nodes), low memory footprint (less than a few MB), and quite efficient for the write path (only two hash lookup for updating a metric).", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Enable Quota Support for Storage Types", "sentence_label": "title"}, {"sentence": "Phase II of the Heterogeneous storage features have completed by HDFS-6584.", "sentence_label": "explanation"}, {"sentence": "This JIRA is opened to enable Quota support of different storage types in terms of storage space usage.", "sentence_label": "expected"}, {"sentence": "This is more important for certain storage types such as SSD as it is precious and more performant.", "sentence_label": "explanation"}, {"sentence": "As described in the design doc of HDFS-5682, we plan to add new quotaByStorageType command and new name node RPC protocol for it.", "sentence_label": "expected"}, {"sentence": "The quota by storage type feature is applied to HDFS directory level similar to traditional HDFS space quota.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "WebHDFS: support file concat", "sentence_label": "title"}, {"sentence": "In trunk and branch-2, DistributedFileSystem has a new concat(Path trg, Path [] psrcs) method.", "sentence_label": "explanation"}, {"sentence": "WebHDFS should support it.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add an admin command to trigger an edit log roll", "sentence_label": "title"}, {"sentence": "This seems like it would also be helpful outside of the context of HA, but especially so given that the standby can currently only read finalized log segments.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Transparent data at rest encryption", "sentence_label": "title"}, {"sentence": "Because of privacy and security regulations, for many industries, sensitive data at rest must be in encrypted form.", "sentence_label": "explanation"}, {"sentence": "For example: the health-care industry (HIPAA regulations), the card payment industry (PCI DSS regulations) or the US government (FISMA regulations).", "sentence_label": "example"}, {"sentence": "This JIRA aims to provide a mechanism to encrypt HDFS data at rest that can be used transparently by any application accessing HDFS via Hadoop Filesystem Java API, Hadoop libhdfs C library, or WebHDFS REST API.", "sentence_label": "expected"}, {"sentence": "The resulting implementation should be able to be used in compliance with different regulation requirements.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow long-running Balancer to login with keytab", "sentence_label": "title"}, {"sentence": "From the discussion of HDFS-9698, it might be nice to allow the balancer to run as a daemon and login from a keytab.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support hsync in HDFS", "sentence_label": "title"}, {"sentence": "HDFS-731 implements hsync by default as hflush.", "sentence_label": "explanation"}, {"sentence": "As descriibed in HADOOP-6313, the real expected semantics should be \"flushes out to all replicas and all replicas have done posix fsync equivalent - for example the OS has flushed it to the disk device (but the disk may have it in its cache).\"", "sentence_label": "expected"}, {"sentence": "This jira aims to implement the expected behaviour.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Record DFS client/cli id with username/kerbros session token in audit log or hdfs client trace log", "sentence_label": "title"}, {"sentence": "HDFS usage calculation is commonly calculated by running dfs -dus and group directory usage by user at fix interval.", "sentence_label": "current"}, {"sentence": "This approach does not show accurate HDFS usage if a lot of read/write activity of equivalent amount of data happen at fix interval.", "sentence_label": "drawback"}, {"sentence": "In order to identify usage of such pattern, the usage calculation could be measured by the bytes read and bytes written in the hdfs client trace log.", "sentence_label": "expected"}, {"sentence": "There is currently no association of DFSClient ID or CLI ID to the user or session token emitted by Hadoop hdfs client trace log files.", "sentence_label": "current"}, {"sentence": "This JIRA is to record DFS Client ID/CLI ID with user name/session token in appropriate place for more precious measuring of HDFS usage.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Audit logging should log denied accesses", "sentence_label": "title"}, {"sentence": "FSNamesystem.java logs an audit log entry when a user successfully accesses the filesystem: <CODE>", "sentence_label": "current"}, {"sentence": "but there is no similar log when a user attempts to access the filesystem and is denied due to permissions.", "sentence_label": "current"}, {"sentence": "Competing systems do provide such logging of denied access attempts;", "sentence_label": "explanation"}, {"sentence": "we should too.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add CLI tool to initialize the shared-edits dir", "sentence_label": "title"}, {"sentence": "Currently in order to make a non-HA NN HA, you need to initialize the shared edits dir.", "sentence_label": "current"}, {"sentence": "This can be done manually by cping directories around.", "sentence_label": "current"}, {"sentence": "It would be preferable to add a \"namenode -initializeSharedEdits\" command to achieve this same effect.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Revive number of files listed metrics", "sentence_label": "title"}, {"sentence": "When namenode becomes unresponsive by HADOOP-4693 (large filelist calls), metrics has been helpful in finding out the cause.", "sentence_label": "benefit"}, {"sentence": "When gc time hikes, \"FileListed\" metrics also hiked.", "sentence_label": "explanation"}, {"sentence": "In 0.18, after we fixed \"FileListed\" metrics so that it shows number of operations instead of number of files listed (HADOOP-3683), I stopped seeing this relationship graph.", "sentence_label": "explanation"}, {"sentence": "Can we bring back \"NumbverOfFilesListed\" metrics?", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Fsck security", "sentence_label": "title"}, {"sentence": "This jira tracks implementation of security for Fsck.", "sentence_label": "explanation"}, {"sentence": "Fsck should make an authenticated connection to the namenode.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS needs to support new rename introduced for FileContext", "sentence_label": "title"}, {"sentence": "New rename functionality with different semantics to overwrite the existing destination was introduced for use in FileContext.", "sentence_label": "explanation"}, {"sentence": "Currently the default implementation in FileSystem is not atomic.", "sentence_label": "current"}, {"sentence": "This change implements atomic rename operation for use by FileContext.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a public API for setting quotas", "sentence_label": "title"}, {"sentence": "Currently one can set the quota of a file or directory from the command line,", "sentence_label": "current"}, {"sentence": "but if a user wants to set it programmatically, they need to use DistributedFileSystem, which is annotated <CODE>.", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "The number of failed or low-resource volumes the NN can tolerate should be configurable", "sentence_label": "title"}, {"sentence": "Currently the number of failed or low-resource volumes the NN can tolerate is effectively hard-coded at 1.", "sentence_label": "current"}, {"sentence": "It would be nice if this were configurable.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add an administrative command to download a copy of the fsimage from the NN", "sentence_label": "title"}, {"sentence": "It would be nice to be able to download a copy of the fsimage from the NN", "sentence_label": "expected"}, {"sentence": "for example, for backup purposes.", "sentence_label": "example"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Offline Namenode fsImage verification", "sentence_label": "title"}, {"sentence": "Currently, there is no way to verify that a copy of the fsImage is not corrupt.", "sentence_label": "current"}, {"sentence": "I propose that we should have an offline tool that loads the fsImage into memory to see if it is usable.", "sentence_label": "expected"}, {"sentence": "This will allow us to automate backup testing to some extent.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add Hdfs Impl for the new file system interfac", "sentence_label": "title"}, {"sentence": "HADOOP-6223 adds a new file system interface (potentially called AbstractFileSystem).", "sentence_label": "explanation"}, {"sentence": "Add an implementation for it for the HDFS file system.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a bulk FIleSystem.getFileBlockLocations", "sentence_label": "title"}, {"sentence": "Currently map-reduce applications (specifically file-based input-formats) use <CODE> to compute splits.", "sentence_label": "current"}, {"sentence": "However they are forced to call it once per file.", "sentence_label": "current"}, {"sentence": "The downsides are multiple:<LIST>", "sentence_label": "benefit"}, {"sentence": "It would be nice to have a <CODE> which can take in a directory, and return the block-locations for all files in that directory.", "sentence_label": "expected"}, {"sentence": "We could eliminate both the per-file RPC and also the 'search' by a 'scan'.", "sentence_label": "expected"}, {"sentence": "When I tested this for terasort, a moderate job with 8000 input files the runtime halved from the current 8s to 4s.", "sentence_label": "benefit"}, {"sentence": "Clearly this is much more important for latency-sensitive applications.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implementation of ReplicaPlacementPolicyNodeGroup to support 4-layer network topology", "sentence_label": "title"}, {"sentence": "A subclass of ReplicaPlacementPolicyDefault, ReplicaPlacementPolicyNodeGroup was developed along with unit tests to support the four-layer hierarchical topology.", "sentence_label": "explanation"}, {"sentence": "The replica placement strategy used in ReplicaPlacementPolicyNodeGroup virtualization is almost the same as the original one.", "sentence_label": "explanation"}, {"sentence": "The differences are:<LIST>", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "getCorruptFiles() should give some hint that the list is not complet", "sentence_label": "title"}, {"sentence": "If the list of corruptfiles returned by the namenode doesn't say anything if the number of corrupted files is larger than the call output limit (which means the list is not complete).", "sentence_label": "current"}, {"sentence": "There should be a way to hint incompleteness to clients.", "sentence_label": "expected"}, {"sentence": "A simple hack would be to add an extra entry to the array returned with the value null.", "sentence_label": "expected"}, {"sentence": "Clients could interpret this as a sign that there are other corrupt files in the system.", "sentence_label": "explanation"}, {"sentence": "We should also do some rephrasing of the fsck output to make it more confident when the list is not complete and less confident when the list is known to be incomplete.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "When the client calls hsync, allows the client to update the file length in the NameNode", "sentence_label": "title"}, {"sentence": "As per discussion in HDFS-3960<LINK> and HDFS-2802<LINK>, when clients that need strong consistency update the file length at the NameNode, a special sync/flush is required for getting the length of the being written files when snapshots are taken for these files.", "sentence_label": "expected"}, {"sentence": "This jira implements this sync-with-updating-length by <LIST> to indicate the length information.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add concat to HttpFS and WebHDFS REST API docs", "sentence_label": "title"}, {"sentence": "HDFS-3598<LINK> adds the concat feature to WebHDFS.", "sentence_label": "explanation"}, {"sentence": "The REST API should be updated accordingly.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Namenode should have a favored nodes hint to enable clients to have control over block placement.", "sentence_label": "title"}, {"sentence": "Sometimes Clients like HBase are required to dynamically compute the datanodes it wishes to place the blocks for a file for higher level of locality.", "sentence_label": "explanation"}, {"sentence": "For this purpose there is a need of a way to give the Namenode a hint in terms of a favoredNodes parameter about the locations where the client wants to put each block.", "sentence_label": "expected"}, {"sentence": "The proposed solution is a favored nodes parameter in the addBlock() method and in the create() file method to enable the clients to give the hints to the NameNode about the locations of each replica of the block.", "sentence_label": "explanation"}, {"sentence": "Note that this would be just a hint and finally the NameNode would look at disk usage, datanode load etc", "sentence_label": "explanation"}, {"sentence": "and decide whether it can respect the hints or not.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "HDFS truncate", "sentence_label": "title"}, {"sentence": "Systems with transaction support often need to undo changes made to the underlying storage when a transaction is aborted.", "sentence_label": "expected"}, {"sentence": "Currently HDFS does not support truncate (a standard Posix operation) which is a reverse operation of append, which makes upper layer applications use ugly workarounds (such as keeping track of the discarded byte range per file in a separate metadata store, and periodically running a vacuum process to rewrite compacted files) to overcome this limitation of HDFS", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "WebHDFS: a complete FileSystem implementation for accessing HDFS over HTTP", "sentence_label": "title"}, {"sentence": "We current have hftp for accessing HDFS over HTTP.", "sentence_label": "explanation"}, {"sentence": "However, hftp is a read-only FileSystem and does not provide \"write\" accesses.", "sentence_label": "current"}, {"sentence": "In HDFS-2284, we propose to have WebHDFS for providing a complete FileSystem implementation for accessing HDFS over HTTP.", "sentence_label": "expected"}, {"sentence": "The is the umbrella JIRA for the tasks.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support for snapshots", "sentence_label": "title"}, {"sentence": "Support HDFS snapshots.", "sentence_label": "expected"}, {"sentence": "It should support creating snapshots without shutting down the file system.", "sentence_label": "expected"}, {"sentence": "Snapshot creation should be lightweight and a typical system should be able to support a few thousands concurrent snapshots.", "sentence_label": "explanation"}, {"sentence": "There should be a way to surface (for example, mount) a few of these snapshots simultaneously.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Datanode command for evicting writers", "sentence_label": "title"}, {"sentence": "It will be useful if there is a command to evict writers from a datanode.", "sentence_label": "expected"}, {"sentence": "When a set of datanodes are being decommissioned, they can get blocked by slow writers at the end.", "sentence_label": "current"}, {"sentence": "It was rare in the old days since mapred jobs didn't last too long, but with many different types of apps running on today's YARN cluster, we are often see very long tail in datanode decommissioning.", "sentence_label": "explanation"}, {"sentence": "I propose a new dfsadmin command, evictWriters, to be added.", "sentence_label": "expected"}, {"sentence": "I initially thought about having namenode automatically telling datanodes on decommissioning, but realized that having a command is more flexible.", "sentence_label": "explanation"}, {"sentence": "for example, users can choose not to do this at all, choose when to evict writers, or whether to try multiple times for whatever reasons.", "sentence_label": "example"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create symbolic links in HDFS", "sentence_label": "title"}, {"sentence": "HDFS should support symbolic links.", "sentence_label": "expected"}, {"sentence": "A symbolic link is a special type of file that contains a reference to another file or directory in the form of an absolute or relative path and that affects pathname resolution.", "sentence_label": "explanation"}, {"sentence": "Programs which read or write to files named by a symbolic link will behave as if operating directly on the target file.", "sentence_label": "explanation"}, {"sentence": "However, archiving utilities can handle symbolic links specially and manipulate them directly.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Changes to balancer bandwidth should not require datanode restart.", "sentence_label": "title"}, {"sentence": "Currently in order to change the value of the balancer bandwidth (<CODE>), the datanode daemon must be restarted.", "sentence_label": "current"}, {"sentence": "The optimal value of the bandwidthPerSec parameter is not always (almost never) known at the time of cluster startup, but only once a new node is placed in the cluster and balancing is begun.", "sentence_label": "explanation"}, {"sentence": "If the balancing is taking too long (bandwidthPerSec is too low) or the balancing is taking up too much bandwidth (bandwidthPerSec is too high), the cluster must go into a \"maintenance window\" where it is unusable while all of the datanodes are bounced.", "sentence_label": "drawback"}, {"sentence": "In large clusters of thousands of nodes, this can be a real maintenance problem because these \"mainenance windows\" can take a long time and there may have to be several of them while the bandwidthPerSec is experimented with and tuned.", "sentence_label": "drawback"}, {"sentence": "A possible solution to this problem would be to add a -bandwidth parameter to the balancer tool.", "sentence_label": "expected"}, {"sentence": "If bandwidth is supplied, pass the value to the datanodes via the OP_REPLACE_BLOCK and OP_COPY_BLOCK DataTransferProtocol requests.", "sentence_label": "explanation"}, {"sentence": "This would make it necessary, however, to change the DataTransferProtocol version.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide option to use the NFS Gateway without having to use the Hadoop portmapper", "sentence_label": "title"}, {"sentence": "In order to use the NFS Gateway on operating systems with the rpcbind privileged registration bug, we currently require users to shut down and discontinue use of the system-provided portmap daemon, and instead use the portmap daemon provided by Hadoop.", "sentence_label": "current"}, {"sentence": "Alternately, we can work around this bug if we tweak the NFS Gateway to perform its port registration from a privileged port, and still let users use the system portmap daemon.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add ability for safemode to wait for a minimum number of live datanodes", "sentence_label": "title"}, {"sentence": "When starting up a fresh cluster programatically, users often want to wait until DFS is \"writable\" before continuing in a script.", "sentence_label": "explanation"}, {"sentence": "\"dfsadmin -safemode wait\" doesn't quite work for this on a completely fresh cluster, since when there are 0 blocks on the system, 100% of them are accounted for before any DNs have reported.", "sentence_label": "current"}, {"sentence": "This JIRA is to add a command which waits until a certain number of DNs have reported as alive to the NN.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support for options within the Datanode Transfer protocol", "sentence_label": "title"}, {"sentence": "This proposal is to extend the DataNode Transfer protocol to support \"options\", in the spirit of IP or TCP options.", "sentence_label": "expected"}, {"sentence": "This should make this protocol more extensible, allowing the client to include metadata along with commands.", "sentence_label": "expected"}, {"sentence": "This would support efforts to include end-to-end and causal tracing into Hadoop, and hopefully other efforts as well.", "sentence_label": "benefit"}, {"sentence": "Options should have a type, and be of variable length.", "sentence_label": "expected"}, {"sentence": "It should be possible to include multiple options along with each datanode command.", "sentence_label": "expected"}, {"sentence": "The option should apply to both the command and any data that is part of the command.", "sentence_label": "expected"}, {"sentence": "If the datanode does not understand a given option, it should ignore it.", "sentence_label": "expected"}, {"sentence": "Options should be sent end-to-end through intermediate datanodes, if necessary.", "sentence_label": "expected"}, {"sentence": "For example, if an OP_WRITE_BLOCK command is pipelined through several machines, the options should be sent along the pipeline.", "sentence_label": "example"}, {"sentence": "Nodes along the pipeline may modify the options.", "sentence_label": "explanation"}, {"sentence": "BTW, If HADOOP-4005 (concrete datanode protocol) is implemented, then it should solve this problem by simply letting the user add state to the concrete protocol class.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "A stress-test tool for HDFS.", "sentence_label": "title"}, {"sentence": "It would be good to have a tool for automatic stress testing HDFS, which would provide IO-intensive load on HDFS cluster.", "sentence_label": "expected"}, {"sentence": "The idea is to start the tool, let it run overnight, and then be able to analyze possible failures.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create target for 10 minute patch test build for hdfs", "sentence_label": "title"}, {"sentence": "It would be good to identify a subset of hdfs tests that provide strong test code coverage within 10 minutes, as is the goal of MAPREDUCE-670 and HADOOP-5628.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support for RW/RO snapshots in HDFS", "sentence_label": "title"}, {"sentence": "Snapshots are point in time images of parts of the filesystem or the entire filesystem.", "sentence_label": "explanation"}, {"sentence": "Snapshots can be a read-only or a read-write point in time copy of the filesystem.", "sentence_label": "explanation"}, {"sentence": "There are several use cases for snapshots in HDFS.", "sentence_label": "explanation"}, {"sentence": "I will post a detailed write-up soon with with more information.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Enable support for heterogeneous storages in HDFS - DN as a collection of storages", "sentence_label": "title"}, {"sentence": "HDFS currently supports configuration where storages are a list of directories.", "sentence_label": "current"}, {"sentence": "Typically each of these directories correspond to a volume with its own file system.", "sentence_label": "current"}, {"sentence": "All these directories are homogeneous and therefore identified as a single storage at the namenode.", "sentence_label": "current"}, {"sentence": "I propose, change to the current model where Datanode * is a * storage, to Datanode * is a collection * of strorages.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Erasure Coding Support inside HDFS", "sentence_label": "title"}, {"sentence": "Erasure Coding (EC) can greatly reduce the storage overhead without sacrifice of data reliability, comparing to the existing HDFS 3-replica approach.", "sentence_label": "benefit"}, {"sentence": "For example, if we use a 10+4 Reed Solomon coding, we can allow loss of 4 blocks, with storage overhead only being 40%.", "sentence_label": "example"}, {"sentence": "This makes EC a quite attractive alternative for big data storage, particularly for cold data.", "sentence_label": "benefit"}, {"sentence": "Facebook had a related open source project called HDFS-RAID.", "sentence_label": "explanation"}, {"sentence": "It used to be one of the contribute packages in HDFS but had been removed since Hadoop 2.0 for maintain reason.", "sentence_label": "explanation"}, {"sentence": "The drawbacks are: <LIST>.", "sentence_label": "drawback"}, {"sentence": "Due to these, it might not be a good idea to just bring HDFS-RAID back.", "sentence_label": "explanation"}, {"sentence": "We (Intel and Cloudera) are working on a design to build EC into HDFS that gets rid of any external dependencies, makes it self-contained and independently maintained.", "sentence_label": "expected"}, {"sentence": "This design lays the EC feature on the storage type support and considers compatible with existing HDFS features like caching, snapshot, encryption, high availability and etc.", "sentence_label": "explanation"}, {"sentence": "This design will also support different EC coding schemes, implementations and policies for different deployment scenarios.", "sentence_label": "explanation"}, {"sentence": "By utilizing advanced libraries (for example Intel ISA-L library), an implementation can greatly improve the performance of EC encoding/decoding and makes the EC solution even more attractive.", "sentence_label": "benefit"}, {"sentence": "We will post the design document soon.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implementation of ACLs in HDFS", "sentence_label": "title"}, {"sentence": "Currenly hdfs doesn't support Extended file ACL.", "sentence_label": "current"}, {"sentence": "In unix extended ACL can be achieved using getfacl and setfacl utilities.", "sentence_label": "explanation"}, {"sentence": "Is there anybody working on this feature ?", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Centralized cache management in HDFS", "sentence_label": "title"}, {"sentence": "HDFS currently has no support for managing or exposing in-memory caches at datanodes.", "sentence_label": "current"}, {"sentence": "This makes it harder for higher level application frameworks like Hive, Pig, and Impala to effectively use cluster memory, because they cannot explicitly cache important datasets or place their tasks for memory locality.", "sentence_label": "drawback"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support NFSv3 interface to HDFS", "sentence_label": "title"}, {"sentence": "Access HDFS is usually done through HDFS Client or webHDFS.", "sentence_label": "current"}, {"sentence": "Lack of seamless integration with client\u2019s file system makes it difficult for users and impossible for some applications to access HDFS.", "sentence_label": "drawback"}, {"sentence": "NFS interface support is one way for HDFS to have such easy integration.", "sentence_label": "explanation"}, {"sentence": "This JIRA is to track the NFS protocol support for accessing HDFS.", "sentence_label": "expected"}, {"sentence": "With HDFS client, webHDFS and the NFS interface, HDFS will be easier to access and be able support more applications and use cases.", "sentence_label": "benefit"}, {"sentence": "We will upload the design document and the initial implementation.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "getCorruptFiles() should give some hint that the list is not complete", "sentence_label": "title"}, {"sentence": "If the list of corruptfiles returned by the namenode doesn't say anything if the number of corrupted files is larger than the call output limit (which means the list is not complete).", "sentence_label": "current"}, {"sentence": "There should be a way to hint incompleteness to clients.", "sentence_label": "expected"}, {"sentence": "A simple hack would be to add an extra entry to the array returned with the value null.", "sentence_label": "expected"}, {"sentence": "Clients could interpret this as a sign that there are other corrupt files in the system.", "sentence_label": "explanation"}, {"sentence": "We should also do some rephrasing of the fsck output to make it more confident when the list is not complete and less confident when the list is known to be incomplete.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Maintain aggregated peer performance metrics on NameNode", "sentence_label": "title"}, {"sentence": "The metrics collected in HDFS-10917 should be reported to and aggregated on NameNode as part of heart beat messages.", "sentence_label": "expected"}, {"sentence": "This will make is easy to expose it through JMX to users who are interested in them.", "sentence_label": "benefit"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add MXBean methods to query NN's transaction information and JournalNode's journal status", "sentence_label": "title"}, {"sentence": "Currently NameNode already provides RPC calls to get its last applied transaction ID and most recent checkpoint's transaction ID.", "sentence_label": "current"}, {"sentence": "It can be helpful to provide support to enable querying these information through JMX, so that administrators and applications like Ambari can easily decide if a forced checkpoint by calling saveNamespace is necessary.", "sentence_label": "expected"}, {"sentence": "Similarly we can add MxBean interface for JournalNodes to query the status of journals", "sentence_label": "expected"}, {"sentence": "for example, whether journals are formatted or not.", "sentence_label": "example"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "CLI-based driver for MiniDFSCluster", "sentence_label": "title"}, {"sentence": "Picking up a thread again from MAPREDUCE-987, I've found it very useful to have a CLI driver for running a single-process DFS cluster, particularly when developing features in HDFS clients.", "sentence_label": "expected"}, {"sentence": "For example, being able to spin up a local cluster easily was tremendously useful for correctness testing of HDFS-2834.", "sentence_label": "example"}, {"sentence": "I'd like to contribute a class based on the patch for MAPREDUCE-987 we've been using fairly extensively.", "sentence_label": "explanation"}, {"sentence": "Only for DFS, not MR since much has changed MR-side since the original patch.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Refactor INodeDirectory#getExistingPathINodes() to enable returning more than INode array", "sentence_label": "title"}, {"sentence": "Currently INodeDirectory#getExistingPathINodes() uses an INode array to return the INodes resolved from the given path.", "sentence_label": "current"}, {"sentence": "For snapshot we need the function to be able to return more information when resolving a path for a snapshot file/dir.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a PowerTopology class to aid replica placement and enhance availability of blocks", "sentence_label": "title"}, {"sentence": "Power outages are a common reason for a DataNode to become unavailable.", "sentence_label": "explanation"}, {"sentence": "Having a data structure to represent to the power topology of your data center can be used to implement a power-aware replica placement policy.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make the HDFS home directory location customizable.", "sentence_label": "title"}, {"sentence": "The path is currently hardcoded:<CODE>", "sentence_label": "current"}, {"sentence": "It would be nice to have that as a customizable value.", "sentence_label": "expected"}, {"sentence": "Thank you", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a default method body for the INodeAttributeProvider#checkPermissionWithContext API", "sentence_label": "title"}, {"sentence": "The new API INodeAttributeProvider#checkPermissionWithContext() needs a default method body.", "sentence_label": "expected"}, {"sentence": "Otherwise old implementations fail to compile.", "sentence_label": "drawback"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Move ClientProtocol HA proxies into hadoop-hdfs-client", "sentence_label": "title"}, {"sentence": "Follow-up for HDFS-11431.", "sentence_label": "explanation"}, {"sentence": "We should move this missing class over rather than pulling in the whole hadoop-hdfs dependency.", "sentence_label": "expected"}], "project_name": "hdfs.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Replication violates block placement policy.", "sentence_label": "title"}, {"sentence": "Recently we are noticing many cases in which all the replica of the block are residing on the same rack.", "sentence_label": "current"}, {"sentence": "During the block creation, the block placement policy was honored.", "sentence_label": "current"}, {"sentence": "But after node failure event in some specific manner, the block ends up in such state.", "sentence_label": "current"}, {"sentence": "On investigating more I found out that BlockManager#blockHasEnoughRacks is dependent on the config (net.topology.script.file.name)", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "We specify DNSToSwitchMapping implementation (our own custom implementation) via net.topology.node.switch.mapping.impl and no longer use net.topology.script.file.name config.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Setting permissions on name directory fails on non posix compliant filesystems", "sentence_label": "title"}, {"sentence": "Hi, HDFS NameNode and JournalNode are not starting in Windows machine.", "sentence_label": "current"}, {"sentence": "Found below related exception in logs.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "current"}, {"sentence": "Code changes related to this issue: [URL]", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Erasure coding system policy state is not correctly saved and loaded during real cluster restart", "sentence_label": "title"}, {"sentence": "Inspired by HDFS-12682, I found the system erasure coding policy state will not be correctly saved and loaded in a real cluster.", "sentence_label": "current"}, {"sentence": "Through there are such kind of unit tests and all are passed with MiniCluster.", "sentence_label": "explanation"}, {"sentence": "It's because the MiniCluster keeps the same static system erasure coding policy object after the NN restart operation.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Some blocks can be permanently lost if nodes are decommissioned while dead", "sentence_label": "title"}, {"sentence": "When all the nodes containing a replica of a block are decommissioned while they are dead, they get decommissioned right away even if there are missing blocks.", "sentence_label": "current"}, {"sentence": "This behavior was introduced by HDFS-7374.", "sentence_label": "explanation"}, {"sentence": "The problem starts when those decommissioned nodes are brought back online.", "sentence_label": "explanation"}, {"sentence": "The namenode no longer shows missing blocks, which creates a false sense of cluster health.", "sentence_label": "explanation"}, {"sentence": "When the decommissioned nodes are removed and reformatted, the block data is permanently lost.", "sentence_label": "explanation"}, {"sentence": "The namenode will report missing blocks after the heartbeat recheck interval (e.g. 10 minutes) from the moment the last node is taken down.", "sentence_label": "explanation"}, {"sentence": "There are multiple issues in the code.", "sentence_label": "explanation"}, {"sentence": "As some cause different behaviors in testing vs. production, it took a while to reproduce it in a unit test.", "sentence_label": "explanation"}, {"sentence": "I will present analysis and proposal soon.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Failed to load image from FSImageFile when downgrade from 3.x to 2.x", "sentence_label": "title"}, {"sentence": "After fixing HDFS-13596, try to downgrade from 3.x to 2.x.", "sentence_label": "explanation"}, {"sentence": "But namenode can't start because exception occurs.", "sentence_label": "current"}, {"sentence": "The message follows [TRACE]", "sentence_label": "current"}, {"sentence": "This issue occurs because 3.x namenode saves image with EC fields during upgrade", "sentence_label": "explanation"}, {"sentence": "Try to fix it", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "balancer doesn't run as a daemon", "sentence_label": "title"}, {"sentence": "From HDFS-7184, minor issues with balancer", "sentence_label": "current"}, {"sentence": "daemon isn't set to true in hdfs to enable daemonization", "sentence_label": "current"}, {"sentence": "start-balancer script has usage instead of hadoop_usage", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Compilation fails in branch-3.0", "sentence_label": "title"}, {"sentence": "HDFS branch-3.0 compilation fails.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Rebalancer sleeps too long between iterations", "sentence_label": "title"}, {"sentence": "Whilst reading the code to try and determine why I'm seeing bad performance I think I've spotted an inadvertent move of a sleep() to inside a for loop.", "sentence_label": "current"}, {"sentence": "This means that instead of sleeping once per iteration the balance is sleeping once per namenode per iteration.", "sentence_label": "current"}, {"sentence": " If I've done my maths correctly the sleep time default is 18 seconds so this is a nice little speedup for HA clusters.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Creating a file with non-default EC policy in a EC zone is not correctly serialized in the editlog", "sentence_label": "title"}, {"sentence": "When create a replicated file in an existing EC zone, the edit logs does not differentiate it from an EC file.", "sentence_label": "current"}, {"sentence": "When FSEditLogLoader to replay edits, this file is treated as EC file, as a results, it crashes the NN because the blocks of this file are replicated, which does not match with INode.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unset EC policy logs empty payload in edit log", "sentence_label": "title"}, {"sentence": "The edit log generated by hdfs ec -unsetPolicy generates an OP_REMOVE_XATTR entry in edit logs, but the payload like xattr namespace / name / vaue are missing:[CODE]", "sentence_label": "current"}, {"sentence": "As a result, when Active NN restarts, or the Standby NN replay edits, this op has not effect.", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Many EC tests fail in trunk", "sentence_label": "title"}, {"sentence": "Many EC tests are failing in pre-commit runs. e.g. [URL] [URL] [URL]", "sentence_label": "current"}, {"sentence": "This is creating a lot of noise in Jenkins runs outputs.", "sentence_label": "drawback"}, {"sentence": "We should either fix or disable these tests.", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Do not require a storage ID or target storage IDs when writing a block", "sentence_label": "title"}, {"sentence": "Seems like HDFS-9807 broke backwards compatibility with Hadoop 2.x clients.", "sentence_label": "current"}, {"sentence": "When talking to a 3.0.0-alpha4 DN with security on: [TRACE]", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Do not require a storage ID or target storage IDs when writing a block", "sentence_label": "title"}, {"sentence": "Seems like HDFS-9807 broke backwards compatibility with Hadoop 2.x clients.", "sentence_label": "current"}, {"sentence": "When talking to a 3.0.0-alpha4 DN with security on: [TRACE]", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Intermittent deadlock in NameNode when failover happens.", "sentence_label": "title"}, {"sentence": "It is happening due to metrics getting updated at the same time when failover is happening.", "sentence_label": "explanation"}, {"sentence": "Please find attached jstack at that point of time.", "sentence_label": "useless"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "DN always uses HTTP/localhost@REALM principals in SPNEGO", "sentence_label": "title"}, {"sentence": "In HDFS-7279 the Netty server in DN proxies all servlet requests to the local Jetty instance.", "sentence_label": "current"}, {"sentence": "The Jetty server is configured incorrectly so that it always uses HTTP/locahost@REALM to authenticate spnego requests.", "sentence_label": "current"}, {"sentence": "As a result, servlets like JMX are no longer accessible in secure deployments.", "sentence_label": "drawback"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Reserved RBW space is not released if creation of RBW File fails", "sentence_label": "title"}, {"sentence": "The DataNode reserves disk space for a full block when creating an RBW block and will release the space when the block is finalized (introduced in HDFS-6898)", "sentence_label": "current"}, {"sentence": "But if the RBW file creation fails, the reserved space is not released back.", "sentence_label": "current"}, {"sentence": "In a scenario, when the data node disk is full it causes no space left IOException.", "sentence_label": "current"}, {"sentence": "Eventually even if the disk got cleaned, the reserved space is not release until the Data Node is restarted", "sentence_label": "current"}, {"sentence": "Stacktrace for block creation failure is: [TRACE]", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Datanode in tests cannot start in Windows after HDFS-10638", "sentence_label": "title"}, {"sentence": "After HDFS-10638", "sentence_label": "explanation"}, {"sentence": "Starting datanode's in MiniDFSCluster in windows throws below exception [TRACE]", "sentence_label": "current"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Download File from UI broken after pagination", "sentence_label": "title"}, {"sentence": "We have seen a standby namenode crashing due to edit log corruption.", "sentence_label": "current"}, {"sentence": "It was complaining that OP_CLOSE cannot be applied because the file is not under-construction.", "sentence_label": "explanation"}, {"sentence": "When a client was trying to append to the file, the remaining space quota was very small.", "sentence_label": "explanation"}, {"sentence": "This caused a failure in prepareFileForWrite(), but after the inode was already converted for writing and a lease added.", "sentence_label": "current"}, {"sentence": "Since these were not undone when the quota violation was detected, the file was left in under-construction with an active lease without edit logging OP_ADD.", "sentence_label": "explanation"}, {"sentence": "A subsequent append() eventually caused a lease recovery after the soft limit period.", "sentence_label": "current"}, {"sentence": "This resulted in commitBlockSynchronization(), which closed the file with OP_CLOSE being logged.", "sentence_label": "current"}, {"sentence": "Since there was no corresponding OP_ADD, edit replaying could not apply this.", "sentence_label": "explanation"}], "project_name": "hdfs.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Hiberante new feature  - 231", "sentence_label": "title"}, {"sentence": "Add integration test with Spring", "sentence_label": "expected"}, {"sentence": "Users expect to be able to use Spring with OGM but we don't have an integration test at the moment.", "sentence_label": "expected"}, {"sentence": "This is also helpful as demo or example.", "sentence_label": "benefit"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add new operations to native CLI in MongoDB", "sentence_label": "title"}, {"sentence": "Since 3.2 there are some new operations that the user can execute:", "sentence_label": "explanation"}, {"sentence": "It should easy to add them to the currently supported operations", "sentence_label": "expected"}, {"sentence": "but if it's too complex, we can split this JIRA in subtasks.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Associations should be mappable to a different Relationship-Type name", "sentence_label": "title"}, {"sentence": "For Entities and their properties it is possible to specify a name when the class or property name differs from the label or propery name in the database.", "sentence_label": "explanation"}, {"sentence": "for example <CODE>", "sentence_label": "example"}, {"sentence": "Unfortunately there seems to be no equivalent for Associations.", "sentence_label": "current"}, {"sentence": "Either add this feature or enhance the documentation if this is already possible, please.", "sentence_label": "expected"}, {"sentence": "I would expect it to look something like this:<CODE>", "sentence_label": "example"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support Neo4j 3 remote datastore through the bolt protocol", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "thanks for supporting neo4j remote datastore and working on the integration of Neo4j-3.", "sentence_label": "useless"}, {"sentence": "The current remote protocol consumes the datastore's REST interface.", "sentence_label": "current"}, {"sentence": "Are there any plans supporting the remote protocol \"bolt\" introduced in Neo4j-3 as an alternative transfer mode?", "sentence_label": "expected"}, {"sentence": "The java implementation of \"bolt\" is available at <LINK>.", "sentence_label": "explanation"}, {"sentence": "The might be some performance improvements see <LINK>", "sentence_label": "explanation"}, {"sentence": "This is just for the javascript driver version but it might apply for the java implementation as well.", "sentence_label": "explanation"}, {"sentence": "Thanks", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make ORM and Search version referenced in documentation a property", "sentence_label": "title"}, {"sentence": "Currently there is \"5.0\", \"5.5\" or even \"/stable/\" specified several times in the AsciiDoc source.", "sentence_label": "current"}, {"sentence": "It should be build properties.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add more verbosity to exception thrown by OgmEntityEntryState#getStateFor()", "sentence_label": "title"}, {"sentence": "In OgmEntityEntryState method getStateFor, there's an attempt to retrieve the object from the persistence context.", "sentence_label": "current"}, {"sentence": "If the object is not found in the persistence context, then an exception is throw stating \" 'entityEntry' must not be null \".", "sentence_label": "current"}, {"sentence": "This is not very descriptive and could easily be improved by passing something like \"entityEntry: \" + object as the \"name\" parameter to <CODE>.", "sentence_label": "expected"}, {"sentence": "In this way the object's toString method will be called and appended to the exception output, allowing for easy identification of the object which is not in the persistence context.", "sentence_label": "benefit"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support Neo4j 3.0", "sentence_label": "title"}, {"sentence": "See <LINK>", "sentence_label": "explanation"}, {"sentence": "Need to investigate what's new and how OGM is affected.", "sentence_label": "explanation"}, {"sentence": "Can we support 2.x and 3.0 with a single dialect, or should there two separate ones?", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support nested embedded collections for MongoDB", "sentence_label": "title"}, {"sentence": "Ideally, we should support this for document stores in general.", "sentence_label": "expected"}, {"sentence": "Sometimes users need to map this kind of document:<CODE>", "sentence_label": "explanation"}, {"sentence": "Basically, it's the mapping of collection of embeddables with another collection of embeddables.", "sentence_label": "explanation"}, {"sentence": "The problem is that this mapping is not supported by JPA or Hibernate, we need to find an alternative.", "sentence_label": "current"}, {"sentence": "Maybe a user could use entities instead of embeddables with some additional OGM specific annotation or properties.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Map IDENTITY id generation strategy to inline uuid() call in Cassandra", "sentence_label": "title"}, {"sentence": "Similar to the mapping of ObjectId in the MongoDB backend", "sentence_label": "example"}, {"sentence": "it should be possible to map the IDENTITY strategy to uuid() calls within the INSERT statement.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "It's not possible to set a SocketFactory for the MongoClient", "sentence_label": "title"}, {"sentence": "We should provide the user a way to set properties that are not primitives to the MongoDBClient.", "sentence_label": "expected"}, {"sentence": "An example in the documentation would be nice.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implement PostLoad annotation support", "sentence_label": "title"}, {"sentence": "Implement support in OGM for the PostLoad annotation which is currently supported in ORM.", "sentence_label": "expected"}, {"sentence": "The annotation allows for entity methods to be automatically called following an instance's initialization from the underlying datasource and thus provides the ability to carry out post-processing on the object.", "sentence_label": "explanation"}, {"sentence": "Some discussion on this feature:<LINK>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Map time ordered series of events in Neo4j", "sentence_label": "title"}, {"sentence": "The idea is to map a series of events as nodes connected by NEXT and/or PREVIOUS relationships.", "sentence_label": "expected"}, {"sentence": "This allows for very rapid traversal of events in time.", "sentence_label": "benefit"}, {"sentence": "More details in \"Graph Database 2nd Edition\" (Chapter 4, Time)", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add versioninig of Nodes and Relationships", "sentence_label": "title"}, {"sentence": "Graph can be versioned adding a timestamp to Node and Relationships, making it possible to retrieve the state of a graph in a particular point in time.", "sentence_label": "expected"}, {"sentence": "Can this work with enverse?", "sentence_label": "explanation"}, {"sentence": "The drawback of this approach is that it complicates even the simplest query", "sentence_label": "drawback"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Map Timeline trees for Neo4j", "sentence_label": "title"}, {"sentence": "One node for year, month, day and then the actual event node with a specific relationship.", "sentence_label": "expected"}, {"sentence": "That creates a tree of timeline where the leaves are the events.", "sentence_label": "expected"}, {"sentence": "It makes it easy to find events for a given period.", "sentence_label": "benefit"}, {"sentence": "More details in \"Graph Databases 2nd Edition\" (Chapter 4, Time)", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Errors during JavaDoc generation when running full build", "sentence_label": "title"}, {"sentence": "Apparently only on OS X (JDK 1.8.51) there are some errors reported, but the build itself succeeds and the JavaDoc is generated:<CODE>", "sentence_label": "current"}, {"sentence": "Also it seems the JavaDoc are generated twice (may be wrong on that, though).", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Store simple id in case of non-composite ids on associated side", "sentence_label": "title"}, {"sentence": "Similar to what we do for other dialects, we should save the simple id values for associations whose target type uses a non-composite key.", "sentence_label": "expected"}, {"sentence": "Only where a composite key type is referenced, a JSON structure should be used.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Enable alternative map representation also for single non-String key columns", "sentence_label": "title"}, {"sentence": "Follow-up to OGM-555: For maps with a single key of another type than String we still could do the nicer representation when converting the key column value into a String.", "sentence_label": "expected"}, {"sentence": "That'd require a conversion through the grid type.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "OrientDB Integration", "sentence_label": "title"}, {"sentence": "Recently I've googled, digged around for good open source graph database.", "sentence_label": "current"}, {"sentence": "read some forum, stackoverflow.", "sentence_label": "explanation"}, {"sentence": "Then I've found OrientDB.", "sentence_label": "explanation"}, {"sentence": "Some people recommending it.", "sentence_label": "explanation"}, {"sentence": "It looks good.", "sentence_label": "benefit"}, {"sentence": "I think If ogm-orientdb module appear, I'll use it.", "sentence_label": "expected"}, {"sentence": "Some links:<LINK>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support projection of embedded associations with LEFT JOIN in Neo4j", "sentence_label": "title"}, {"sentence": "At the moment we only support INNER JOIN but for Neo4j it is possible to execute left join as well.", "sentence_label": "current"}, {"sentence": "The renderer already keep track of left join or inner join via <CODE>", "sentence_label": "current"}, {"sentence": "but we need a way to figure out if we are dealing with an INNER or LEFT join.", "sentence_label": "expected"}, {"sentence": "Check <CODE> for more details.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Investigate alternative association mappings for Cassandra", "sentence_label": "title"}, {"sentence": "Instead of mapping associations via dedicated association tables, we may leverage the list/set/map data types Cassandra provides for storing the ids of associated elements.", "sentence_label": "expected"}, {"sentence": "That be beneficial wrt to consistency (an entity and the associated ids can be written in one round-trip to the datastore).", "sentence_label": "benefit"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support queries on referenced entity if stored on current side of association", "sentence_label": "title"}, {"sentence": "It should be possible to support queries such as <CODE>", "sentence_label": "expected"}, {"sentence": "Also without join capabilities if the associated id is stored on \"this\" side of the association.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Multi-tenancy support for Hibernate OGM", "sentence_label": "title"}, {"sentence": "Hibernate Search now supporting a proper integration with the Hibernate ORM tenant-id system", "sentence_label": "explanation"}, {"sentence": "Hibernate OGM has to at least comply with the SPI of Hibernate Search.", "sentence_label": "expected"}, {"sentence": "It's possible that fully supporting multi-tenancy in OGM isn't far out of reach at this point, but would need at least some tests and probably some design brainstorming.", "sentence_label": "explanation"}, {"sentence": "Queries might already be generating the correct results, although I'd need to double check that the execution of queries isn't bypassing the filters enforced by Search.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Remove CassandraDatastoreProvider#metaDataCache", "sentence_label": "title"}, {"sentence": "I think we can get rid of the CassandraDatastoreProvider#metaDataCache field.", "sentence_label": "expected"}, {"sentence": "It only is used for testing (get number of entities), and there we can get the table names by iterating over the entity persisters accessible through the session factory.", "sentence_label": "explanation"}, {"sentence": "If that data actually is needed, it would have to be a thread-safe map as DatastoreProvider is accessed concurrently.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Explore mapping Calendar as Strings in Cassandra", "sentence_label": "title"}, {"sentence": "As of<ISSUE-LINK> , 'Calendar' properties are mapped as a timestamp, loosing any time zone information.", "sentence_label": "current"}, {"sentence": "For example, upon read-back we don't know the TZ to convert to.", "sentence_label": "example"}, {"sentence": "Instead we may provide an option to persist such properties as formatted Strings.", "sentence_label": "expected"}, {"sentence": "If we decide to wait for a future native Cassandra datatype with TZ support, we should log a warning or add a note to the docs about the loss of information in the current approach.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Use MongoDB driver codec feature to avoid unnecessary object creation", "sentence_label": "title"}, {"sentence": "I have not investigated but if it could avoid the extra object creations we are seeing during the JSON / BSON parsing, that would be a nice performance boost for Hibernate OGM.", "sentence_label": "benefit"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for joined inheritance (natural mapping for EAV stores)", "sentence_label": "title"}, {"sentence": "As an OGM implementor, I would like to be able to map individual classes via joined inheritance.", "sentence_label": "expected"}, {"sentence": "Acknowledging that most NoSQL datastores do not support joins, this is a very useful strategy for at least Datomic and presumably any EAV datastore.", "sentence_label": "benefit"}, {"sentence": "Given that entities in EAV stores are represented as: <CODE>", "sentence_label": "explanation"}, {"sentence": "a natural mapping between JPA entities and EAV entities would be as follows:<CODE>", "sentence_label": "explanation"}, {"sentence": "Would map to<LIST> as attributes in the EAV store and eliminate unnecessary duplication of attributes.", "sentence_label": "explanation"}, {"sentence": "This should be relatively easy to implement, requiring a new EntityPersister, EntityDiscriminator, and the registration of the Persister with the OgmPersisterClassResolver", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Expose native type metadata in GridType", "sentence_label": "title"}, {"sentence": "Nowhere do we expose the native type expected out of a GridType.", "sentence_label": "explanation"}, {"sentence": "This is needed for strongly typed schemas like Cassandra to generate the right type.", "sentence_label": "explanation"}, {"sentence": "This kind of info is present via Type.sqlTypes() in the ORM side.", "sentence_label": "explanation"}, {"sentence": "We need to offer something similar.", "sentence_label": "expected"}, {"sentence": "Proposal:<LIST>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make authentication compatible with MongoDB 3.0", "sentence_label": "title"}, {"sentence": "MongoDB 3 brings a new authentication support SCRAM-SHA-1 and deprecated MONGODB-CR.", "sentence_label": "explanation"}, {"sentence": "The support came with Java's driver 2.13 but requires some migrations", "sentence_label": "explanation"}, {"sentence": "<LINK>", "sentence_label": "explanation"}, {"sentence": "That should do the trick.", "sentence_label": "expected"}, {"sentence": "The workaround according to Dean is to do <CODE>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Investigate usage of MongoDB's GridFS for storing large binary data", "sentence_label": "title"}, {"sentence": "With GridFS MongoDB provides a way for storing arbitrary binary files.", "sentence_label": "explanation"}, {"sentence": "We might use it to store \"overflows\" of large entities,", "sentence_label": "expected"}, {"sentence": "for example it'd likely be a good fit for byte arrays:<CODE>", "sentence_label": "example"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Introduce RETRY error handling strategy", "sentence_label": "title"}, {"sentence": "Currently error handlers can only decide to abort or continue the current flush cycle in case of a failure.", "sentence_label": "current"}, {"sentence": "Another means of dealing with failures is to retry the failed operation.", "sentence_label": "expected"}, {"sentence": "One could make the retry strategy to use configurable:<LIST>", "sentence_label": "explanation"}, {"sentence": "<CODE> would return RETRY, letting the configured retry strategy take over.", "sentence_label": "explanation"}, {"sentence": "As per the use cases from OGM-465:<LIST>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow grid dialects to map custom exceptions into a set of standardized exception types", "sentence_label": "title"}, {"sentence": "With the error handling API established with <ISSUE-LINK>,  users can decide whether to continue or abort the current flush cycle upon a failed operation based on the type of the occurred exception.", "sentence_label": "expected"}, {"sentence": "In order to allow handlers being implemented in a more datastore-agnostic way, there should be means for translating dialect-specific exceptions into more generic OGM-defined exceptions.", "sentence_label": "expected"}, {"sentence": "for example, a MongoTimeoutException or a HTTP connection timeout exception in the case of CouchDB would be translated into a NoSqlTimeoutException.", "sentence_label": "example"}, {"sentence": "The error handler would receive that translated exception (with the original one as a cause) so it can do its decision in a more portable fashion.", "sentence_label": "benefit"}, {"sentence": "Grid dialects would need the ability to contribute their implementation of an exception translator contract which would be invoked prior to passing on any exception raised by the dialect implementation.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Offer option to decide how aggressively removing a nested element", "sentence_label": "title"}, {"sentence": "Today after   <LINK>, a nested element with no property left is fully nullified.", "sentence_label": "current"}, {"sentence": "This is a natural approach in most case except if the document is shared between several application and if unknown properties (to OGM) are involved.", "sentence_label": "explanation"}, {"sentence": "We could envision offering a option overridable per entity and maybe even per property to up the standard and be extra conservative.", "sentence_label": "expected"}, {"sentence": "Depending on how MongoDB projection works (today filtered by selectable columns), we could:", "sentence_label": "explanation"}, {"sentence": "This is probably only useful for MongoDB (I think Neo4J already does that as we load the whole node already).", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[Neo4J] How to map the traversal API", "sentence_label": "title"}, {"sentence": "Neo4J has the notion of traversal API which is mapped to Cypher.", "sentence_label": "explanation"}, {"sentence": "That being said, you have callbacks to implement rules on the traversal.", "sentence_label": "explanation"}, {"sentence": "Explore how to map that in the JPA world OGM exposes.", "sentence_label": "expected"}, {"sentence": "Native query and some hints?", "sentence_label": "explanation"}, {"sentence": "I don't know enough of the feature yet to tell how precisely.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for Fongo to MongoDB backend", "sentence_label": "title"}, {"sentence": "Fongo is an in-memory fake implementation of MongoDB.", "sentence_label": "explanation"}, {"sentence": "It's an interesting alternative backend for testing an OGM application targetting MongoDB.", "sentence_label": "explanation"}, {"sentence": "The required changes should be minimal;", "sentence_label": "expected"}, {"sentence": "The MongoDBDialect should work as is (provided Fongo does implement everything we need), only a new provider class would be needed (or the existing one to be updated to support both backend types).", "sentence_label": "expected"}, {"sentence": "Forum reference: <link>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[Neo4J] Provide alternatives ways to map collections", "sentence_label": "title"}, {"sentence": "Currently, we map a list as nodes connected to the owner node.", "sentence_label": "current"}, {"sentence": "We should provide an option via annotations or a global configuration to map list as linked nodes.", "sentence_label": "expected"}, {"sentence": "Using Cypher, it would look something like:<CODE>", "sentence_label": "explanation"}, {"sentence": "Note that the two options don't have to be mutually exclusive, you could actually use both at the same time.", "sentence_label": "explanation"}, {"sentence": "Mapping list as linked nodes seems a more Graph like solution and it seems that Neo4j is quite good at querying this kind of structure.", "sentence_label": "benefit"}, {"sentence": "Something similar might be needed for maps.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make sure RESOURCE_LOCAL persistence unit do not require a transaction manager", "sentence_label": "title"}, {"sentence": "When working with a non-transactional stores and TX type \"RESOURCE_LOCAL\" one still needs to provide a JTA implementation atm.", "sentence_label": "current"}, {"sentence": "We should explore a custom \"OGM local\" Transaction implementation to be used in such cases.", "sentence_label": "explanation"}, {"sentence": "Mailing list: <LINK>", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "MongoDBTupleSnapshot#getColumnNames() does not work correctly for embeddable types", "sentence_label": "title"}, {"sentence": "Working on  <LINK>  , I noticed that <CODE> only is implemented correctly for \"simple\" columns, by just returning the keys of the underlying DBObject.", "sentence_label": "current"}, {"sentence": "For embedded objects we'd have to flatten the affected columns, though.", "sentence_label": "expected"}, {"sentence": "for example, we'd have to return column names such as \"address.city\", \"address.street\" etc (currently we'd only return \"address\").", "sentence_label": "example"}, {"sentence": "Also for the id we'd return \"_id\" (as that's what always is used in MongoDB)", "sentence_label": "expected"}, {"sentence": "but it likely should be the name from the \"physical\" JPA model for consistency reasons.", "sentence_label": "expected"}, {"sentence": "I'm wondering though whether getColumnNames() really is needed at all.", "sentence_label": "explanation"}, {"sentence": "It is used at some places, but maybe we can circumvent the need for it by always driving the accessal of tuple columns from the \"inbound\" side,", "sentence_label": "explanation"}, {"sentence": "for example, based on the model, selected query columns or similar.", "sentence_label": "example"}, {"sentence": "Note that I didn't find an actual problem caused by the current implementation, it seems to be a consistency issue atm.", "sentence_label": "explanation"}, {"sentence": "There may be an issue when using an embeddable type as optimitic locking version as we access the column names in this case (also see the TODO at <CODE>.", "sentence_label": "drawback"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support queries on embedded elements and collections", "sentence_label": "title"}, {"sentence": "We should support queries on embedded elements and collections.", "sentence_label": "expected"}, {"sentence": "The former may be done already, that needs to be checked (not sure about all backends).", "sentence_label": "expected"}, {"sentence": "The latter will require some more general ground works: <List>", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Explore the integration with Hibernate Spatial or spatial4j", "sentence_label": "title"}, {"sentence": "With Hibernate ORM coming, we should look at options to support the Hibernate Spatial and maybe have the JP-QL indexing functions mapped as native functions.", "sentence_label": "expected"}, {"sentence": "IT's split into:", "sentence_label": "explanation"}, {"sentence": "On the query side, MongoDB does support geolocation but it's very verbose.", "sentence_label": "drawback"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Offer an NoSQL alternative to Session.doWork / doReturningWork", "sentence_label": "title"}, {"sentence": "The use case is to be able to execute native code based on the connection to the underlying NoSQL datastore in an isolated fashion.", "sentence_label": "expected"}, {"sentence": "We should be able to support a NoSQL specific version of these methods", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for @OrderBy", "sentence_label": "title"}, {"sentence": "We do not yet support ordered collections via @OrderBy.", "sentence_label": "current"}, {"sentence": "I initially thought that'd be handled by ORM internally so we'd benefit from it, but actually the specified order columns are appended to the WHERE clause of the collection fetch statement.", "sentence_label": "expected"}, {"sentence": "We could do the following:", "sentence_label": "explanation"}, {"sentence": "Thoughts?", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support natural id look-ups", "sentence_label": "title"}, {"sentence": "There should be support for <CODE>.", "sentence_label": "expected"}, {"sentence": "Currently this causes JDBC-related code to be executed.", "sentence_label": "current"}, {"sentence": "It would be an optional operation depending on the given store's capabilities", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide Bill-of-Materials POM with matching versions of OGM dependencies and components", "sentence_label": "title"}, {"sentence": "We should provide a Bill-of-Materials POM which defines the versions of our components and dependencies.", "sentence_label": "expected"}, {"sentence": "Users can refer to that BOM POM using the import scope in their dependency management configuration, thus giving them matching versions of all the artifacts listed in the BOM.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add properties to a relationship when mapping an intermediate table in Neo4j", "sentence_label": "title"}, {"sentence": "There is not a way in JPA to recognize an entity created to map additional properties to an intermediate table.", "sentence_label": "current"}, {"sentence": "In Neo4j, we could map this entities as relationships with properties (instead of nodes).", "sentence_label": "expected"}, {"sentence": "This requires a discussion about the way a user could map this configuration.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Apply type conversion to scalar values loaded from native queries", "sentence_label": "title"}, {"sentence": "CustomLoader has a concept of ResultRowProcessor/ResultColumnProcessor which for example is used to handle constructor results or type conversions for scalar values.", "sentence_label": "explanation"}, {"sentence": "As BackendCustomLoader overrides CustomLoader at a very high level, we don't benefit from this (these contracts are JDBC-dependent anyways).", "sentence_label": "current"}, {"sentence": "We should resemble this pattern to for example correctly load scalar values in a first step.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for ObjectId in MongoDB", "sentence_label": "title"}, {"sentence": "MongoDB by default uses a 12-byte BSON type with a special structure as document ids:<CODE>", "sentence_label": "current"}, {"sentence": "This id is assigned during insert by the driver and comprises parts for timestamp, machine etc.", "sentence_label": "current"}, {"sentence": "We should support this as a) it is the \"natural\" way to represent ids in MongoDB and b) in order to facilitate integration with other applications relying on document ids being object ids.", "sentence_label": "expected"}, {"sentence": "It should be possible to represent such id in entities as String, ObjectId and probably Long BigInteger.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Map joins to associations in Neo4j", "sentence_label": "title"}, {"sentence": "Joins may be leveraged to access associations when loading data from Neo4j.", "sentence_label": "expected"}, {"sentence": "To begin with, we could support NoSQLQuery#addJoin() to map associations navigated in native queries.", "sentence_label": "expected"}, {"sentence": "In a next step, we might try to map joins from JP-QL queries or even JPA 2.1 fetch graphs.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide API for creating native queries in store-specific representation", "sentence_label": "title"}, {"sentence": "We should have an API which takes native queries in the store-specific representation instead of Strings.", "sentence_label": "expected"}, {"sentence": "That way one could for example pass a DBObject based query in the case of MongoDB to Hibernate OGM.", "sentence_label": "benefit"}, {"sentence": " for example like so: <CODE>", "sentence_label": "example"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for exposing unmapped attributes in a generic manner", "sentence_label": "title"}, {"sentence": "When working with OGM an existing database, it would be very useful to allow to propagate any unmapped attributes of a record/document in a generic container.", "sentence_label": "expected"}, {"sentence": "Taking a web shop with a Product entity as example, you typically don't need to (or even can) \"know\" all the attributes of such a product entity but still want to be able to display all the attributes in a generic fashion for example on a web page.", "sentence_label": "example"}, {"sentence": "Only a few attributes actually need to be known/mapped in the application itself, namely those fields to which specific handling/logic applies.", "sentence_label": "explanation"}, {"sentence": "To facilitate such a scenario, one could designate a Map property of an entity to hold any unmapped attribute.", "sentence_label": "expected"}, {"sentence": "Considering for example the following MongoDB document:<CODE>", "sentence_label": "example"}, {"sentence": "While the attributes common to every product document are explicitly mapped as properties, all unmapped properties are exposed via the additionalProperties map which is designated for that purpose using a new annotation, for example named @AdditionalProperties.", "sentence_label": "explanation"}, {"sentence": "The application can perform logic on the common known attributes and still forward all unmapped attributes to a generic web view etc.The types of the map values would be those returned from the underlying store.", "sentence_label": "explanation"}, {"sentence": "Such a facility would also help with prototype development, where one starts with most attributes not being explicitly mapped and then creates specific members iteratively as application requirements demand.", "sentence_label": "benefit"}, {"sentence": "Also the CouchDB dialect would benefit from this, because it doesn't support partial updates at the moment, meaning one currently must map all attributes or an update (which always writes back a complete document) may discard any unmapped attributes.", "sentence_label": "benefit"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Expose more configuration options for MongoDB", "sentence_label": "title"}, {"sentence": "Currently, only the connection timeout and global write concern are configurable for the MongoDB dialect.", "sentence_label": "current"}, {"sentence": "But there are some more useful options available, in particular the size of the connection pool to be used.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Reorganize OGM packages into proper APIs, SPIs and impls", "sentence_label": "title"}, {"sentence": "As I just learned, Emmanuel's definition of APIs and SPIs is this:<LIST>", "sentence_label": "explanation"}, {"sentence": "Whereas to me, an API is something which is used by others (think library),", "sentence_label": "explanation"}, {"sentence": "whereas an SPI is something which is implemented by others (think framework hooks).", "sentence_label": "explanation"}, {"sentence": "I like to make this distinction apparent in the packaging, as different rules apply for the evolvements of these things.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Offer API for Map / Reduce", "sentence_label": "title"}, {"sentence": "Apache Gora has an interesting feature.", "sentence_label": "explanation"}, {"sentence": "It offers a Map / Reduce API where the Map interface accepts a specific entity type.", "sentence_label": "explanation"}, {"sentence": "It makes for a rather nice and more type-safe API.", "sentence_label": "benefit"}, {"sentence": "Not all the backends we have in mind support Map Reduce but it could be interesting to explore how we would map such API to the backends we have and see if there is an interest.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support entity embedded mode for associations with CouchDB backend", "sentence_label": "title"}, {"sentence": "Similar to MongoDB, it should be configurable how to store associations in CouchDB, either embedded in the entity or in a separate document.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add Google Datastore as datastore backend", "sentence_label": "title"}, {"sentence": "Google App Engine uses Google Datastore underneath.", "sentence_label": "explanation"}, {"sentence": "Google Datastore as recently exposed some direct APIs we could bind as dialect", "sentence_label": "expected"}, {"sentence": "<LINK>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implement precedence of configuration options given on different levels", "sentence_label": "title"}, {"sentence": "With  <LINK>  and    <LINK> , it's possible now to define store-specific options on the global, entity and property level.", "sentence_label": "expected"}, {"sentence": "It should be configurable per option type how to proceed if one option is given on more than one level.", "sentence_label": "expected"}, {"sentence": "There are cases where a precedence of property over entity over global is useful, but there may be other cases as well.", "sentence_label": "expected"}, {"sentence": "Maybe this should be configured via an annotion on the option type definition?", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support polymorphic queries on MongoDB", "sentence_label": "title"}, {"sentence": "A query targetting a supertype should return matching subtype entities.", "sentence_label": "expected"}, {"sentence": "At least for MongoDB this does not work at the moment when using the table-per-class strategy as only the collection of the addressed entity type is queried.", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make MongoDB write concern configurable per entity and property", "sentence_label": "title"}, {"sentence": "With  <LINK>  in place, we can make use of the new configuration facility and see how it works out in practice.", "sentence_label": "benefit"}, {"sentence": "A good candidate might be the write concern setting for which we already have the required option class and annotation.", "sentence_label": "expected"}, {"sentence": "The MongoDB dialect should take the setting into account when executing writes.", "sentence_label": "expected"}, {"sentence": "Given on the property level, the setting only makes sense for properties representing associations, which are stored in a separate association document.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Explore use of B+Tree structure for association information", "sentence_label": "title"}, {"sentence": "Via the cloud-tm project, Fenix has made use of B+Tree structures to improve efficiencies of collections / multiple cardinality associations.", "sentence_label": "explanation"}, {"sentence": "The same technique could be applied by OGM.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Explore co-location of keys to minimize node involved in transactions and data transfert", "sentence_label": "title"}, {"sentence": "This is of particular relevance for Infinispan.", "sentence_label": "explanation"}, {"sentence": "Via the cloud-tm project, the Fenix framework explored the use of key/data locality to improve the overall performance of the application.", "sentence_label": "benefit"}, {"sentence": "Let's look at their work and see what they have done that can be applied to OGM most likely driven by the options framework currently developed.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support formula in OGM", "sentence_label": "title"}, {"sentence": "We could support the notion of formula by doing the following approach.", "sentence_label": "expected"}, {"sentence": "Create an interface that takes a Tuple and return the value of the virtual column.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Offer ability to load all entities of a given table from GridDialec", "sentence_label": "title"}, {"sentence": "This is useful for the Hibernate Search mass indexer.", "sentence_label": "benefit"}, {"sentence": "This also means that we need a loader to build an entity based on a (list of) tuple.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Consider a option to use same replica reads after writes", "sentence_label": "title"}, {"sentence": "Today, we might read stuff after writes and return inconsistent results.", "sentence_label": "current"}, {"sentence": "We should add an option to force the dialect to use requestStart / requestDone", "sentence_label": "expected"}, {"sentence": "See <LINK>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Should we raise an exception on rollback if the backend does not support transactions?", "sentence_label": "title"}, {"sentence": "To warn the user we could raise a transaction if rollback is called.", "sentence_label": "expected"}, {"sentence": "But we need to make sure this does not have any side effect first.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create facility for OGM core and Dialects to receive custom metadata (annotation, programmatic) associated to entities, properties or associations", "sentence_label": "title"}, {"sentence": "Typically we should be able to transfer the following metadata to the MongoDB driver<CODE>", "sentence_label": "expected"}, {"sentence": "The facility should be extensible to make sure a driver can add any necessary custom metadata.", "sentence_label": "expected"}, {"sentence": "A programmatic mapping API would be useful too.", "sentence_label": "benefit"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make MongoDB's association storage strategy available per association", "sentence_label": "title"}, {"sentence": "Using the new option mechanism, the association storage strategy should be configurable for the MongoDB dialect on a per entity/property base, via annotations and API.", "sentence_label": "expected"}, {"sentence": "ML reference <LINK>", "sentence_label": "example"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Consider reading/writing directly from BSON stream to Tuple to limit unnecessary object creation (like HashMap) by the MongoDB driver", "sentence_label": "title"}, {"sentence": "GC can slow down reads esp for collections.", "sentence_label": "explanation"}, {"sentence": "Many HashMap are created and we suspec the MongoDB driver for Java is the creator (DBObject is a subclass of LinkedHashMap).", "sentence_label": "explanation"}, {"sentence": "We could imagine not create these BObject but directly talk to the BSON stream.", "sentence_label": "expected"}, {"sentence": "That would of course be a lot of work to do that right and the MongoDB driver needs to expose BSON without parsing it first.", "sentence_label": "explanation"}, {"sentence": "It more a prospective idea.", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for the SafeMode", "sentence_label": "title"}, {"sentence": "Use the org.hibernate.ogm.safemode", "sentence_label": "explanation"}, {"sentence": "Should we provide more options to support Majority and Fsync_safe modes as well ?", "sentence_label": "expected"}, {"sentence": "Here is there a description of each mode", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Expose in AssociationKey means to embed collections (of embeddable)", "sentence_label": "title"}, {"sentence": "I am thinking owning entity (or owning EntityKey rather) as well as role.", "sentence_label": "explanation"}, {"sentence": "Even though role is defined at the property level and not at the column name level.", "sentence_label": "explanation"}, {"sentence": "Ideally add support beyond @elementCollection to be able to denormalize later even true collections.", "sentence_label": "expected"}, {"sentence": "But retrieving the EntityKey and the role might be tricky", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Log reasons for performed CRUD / Query operations", "sentence_label": "title"}, {"sentence": "as a follow up to to  <LINK>  , it would be nice to provide as well the comments provided by Hibernate when enabling the option", "sentence_label": "expected"}, {"sentence": "<CODE>", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide OGM specific statistics", "sentence_label": "title"}, {"sentence": "See and document which of Hibernate Core own statistics make sense", "sentence_label": "explanation"}, {"sentence": "Make sure that our persisters and loaders properly populate these statistics (if their JDBC version do it)", "sentence_label": "expected"}, {"sentence": "If needed add Hibernate OGM specific statistics (new class, subclassing Hibernate Core one?)", "sentence_label": "expected"}, {"sentence": "Unit test them", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Migrate logging to JBoss Logging", "sentence_label": "title"}, {"sentence": "Today we use SLF4J but we should migrate to JBoss Logging like code does and use the type-safe approach.", "sentence_label": "expected"}, {"sentence": "The idea is to do it in two steps:", "sentence_label": "explanation"}, {"sentence": "If someone in the community could at least do the first step, that would be awesome", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Think about data migration features", "sentence_label": "title"}, {"sentence": "You can migrate data in two ways:", "sentence_label": "explanation"}, {"sentence": "The idea is to provide annotations, metadata or callback to migrate data on the fly while OGM loads tuples.", "sentence_label": "expected"}, {"sentence": "Objectify has this concept <LINK>", "sentence_label": "explanation"}, {"sentence": "Morphia too (@AfterLoad)", "sentence_label": "useless"}, {"sentence": "Thanks for Scott Hernandez for pointing that out.", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support pure Infinispan client mode for Hibernate OGM", "sentence_label": "title"}, {"sentence": "There are several levels at play:", "sentence_label": "explanation"}, {"sentence": "The latest is not fleshed out though and will require refinement.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide a full implementation of the Getting Started", "sentence_label": "title"}, {"sentence": "The information provided in the Getting Started is good enough for reading, but one has problems when trying to actually transform that into code.", "sentence_label": "current"}, {"sentence": "So, it would be nice to provide a full implementation, containing all the configuration files and all sources, to be used as a reference for readers trying to implement the Getting Started.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make OGM work on explicit Hibernate Transaction demarcation", "sentence_label": "title"}, {"sentence": "Delegate to a JTA Transaction Manager underneath to get Infinispan behave transactionally.", "sentence_label": "expected"}, {"sentence": "Use DummyTransactionManager initially as JBoss Tx would require another dependency for the user.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make it possible to grab an existing Infinispan CacheManager via JNDI", "sentence_label": "title"}, {"sentence": "Make it possible to grab an existing Infinispan CacheManager via JNDI, so that multiple applications deployed in the same server can share the same CacheManager, and/or reuse the one being started and configured by the container (Like JBossAS6 provides one).", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support more GridTypes", "sentence_label": "title"}, {"sentence": "Today we only support basic numeric and string types", "sentence_label": "current"}, {"sentence": "We should support other types like URL, BigDecimal etc", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Implement support for denormalization of associations", "sentence_label": "title"}, {"sentence": "We can keep the association value on the main entity atomic map, that will reduce the amount of roundtrip necessary to load a graph.", "sentence_label": "expected"}, {"sentence": "The Loader and Persister will need to be adapted in consequence.", "sentence_label": "expected"}, {"sentence": "Likewise we could do it for Collections but that's more work and would require nested atomicmaps at the ISPN level.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support JPA Criteria query", "sentence_label": "title"}, {"sentence": "That's going to be a biggie but we will need to think about how to support JPA 2 criteria.", "sentence_label": "expected"}, {"sentence": "One approach could be to implement in Hibernate Core or outside a Criteria to JP-QL query translator and then go from here.", "sentence_label": "explanation"}, {"sentence": "This is not for the initial deadline", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Loading a persistence unit with Hibernate seconde level cache, jcache API and Hazelcast Provider causes errors because [CLASS] is not a subtype of [CLASS]", "sentence_label": "title"}, {"sentence": "Recently, we have upgraded the version of Hibernate from 4.3.5 to 5.3.7, then we can't launch our project right now in active mode of second level cache with Hazelcast implementation.", "sentence_label": "current"}, {"sentence": "Following are some snippets of our related configuration", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "In fact, the class [CLASS] is a concrete class of [CLASS] in the package of [LOC]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "incorrect primary key for audit table of element collection property of entity", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "The class Child is any Embeddable.", "sentence_label": "explanation"}, {"sentence": "So the table TestEntity_children has not a primary key.", "sentence_label": "explanation"}, {"sentence": "This may cause the problem.", "sentence_label": "explanation"}, {"sentence": "generate this scheme", "sentence_label": "explanation"}, {"sentence": "This is wrong.", "sentence_label": "explanation"}, {"sentence": "this cause a children property must have only one element in it.", "sentence_label": "explanation"}, {"sentence": "Or not unique exception will be thrown!", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Commit called without beginning a long transaction", "sentence_label": "title"}, {"sentence": "Hello,", "sentence_label": "useless"}, {"sentence": "any idea about this exception ...", "sentence_label": "useless"}, {"sentence": "[EXCEPTION]: commit called without beginning a long transaction", "sentence_label": "explanation"}, {"sentence": "thanks.", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Hibernate fails on composite PK referencing a subclass in inheritance tree with JOINED strategy", "sentence_label": "title"}, {"sentence": "[URL]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Infinispan 2LC inconsistency with localcache", "sentence_label": "title"}, {"sentence": "If I configure hibernate-infinispan with \"infinispan-local-config.xml\" I have 2LC corruptions on rollbacks", "sentence_label": "current"}, {"sentence": "testcase attached", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Hibernate and Bundle ClassLoaders out of sync on Bundle Refresh", "sentence_label": "title"}, {"sentence": "After persistent unit bundles are refreshed, hibernate still use the old class loader, leading to [EXCEPTION].", "sentence_label": "current"}, {"sentence": "See [URL]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Adding a detached entity to a managed entity's collection triggers an exception on flush", "sentence_label": "title"}, {"sentence": "Let's assume we have the following entities: [CODE]", "sentence_label": "explanation"}, {"sentence": "Let's persist a tooth and a mouth containing an empty collection of teeth: [CODE]", "sentence_label": "explanation"}, {"sentence": "At this point, tooth is detached.", "sentence_label": "explanation"}, {"sentence": "Now in a new session, let's retrieve the mooth instance from database and add tooth its teeth collection:[CODE]", "sentence_label": "explanation"}, {"sentence": "At this point, if we call em.flush the following exception is thrown: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION]: [CLASS] cannot be cast to [CLASS] when deploying to glassfish 4.1 since 4.3.6", "sentence_label": "title"}, {"sentence": "We have a JSF app that uses JPA and Hibernate which is deployed on Glassfish 4.1.", "sentence_label": "explanation"}, {"sentence": "It was ok when we used Hibernate 4.3.5.", "sentence_label": "current"}, {"sentence": "After upgrading to 4.3.6, it started to throw the exception during deployment", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Table Exporter Creating Wrong Column For Generated Value with Composite Primary Key", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "When using create-drop, the table generated puts the generated value on the wrong column", "sentence_label": "current"}, {"sentence": "The problem appears in [CLASS] in [CLASS]", "sentence_label": "explanation"}, {"sentence": "This code: [CODE] is not looking for the GeneratedValue identity column but merely the first primary key column.", "sentence_label": "explanation"}, {"sentence": "This should be getting the column with @GeneratedValue", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "\"Unable to process Jar entry xxx for annotations\" while migrating from 5.3.7 to 5.4.0 or 5.4.1", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "we are trying to migrate our project from Hibernate Core 5.3.7  to 5.4.0 or 5.4.1  and Hibernate Search from 5.10.5 to 5.11.0 or 5.11.1", "sentence_label": "explanation"}, {"sentence": "The compilation is OK but at the server Startup we have the below exception.", "sentence_label": "current"}, {"sentence": "We are running our server with :[LIST]", "sentence_label": "explanation"}, {"sentence": "Many thanks  for your help,", "sentence_label": "useless"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "wrong schema generate when multi relation of the same entity.", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "This code generate this sql:[CODE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "LobTest and VersionedLobTest fail with MySQL Connector/J 8", "sentence_label": "title"}, {"sentence": "[METHOD]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "fails because [METHOD] is null", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[FILE] not available yet?", "sentence_label": "title"}, {"sentence": "Just wanted to update to Hibernate 5.3.0 Final, but it seems that the eh cache adapter is not released yet (latest available: CR1)?", "sentence_label": "current"}, {"sentence": "Best regards,", "sentence_label": "useless"}, {"sentence": "Niko", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JPA Native Query with ordinal parameter not Working", "sentence_label": "title"}, {"sentence": "Hi, I've executed the following native query with CTE (common table expression) syntax and positional parameter, but the result returned is always empty.", "sentence_label": "current"}, {"sentence": "From the trace log printed, hibernate seems to be able to bind the parameter to the correct position but oddly enough the results were never returned.", "sentence_label": "explanation"}, {"sentence": "There's no issue with the SQL as concatenating the value onto the SQL instead of positional parameter is returning the expected results.", "sentence_label": "explanation"}, {"sentence": "p.s. there were no errors thrown when executing the query", "sentence_label": "current"}, {"sentence": "[CDOE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] returns null for JPQL query without explicit alias", "sentence_label": "title"}, {"sentence": "I created a test which demonstrates the issue: [URL]", "sentence_label": "explanation"}, {"sentence": "This fails: [CODE]", "sentence_label": "explanation"}, {"sentence": "Because [METHOD] returns null although I think it should return the column name \"one\"", "sentence_label": "explanation"}, {"sentence": "Note that the test does not fail when the query is edited to include an explicit alias: [CODE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Duplicate generator for specific sequence per table", "sentence_label": "title"}, {"sentence": "Defining a sequence-based primary key in a base entity with specific sequences per concrete sub-entities used to work in Hibernate 5.2.12.", "sentence_label": "explanation"}, {"sentence": "After the upgrade Hibernate 5.2.13 we get a [EXCEPTION]", "sentence_label": "current"}, {"sentence": "Code to reproduce the problem (on any database):[CODE", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unique constraint violation Exception during insertion sorts", "sentence_label": "title"}, {"sentence": "On Hibernate core 5.2.8, When the property hibernate.order_inserts is set to true, hibernate sorts the inserts.", "sentence_label": "current"}, {"sentence": "This sorting logic is adding a new EntityInsertAction which is a duplicate of already existing EntityInsertAction causing the following exception: [EXCEPTION]", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] return incorrect value when reader contains special characters.", "sentence_label": "title"}, {"sentence": "[METHOD] in the unfinished return value should in the range 0 to 255.", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] The index 1 is out of range when executiong Spring Data findAll(Pageable)", "sentence_label": "title"}, {"sentence": "When the Spring Data findAll(Pageable) method of an entity is called, the following query is executed by Hibernate: [CODE]", "sentence_label": "current"}, {"sentence": "After that the following query is executed:[CODE]", "sentence_label": "current"}, {"sentence": "An execption is raised [EXCEPTION]", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Can not cast proxed entity to it actual class", "sentence_label": "title"}, {"sentence": "Create entities:[CODE]", "sentence_label": "explanation"}, {"sentence": "Then create and persist FolderEx entity and File entity like this:[CODE]", "sentence_label": "explanation"}, {"sentence": "After that, if we get File entity by em.find method and get Folder entity by [METHOD] method, than we can't access to [METHOD] method, even with cast: [CODE]", "sentence_label": "current"}, {"sentence": "And, if execute this code, we see, that actual instance of folder is FolderEx: [CODE]", "sentence_label": "current"}, {"sentence": "I attach complete test with this situation", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "cannot use enum in jpql, which was able in 5.2.4", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "The code works in 5.2.4, but cannot words in 5.2.6", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION]: [CLASS] cannot be cast to [CLASS]", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "hibernate doesn't shutdown correctly on web container", "sentence_label": "title"}, {"sentence": "While trying to do hot-deploy, Hibernate doesn't shutdown correctly keeping classes loaded and not letting us do redeploys.", "sentence_label": "current"}, {"sentence": "This is particularly bad in a production environment, since we can't always restart tomcat to apply hotfixes to our webapps.", "sentence_label": "explanation"}, {"sentence": "Attachaments:[LIST]", "sentence_label": "explanation"}, {"sentence": "We upgraded to Hibernate 4.3.8 recently, didn't have this problem on Hibernate 3.6.10", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPtION] between [CLASS] and [CLASS]", "sentence_label": "title"}, {"sentence": "It is similar to [URL], but in other place", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ForeignKey does not work correctly for OneToOne associations", "sentence_label": "title"}, {"sentence": "In some cases the [METHOD] annotation is ignored.", "sentence_label": "current"}, {"sentence": "Unit test that reproduces it: [CODE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] at [CLASS]", "sentence_label": "title"}, {"sentence": "Java 8's resolution of lambda call sites can result in synthetic classes with no name.", "sentence_label": "explanation"}, {"sentence": "Therefore when [CODE] on Java 8, [METHOD] can be called with [CODE.", "sentence_label": "current"}, {"sentence": "This immediately results in NPE.", "sentence_label": "drawback"}, {"sentence": "I expect this bug affects 4.2 also, but I haven't tested that.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] at [METHOD]", "sentence_label": "title"}, {"sentence": "Entity: [CODE]", "sentence_label": "explanation"}, {"sentence": "with UserType: [CODE]", "sentence_label": "explanation"}, {"sentence": "This code: [CODE] results in the error below.", "sentence_label": "current"}, {"sentence": "Perhaps something's amiss with the UserType implementation, however in that case Hibernate should throw appropriate Exception with more information and context regarding the invalid state.", "sentence_label": "expected"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] is thrown with simple parent child relationship", "sentence_label": "title"}, {"sentence": "Test case shown below:[URL]", "sentence_label": "explanation"}, {"sentence": "We have simple parent child relationship.", "sentence_label": "explanation"}, {"sentence": "According to hibernate log, update statement is excuted once.", "sentence_label": "explanation"}, {"sentence": "But [EXCEPTION] is thrown.", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "Also attaching DB sql script.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] DatabaseMetadata use a deprecated method: [METHOD]", "sentence_label": "title"}, {"sentence": "[CLASS] class call (in the main constructor) a deprecated method: [METHOD]", "sentence_label": "explanation"}, {"sentence": "In hibernate 4.3.5, this return null... so SQLException convertion are not working...", "sentence_label": "explanation"}, {"sentence": "the method [METHOD] should be use instead (see documentation on [METHOD])", "sentence_label": "expected"}, {"sentence": "Full stack trace: [TRACE]", "sentence_label": "explanation"}, {"sentence": "To get this exception, i used a Oracle database connection, I called: [METHOD]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] on flush stage", "sentence_label": "title"}, {"sentence": "Occasionally a transaction fails on flush stage with Exception like this: [TRACE]", "sentence_label": "current"}, {"sentence": "Our code in the last line is calling [METHOD]", "sentence_label": "explanation"}, {"sentence": "Replication steps are a bit hard to come by, because most of the similar operations work fine, and our software is so complex it's hard to run a one operation exactly the same again.", "sentence_label": "explanation"}, {"sentence": "But considering AIOOBE is often relatively simple error, you might be able to figure it out from the line number alone, I filed it here.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Leaking connections when unidirectional many to one with [PARAMS]", "sentence_label": "title"}, {"sentence": "There are still leaking connections when I use unidirectional one to many collection with orphan removal.", "sentence_label": "current"}, {"sentence": "Please run patched [FILE] test case to reproduce this situation.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[ERROR]", "sentence_label": "title"}, {"sentence": "When using Terracotta Bigmemory EhCache a NoClassDefFoundError occurs: [TRACE]", "sentence_label": "current"}, {"sentence": "It comes down to the simple fact that [PARAMS] no longer exists in the [CLASS] class. However [CLASS] still makes use of this [PARAMS] causing it to throw the exception.", "sentence_label": "explanation"}, {"sentence": "I have posted work around for this issue on the Terracotta forum which can be found here [URL]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NPE during compilation with eclipse", "sentence_label": "title"}, {"sentence": "I have added the jpamodelgen as annotation processor to an ejb project.", "sentence_label": "explanation"}, {"sentence": "However, when recompiling, not all meta classes are created.", "sentence_label": "current"}, {"sentence": "The processor crashes with a NPE.", "sentence_label": "current"}, {"sentence": "Compiling the project with the same jdk and ant works fine.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Settings from [PARAMS] are not applied when obtaining an entity manager factory", "sentence_label": "title"}, {"sentence": "When obtaining an entity manager factory via [METHOD], properties specified in [PARAMS] are not applied, unlike under ORM 4.2.x.", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Batch update versioned with where clause generates bad SQL", "sentence_label": "title"}, {"sentence": "Doing a batch update such as [CODE] generates a [EXCEPTION].", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] during schema creationg", "sentence_label": "title"}, {"sentence": "Hi, I have a entity User that have an [PARAMS] of Address (@Embeddable) with a [PARAMS] of AddressType.", "sentence_label": "explanation"}, {"sentence": "I attach the test case.", "sentence_label": "explanation"}, {"sentence": "This is the stack trace: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[CLASS] doesn't honor [PARAMS] correctly", "sentence_label": "title"}, {"sentence": "It fails to work when [PARAMS] are annotated with [PARAMS]", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "only root level fetch-profile element get processed", "sentence_label": "title"}, {"sentence": "can be reproduced by [FILE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception occurs if a class contains multiple annotations for access type", "sentence_label": "title"}, {"sentence": "As shown via [FILE] when processing [FILE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Binder unable to determine correct columns for non-explicit references to PK of joined tables", "sentence_label": "title"}, {"sentence": "As shown by failure in [FILE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[CLASS] is hiding exceptions that are thrown in test class-level methods", "sentence_label": "title"}, {"sentence": "Fixing this will reveal other exceptions in tests that were previously failing from things in the class methods not being initialized due to these earlier class method exceptions.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "fixing test failures caused by some configuration is not applied to metamodel", "sentence_label": "title"}, {"sentence": "[FILE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Avoid throwing an NPE when Infinispan 2LC custom commands are not found", "sentence_label": "title"}, {"sentence": "When custom commands for handling evictions are not find, an NPE is thrown from the Infinispan 2LC:", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "This JIRA is to clean this up.", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Map returned by [METHOD] does not include entries for unqualified entity names", "sentence_label": "title"}, {"sentence": "I see this happening with both HBM XML and annotations.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception when the entities has no @Id but just uses @EmbeddId", "sentence_label": "title"}, {"sentence": "Hardy,", "sentence_label": "useless"}, {"sentence": "the logic of [CODE] is not correct", "sentence_label": "explanation"}, {"sentence": "as subject, if all entities use only @EmbeddId, then this method throws exception.", "sentence_label": "current"}, {"sentence": "we need find a better way to determin the default access type", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Envers failed to create AUD table with large strings", "sentence_label": "title"}, {"sentence": "In my application, Envers failed to create a AUD table for an entity that included a large string property (mapped to a TEXT column in MySQL).", "sentence_label": "current"}, {"sentence": "So the following class failed to generate a AUD table: [CODE]", "sentence_label": "current"}, {"sentence": "Once the [FILE] property was modified, the AUD table was created: [CODE]", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unexpected audit entries when using [METHOD]", "sentence_label": "title"}, {"sentence": "I have the following object model [CODE]", "sentence_label": "explanation"}, {"sentence": "Everything is ok.", "sentence_label": "explanation"}, {"sentence": "I can create an instance of classA with a set of audited classB's.", "sentence_label": "explanation"}, {"sentence": "WHat is interesting is that if i update ClassA with any other data I get an entry update in the audit table for each entity classB saying an update occurred which is not correct as I only updated classA which is not audited.", "sentence_label": "current"}, {"sentence": "Please see [URL], also I have attached a small test case", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] if [METHOD] is used in WHERE condition on type with no subtype or supertype, ie. a single table (additional test case)", "sentence_label": "title"}, {"sentence": "As raised on HHH-10628, there is a problem doing non-polymorphic queries - specifying a single type does not work for a single subtype of a mapped superclass.", "sentence_label": "current"}, {"sentence": "That means to query single types (or in this case a single table) in general I need a separate type system to decide whether to include the TYPE condition or not (or I cannot generally know whether people add a subclass or not and I therefore need to scan the class path for subclasses, which is not efficient).", "sentence_label": "drawback"}, {"sentence": "Running test case gives this error:", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION]: null at [METHOD]", "sentence_label": "title"}, {"sentence": "With the following code: [CODE] I get this error:[TRACE]", "sentence_label": "current"}, {"sentence": "I may have a mistake with my code, however Hibernate should throw a more descriptive exception with explanation rather than a plain [EXCEPTION], in order to assist the developer to fix their code.", "sentence_label": "expected"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Wrong \"jsdk.jar\" referenced in the tutorial", "sentence_label": "title"}, {"sentence": "The problem appears again (as described in #HHH-2755) at [URL]", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] does not work as documented on detached objects", "sentence_label": "title"}, {"sentence": "When calling saveOrUpdate on a detached object it performs a save and not an update.", "sentence_label": "current"}, {"sentence": "The updated is performed if the object is attached to the session.", "sentence_label": "explanation"}, {"sentence": "The Hibernate 5.2 documentation states that saveOrUpdate performs a reattach.", "sentence_label": "explanation"}, {"sentence": "I am including the files to reproduce the issue.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cache71Dialect error", "sentence_label": "title"}, {"sentence": "Hello.", "sentence_label": "useless"}, {"sentence": "I'm moving my application to run in wildfly 10.", "sentence_label": "explanation"}, {"sentence": "I found an error which I believe is due to very old version of dialect.", "sentence_label": "current"}, {"sentence": "\"DROP not supported as a after-use action for global temp table strategy\"", "sentence_label": "explanation"}, {"sentence": "I use JavaEE 7 with Intersystems Cache.", "sentence_label": "explanation"}, {"sentence": "Currently my application is set up with the dialect [FILE] and this occurs the following trace: [TRACE]", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception thrown by JOIN query when package names starts with \"in\"", "sentence_label": "title"}, {"sentence": "[URL]", "sentence_label": "explanation"}, {"sentence": "Facing issue with JOIN Query if the following Entity is preset in a package starting within.", "sentence_label": "current"}, {"sentence": "There are many popular domains like \"in\", \"net.in\", \"co.in\"  would have package starting  \"in\"", "sentence_label": "explanation"}, {"sentence": "however IN also a keyword causes shift-reduce conflict.", "sentence_label": "explanation"}, {"sentence": "To avoid would escape it with a quote of the fully qualified class name of the entity.", "sentence_label": "explanation"}, {"sentence": "Following stack trace [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Temporary session not being closed", "sentence_label": "title"}, {"sentence": "In some cases, for example when AssertionFailure \"bug adding collection twice\" is thrown, temporary session is not being closed.", "sentence_label": "current"}, {"sentence": "In our case this caused connection pool starvation and application death.", "sentence_label": "explanation"}, {"sentence": "I presume, method [METHOD], potentially capable of throwing Exception should be within try/finally block", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unique constraints fail to apply if at least one contains non unique elements", "sentence_label": "title"}, {"sentence": "Applying @Column(unique = true) doesn't lead to an unique constraint being created at database level.", "sentence_label": "current"}, {"sentence": "The scenario happens when adding an unique constraint on multiple fields individually and one of them does not have unique fields.", "sentence_label": "current"}, {"sentence": " This leads to potential silent data corruption and a constant need to doublecheck the application  since due to HHH-11813: Silent fail of @UniqueConstraintOPEN it\u2019s not reported at all at application level.", "sentence_label": "drawback"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "WildFly 15 and up fails with a NPE when executing the following native PostgreSQL query", "sentence_label": "title"}, {"sentence": "Good day", "sentence_label": "useless"}, {"sentence": "I am porting an existing JSF 2.3 application from WildFly 14 to latest WildFly 17.", "sentence_label": "explanation"}, {"sentence": "Using mvn clean package works 100% with zero warnings.", "sentence_label": "explanation"}, {"sentence": "When I try to deploy the war using a plethora of different methods, all of them fail when trying to setup the Hibernate persistence unit.", "sentence_label": "current"}, {"sentence": "Code samples below are for WildFly 17", "sentence_label": "explanation"}, {"sentence": "Here is my pom file: [CODE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Problem in MariaDB implementation", "sentence_label": "title"}, {"sentence": "Hi all", "sentence_label": "useless"}, {"sentence": "I am currently implementing an application using Hibernate, Spring Boot and MariaDB.", "sentence_label": "current"}, {"sentence": "The connection to the DB is as follows:[PARAMS]", "sentence_label": "explanation"}, {"sentence": "Please note, that the schema name disappeared in the SQL command.", "sentence_label": "explanation"}, {"sentence": "From my point of view, this causes the problem.", "sentence_label": "explanation"}, {"sentence": "As my problem got not noticed in the community area, I am opening now this ticket.", "sentence_label": "explanation"}, {"sentence": "Maybe this helps more than just asking a question....", "sentence_label": "explanation"}, {"sentence": "The original request is visible here: [URL]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[PARAMS] doesn't work in native Query if Query is already executed with different parameter value for collection type when new collection length is less than the previous", "sentence_label": "title"}, {"sentence": "[PARAMS] doesn't work if Query is already executed with different parameter value for collection type when new collection length is less than the old.", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Hibernate transaction can't recover from a DB restart", "sentence_label": "title"}, {"sentence": "I think the bug is in [FILE]", "sentence_label": "current"}, {"sentence": "if for whatever reason the connection get's closed, the setAutoCommit will throw and exception and the managedConnection isn't reset.", "sentence_label": "current"}, {"sentence": "Even retrying to start the transaction will fail because it is bind the the current thread.", "sentence_label": "current"}, {"sentence": "Solution should be that [CODE] is moved after the catch so the post condition is always that [CODE]", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "using OPTIMISTIC_FORCE_INCREMENT does not increment the version on [METHOD]", "sentence_label": "title"}, {"sentence": "In my project I use Wildfly 10 and do the following: [CODE]", "sentence_label": "explanation"}, {"sentence": "the problem is that the version is not incremented on flush but on JTA transaction commit - which means that my dto doesn't have correct version information which is a major problem for me.", "sentence_label": "current"}, {"sentence": "the same issue is also mentioned here: [URL]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "order by ignored", "sentence_label": "title"}, {"sentence": "HQL parsing does not detect abnormal parenthesis, but silently ignores the order by clause instead.", "sentence_label": "current"}, {"sentence": "Issue detected on 5.0.2, reproductible on 5.2.6", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "maven test case provided,", "sentence_label": "explanation"}, {"sentence": "thanks for your help", "sentence_label": "useless"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JNDI injection not working for OSGI bundles in unmanaged mode", "sentence_label": "title"}, {"sentence": "We've set up injection as follows: [CODE]", "sentence_label": "explanation"}, {"sentence": "And in our hibernate config:[PARAMS]", "sentence_label": "explanation"}, {"sentence": "This is results in the error", "sentence_label": "explanation"}, {"sentence": "The test case is based on the unmanaged-native osgi demo provided with hibernate.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NPE building metadata with two asbtract subclass level", "sentence_label": "title"}, {"sentence": "When using MetadataSources and adding an inheritance hierarchy with subclass policy.", "sentence_label": "current"}, {"sentence": "This work fine with a single level, but fails with two or more levels.", "sentence_label": "current"}, {"sentence": "This following exception is raised: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] cause SQL exception", "sentence_label": "title"}, {"sentence": "After upgrade Hibernate from 3.2.0 to 3.6.0, I got following exception with following SQL (converted from HQL): [CODE]", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "The same SQL can be executed in native Sybase ISQL environment without any error.", "sentence_label": "current"}, {"sentence": "The workaround using Sybase11Dilect or modify [METHOD] inside SybaseASE15Dialect to return a smaller number(e.g. 20)", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] when trying to delete THIS where [CODE]", "sentence_label": "title"}, {"sentence": "The delete fails and throws [EXCEPTION] when trying to issue delete: [CODE]", "sentence_label": "current"}, {"sentence": "I have three Entities: [CODE]", "sentence_label": "explanation"}, {"sentence": "The result is (trace): [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "@NamedQuery only works when written on an @Entity class", "sentence_label": "title"}, {"sentence": "It is extremely likely that I would want to add an @NamedQuery annotation to a session bean.", "sentence_label": "expected"}, {"sentence": "This does not currently work, since Hibernate annotations only considers @Entity classes.", "sentence_label": "current"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTIOn] in [METHOD]", "sentence_label": "title"}, {"sentence": "The following exception was thrown when I calling [METHOD]", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "Reference issue: [URL]", "sentence_label": "explanation"}, {"sentence": "Steps for reproduce the problem [LIST]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [FILE]", "sentence_label": "title"}, {"sentence": "An argument (beanType) is missing for the debug log at line 128 in JpaCompliantLifecycleStrategy: [CODE]", "sentence_label": "explanation"}, {"sentence": "This throws the following error: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Hibernate doesn't support JPMS module-info class", "sentence_label": "title"}, {"sentence": "I get this exception: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "xception is thrown by [METHOD] when executing on IBM JDK 8", "sentence_label": "title"}, {"sentence": "When using IBM JDK 8 (see Environment details), a [EXCEPTION] exception is thrown by [METHOD] when the following commands are executed to run the Hibernate ORM tests.", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "Stack Trace: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "NPE failures when executing Hibernae ORM TS against IBM JDK 8", "sentence_label": "title"}, {"sentence": "Several NPE failures are thrown when executing tests with the following command: [CODE]", "sentence_label": "current"}, {"sentence": "The following is the list of test methods currently failing due to a NPE: [LIST]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Test suite execution generates gibberish XML test reports file names", "sentence_label": "title"}, {"sentence": "When executing hibernate-orm test suite through the following command: [CODE] a lot of XML test reports are generated with gibberish file names which make their usage really error prone from automation point of view and actually not really human readable.", "sentence_label": "current"}, {"sentence": "See the following examples: [LIST]", "sentence_label": "example"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Issue with CriteriaBuilder with nested functions", "sentence_label": "title"}, {"sentence": "I've registered a Postgres  \"jsonb_extract_path_text\" function  that can extract a specific Json key from JSONB column.", "sentence_label": "explanation"}, {"sentence": "Now trying to apply count aggregate function on it, it produces [EXCEPTIOn], seems that the function schema does not support braces", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "I've tested the same implementation with EclipseLink and it did not produce any errors, so I don't believe that this goes against JPA specifications.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "transient field is not accessible", "sentence_label": "title"}, {"sentence": "I have a legacy code like this:[CODE]", "sentence_label": "explanation"}, {"sentence": "Since source field in AbstractEntity is transient it is giving error: [TRACE]", "sentence_label": "explanation"}, {"sentence": "It was working fine in Hibernate 4.3.7.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Potential [EXCEPTION] in [CLASS] while converting [EXCEPTION]", "sentence_label": "title"}, {"sentence": "In the [CLASS], the convert([EXCEPTION],String) right now returns null.", "sentence_label": "current"}, {"sentence": "The return value is thrown as an exception and may produce [EXCEPTION].", "sentence_label": "current"}, {"sentence": "This needs to be fixed and the respective exception needs to be thrown.", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Error when using Pagination", "sentence_label": "title"}, {"sentence": "I was getting an NullPointerException when using a findAll with a pageable.", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "Repository I am calling:[CODE]", "sentence_label": "explanation"}, {"sentence": "This is the core of the stack trace below: [TRACE]", "sentence_label": "explanation"}], "project_name": "hibernate.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Add Spring Boot integration to Log4j Boot", "sentence_label": "title"}, {"sentence": "The Spring Boot integration packaged by Spring for Log4j2 uses SLF4J libraries instead of the Log4j ones.", "sentence_label": "explanation"}, {"sentence": "This module should use native Log4j bridges and use native functionality wherever possible.", "sentence_label": "expected"}, {"sentence": "This should include sensible default config files ported from spring-boot-starter-log4j2.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Dynamic Subject for SMTP Appender", "sentence_label": "title"}, {"sentence": "It is annoying to have log messages sent to users via SMTP Appender with a static subject, requiring recipients to open each of possibly a vast amount of log emails in order to find out what went wrong.", "sentence_label": "current"}, {"sentence": "Users should be able to insert runtime diagnostic context information to the message text AND to the message subject as well.", "sentence_label": "expected"}, {"sentence": "While the first seems to be working with Patternlayout using the mechanism with the %X pattern based on a NDC or MDC <key> in the \"ConversionPattern\" parameter, it does NOT work with the \"Subject\" parameter with log4j (neither 1.2 nor 2.x), though some bloggers suggest it, e.g. [URL].", "sentence_label": "explanation"}, {"sentence": "See [URL] as an example where others found this also.", "sentence_label": "example"}, {"sentence": "This issue should have been fixed long ago.", "sentence_label": "useless"}, {"sentence": "I suggest to extend SMTP appender in order to be able to use %X and other Pattern conversion in the \"Subject\" parameter properly.", "sentence_label": "expected"}, {"sentence": "[URL] has already done the part for applying PatternLayout to the SMTP Appender \"Subject\".", "sentence_label": "explanation"}, {"sentence": "I didn't test if this works properly.", "sentence_label": "explanation"}, {"sentence": "Maybe this work can be included into log4j with minimal effort?", "sentence_label": "explanation"}, {"sentence": "This feature has originally been realized in LOGBACK using an MDC in Patternlayouts: [URL]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a ScriptAppenderSelector to create an Appender specified by a Script", "sentence_label": "title"}, {"sentence": "The use case is to create an OS-based dynamic configuration file.", "sentence_label": "explanation"}, {"sentence": "The script determines which appender to use (once), and instantiates that appender (once).", "sentence_label": "expected"}, {"sentence": "There is no need for one appender to delegate to another appender.", "sentence_label": "expected"}, {"sentence": "This feature helps you build your configuration dynamically, all from the configuration file, to determine which appenders to configure.", "sentence_label": "benefit"}, {"sentence": "This is different from using a RoutingAppender which creates a level of indirection and decides what to do for each log event at runtime.", "sentence_label": "explanation"}, {"sentence": "You can use multiple ScriptSelector Appenders if needed.", "sentence_label": "explanation"}, {"sentence": "For example:<CODE>", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Line-wise common suffix support for %ex pattern", "sentence_label": "title"}, {"sentence": "The LOG4J2-1838 issue provide us with the feature to print a common suffix to each line of a stack trace.", "sentence_label": "current"}, {"sentence": "But it only implemented the feature for the %rEx and %xEx pattern, not yet for the %ex pattern.", "sentence_label": "current"}, {"sentence": "This issue is intended to implement the feature for the %ex pattern.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Please facilitate subclassing Logger and LoggerContext (in org.apache.logging.log4j.core)", "sentence_label": "title"}, {"sentence": "I would like to create a custom logger, while reusing the <FILE> functionality.", "sentence_label": "expected"}, {"sentence": "The following two changes would make subclassing possible:<LIST>", "sentence_label": "explanation"}, {"sentence": "My use case is that I want to create an asynchronous Logger for low latency logging.", "sentence_label": "explanation"}, {"sentence": "This custom logger hands off control to a separate thread as early as possible.", "sentence_label": "explanation"}, {"sentence": "In my case, AsynchAppender is not a good match for my requirements, as with that approach (a) the logging call still needs to flow down the hierarchy to the appender, doing synchronization and creating objects at various points on the way, and (b) when serializing the LogEvent, the getSource() method is always called, which is expensive.", "sentence_label": "drawback"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for appending common suffix to each line of throwable stack trace", "sentence_label": "title"}, {"sentence": "Add support for appending common suffix to each line of throwable stack trace.", "sentence_label": "expected"}, {"sentence": "The suffix can be configured by patterns just like patterns used elsewhere.", "sentence_label": "explanation"}, {"sentence": "For example, pattern %xEx{suffix(- %mdc{key})} will append a string generated by pattern - and %mdc{key}.", "sentence_label": "example"}, {"sentence": "But patterns that handles throwable will be automatically ignored, because they will make the rendered result confusing.", "sentence_label": "explanation"}, {"sentence": "So pattern %xEx{suffix(- %rEx%mdc{key})} has the same effect with %xEx{suffix(- %mdc{key})}, as if the nested %rEx pattern has never appeared.", "sentence_label": "explanation"}, {"sentence": "Following is an example of the with such suffix: [CODE]", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add StatusLoggerRule to allow unit tests to set a status level", "sentence_label": "title"}, {"sentence": "In unit tests that do not use a configuration file, it would be useful to have a JUnit rule that allows the default status logger level to be set.", "sentence_label": "expected"}, {"sentence": "For example, some tests are for error scenarios that spew out a lot of status messages that are expected errors and make the unit test output hard to interpret.", "sentence_label": "example"}, {"sentence": "In such tests, this rule could be used to set the level to FATAL or OFF.", "sentence_label": "benefit"}, {"sentence": "This could also be used for debugging purposes.", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for java.util.concurrent.LinkedTransferQueue to AsyncAppender", "sentence_label": "title"}, {"sentence": "Add support for the Java 1.7+ class LinkedTransferQueue as an alternative to using ArrayBlockingQueue.", "sentence_label": "expected"}, {"sentence": "In addition, this class provides the tryTransfer() method which is faster than using offer(), so add support for using that.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow one of a number of patterns to be used in PatternLayout", "sentence_label": "title"}, {"sentence": "It is desirable to be able to format messages using different patterns based on attributes of the LogEvent.", "sentence_label": "expected"}, {"sentence": "For example, it would be useful to format events with the FLOW marker differently than normal events.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide access to config properties in LoggerConfig", "sentence_label": "title"}, {"sentence": "Custom Loggers that want to support configuration properties when creating custom LogEvent objects currently have no easy way to access these configuration Property objects.", "sentence_label": "current"}, {"sentence": "The configuration Property map in LoggerConfig is private.", "sentence_label": "current"}, {"sentence": "Please provide an accessor method that returns a (read-only) view of this Property map.", "sentence_label": "expected"}, {"sentence": "proposal: add below method to <PATH>: [CODE]", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow Builders to be completely generic", "sentence_label": "title"}, {"sentence": "Allow Builders to be completely generic.", "sentence_label": "expected"}, {"sentence": "This is not just supporting Builder<T>, which works in 2.6.2, but to allow declarations like Builder<B extends Builder<B>> combined with setters that return B.", "sentence_label": "explanation"}, {"sentence": "I have a patch for this", "sentence_label": "useless"}, {"sentence": "The next step (and ticket) will be to allow to use a Builder that extends another Builder.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add lookup for JVM arguments", "sentence_label": "title"}, {"sentence": "Access JVM input properties with the prefix jmx-input by index or name,", "sentence_label": "expected"}, {"sentence": "like main arguments for LOG4J2-771.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add ThreadContextMap.putAll(Map<String, String>)", "sentence_label": "title"}, {"sentence": "Add API [CODE]", "sentence_label": "expected"}, {"sentence": "My immediate goal is to be able to build a JUnit Rule to save and restore the thread context around each unit test method and/or a given class.", "sentence_label": "expected"}, {"sentence": "See LOG4J2-1517<LINK>.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Please provide means to disable NDC functionality on a global level.", "sentence_label": "title"}, {"sentence": "Disabling NDC evaluation can have drastic effects on event size while sending them over the wire or dumping them to disk.", "sentence_label": "current"}, {"sentence": "When disabled, all calls to NDC-related methods will instead call NOP implementations,", "sentence_label": "current"}, {"sentence": "for example, no ThreadLocals would be used at all.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add optional support for Conversant DisruptorBlockingQueue in AsyncAppender", "sentence_label": "title"}, {"sentence": "Conversant Disruptor works as an implementation of BlockingQueue that is much faster than ArrayBlockingQueue.", "sentence_label": "benefit"}, {"sentence": "I did some benchmarks earlier and found it to be a bit faster:", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Configure RandomAccessFileAppender buffer size", "sentence_label": "title"}, {"sentence": "Add feature for Appenders to support buffer, which will store log in to memory(app/system) and write in to file when it reaches buffer size provided.", "sentence_label": "expected"}, {"sentence": "this is possible?", "sentence_label": "useless"}, {"sentence": "If this feature is already available, could you please provide me reference for it?", "sentence_label": "useless"}, {"sentence": "Thanks in advance.", "sentence_label": "useless"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add converters and validators related to hostnames and ports", "sentence_label": "title"}, {"sentence": "Add TypeConverter implementations for InetAddress, and add a constraint validator for a valid hostname.", "sentence_label": "expected"}, {"sentence": "This would be useful for plugins such as a Cassandra appender (LOG4J2-1730).", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "New Appender for Apache Kafka", "sentence_label": "title"}, {"sentence": "It would be useful to have an Appender which sends log events to an Apache Kafka topic.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add TLS support to SyslogAppender", "sentence_label": "title"}, {"sentence": "Currently, there is no TLS support in SyslogAppender.", "sentence_label": "current"}, {"sentence": "It would be very nice if one could send encrypted syslog messages to syslog daemons.", "sentence_label": "expected"}, {"sentence": "I think the use cases are obvious: you want to protect your syslog messages against masquerade, modification and disclosure.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "TCP and UDP socket servers should be able to handle JSON log events", "sentence_label": "title"}, {"sentence": "TCP and UDP socket servers should be able to handle JSON log events", "sentence_label": "expected"}, {"sentence": "The following will implement the conversion: [CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Please provide means to disable MDC functionality on a global level.", "sentence_label": "title"}, {"sentence": "Disabling MDC evaluation can have drastic effects on event size while sending them over the wire or dumping them to disk.", "sentence_label": "current"}, {"sentence": "When disabled, all calls to MDC-related methods will instead call NOP implementations,", "sentence_label": "current"}, {"sentence": "for example, no ThreadLocals would be used at all.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a way to route messages based on the %marker in Layout for RoutingAppender", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "It seems there's no way to route messages based on the Marker in the RoutingAppender.", "sentence_label": "current"}, {"sentence": "The \"%marker\" is not part of the Layout.", "sentence_label": "explanation"}, {"sentence": "When using SLF4J, since it's a core feature of the facade, this would help greatly if it was possible to route messages based on the Marker.", "sentence_label": "benefit"}, {"sentence": "Main StackOverFlow question (answered) : [URL]", "sentence_label": "example"}, {"sentence": "Workaround StackOverFlow question (answered) : [URL]", "sentence_label": "example"}, {"sentence": "Thank you", "sentence_label": "useless"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Introduce interfaces IndexedStringMap and IndexedReadOnlyStringMap", "sentence_label": "title"}, {"sentence": "This ticket proposes to introduce a public interface that imposes a total ordering over the keys of a (ReadOnly)StringMap.", "sentence_label": "expected"}, {"sentence": "This interface views all key-value pairs as a sequence ordered by key, and allows keys and values to be accessed by their index in the sequence.", "sentence_label": "explanation"}, {"sentence": "The intention is to let SortedArrayStringMap implement these interfaces.", "sentence_label": "explanation"}, {"sentence": "It already implements the necessary methods; the visibility of these methods will change from package-protected to public.", "sentence_label": "explanation"}, {"sentence": "These interfaces help reduce log4j's dependency on the JDK Map interface: the JDK Map interface does not provide a garbage-free way to iterate over all its keys or key-value pairs.", "sentence_label": "benefit"}, {"sentence": "For example, these interfaces can be used to make MapFilter and its subclasses garbage-free, and reduce allocation of temporary objects in MapMessage and subclasses.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add MessageFactory that reuses a cached Message instance", "sentence_label": "title"}, {"sentence": "As discussed in LOG4J2-1270, all current MessageFactory implementations create new temporary Message objects.", "sentence_label": "current"}, {"sentence": "A GC-free configuration needs a different MessageFactory that reuses Message instances.", "sentence_label": "expected"}, {"sentence": "When Messages are being reused, async logging components need to be aware of this and ensure the Message content (rather than the Message instance itself) is passed to the background thread.", "sentence_label": "explanation"}, {"sentence": "However, Messages that are not reusable should be passed to the background thread unchanged.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Stream-Interface for Loggers", "sentence_label": "title"}, {"sentence": "I would like to have method (or class) to use a logger as a PrintStream", "sentence_label": "expected"}, {"sentence": "like for example: <CODE> or maybe like this <LINK>", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "New RewritePolicy for changing level of a log event", "sentence_label": "title"}, {"sentence": "It would be useful to have a RewritePolicy for changing the level of a log event.", "sentence_label": "expected"}, {"sentence": "Some 3rd party libraries log stuff on wrong level, and I would like to be able to translate it.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Provide enhanced logger filtering support.", "sentence_label": "title"}, {"sentence": "We wrote our own logging framework primarily because log4j didn't provide some of the features we needed.", "sentence_label": "current"}, {"sentence": "Our software runs on behalf of many companies, products and users all in the same JVM.", "sentence_label": "explanation"}, {"sentence": "We have a requirement to be able to enable logging based on some of these factors.", "sentence_label": "expected"}, {"sentence": "For example, we might want to enable debug logging only for a specific company or even a specific user.", "sentence_label": "example"}, {"sentence": "All our requests store attributes, such as the companyId, product name and userid in the MDC.", "sentence_label": "explanation"}, {"sentence": "So the real requirement here is to be able to filter log records early based on more information than just the log level.", "sentence_label": "expected"}, {"sentence": "For example, our requirement could be met by a filter that could be configured to associate a log level with a company id.", "sentence_label": "example"}, {"sentence": "Then when debug is called a check would first be done to see if debug was enabled for that company id and then whether debug was enabled for that logger.", "sentence_label": "explanation"}, {"sentence": "These checks cannot be done as filters on Appenders as the performance of the system is dramatically impacted as isDebugLogging really needs to return false for all company ids other than the one that is enabled.", "sentence_label": "explanation"}, {"sentence": "This feature is similar to LogBack's TurboFilter, except I would like it implemented differently.", "sentence_label": "example"}, {"sentence": "I would recommend that the filter be specified globally but referenced on each logger to which it applies, much as the specification of Appenders is done.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "JNDI Lookup plugin support", "sentence_label": "title"}, {"sentence": "Currently, Lookup plugins don't support JNDI resources.", "sentence_label": "current"}, {"sentence": "It would be really convenient to support JNDI resource lookup in the configuration.", "sentence_label": "expected"}, {"sentence": "One use case with JNDI lookup plugin is as follows:", "sentence_label": "explanation"}, {"sentence": "I'd like to use RoutingAppender to put all the logs from the same web application context in a log file (a log file per web application context).", "sentence_label": "explanation"}, {"sentence": "And, I want to use JNDI resources look up to determine the target route (similarly to JNDI context selector of logback).", "sentence_label": "explanation"}, {"sentence": "Determining the target route by JNDI lookup can be advantageous because we don't have to add any code to set properties for the thread context and JNDI lookup should always work even in a separate thread without copying thread context variables.", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a logformat token for nanotime", "sentence_label": "title"}, {"sentence": "Add a token in the log format specifier to output the current value of [CODE].", "sentence_label": "expected"}, {"sentence": "We are currently adding the nanotime value to our log messages manually, which we find very useful for troubleshooting unexpected latency, and as a quick-and-dirty data source to feed into performance analysis tools.", "sentence_label": "benefit"}, {"sentence": "It would be very nice if Log4j could do this for us.", "sentence_label": "expected"}, {"sentence": "It would also be nice to have this in the log format specified, so we can turn it on/off at runtime by editing the Log4j config file.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Better control over timestamp", "sentence_label": "title"}, {"sentence": "For apps which require very accurate event times, the timestamp must be provided by the app.", "sentence_label": "explanation"}, {"sentence": "In log4j 1.2 it is assigned when the event is created, which is the time the event is appended.", "sentence_label": "current"}, {"sentence": "This could be many milliseconds after the actual generation of the event.", "sentence_label": "current"}, {"sentence": "This also gives the app the ability to collect event milestones and then choose at the end of the processing whether or not to have them sent to an appender and still control the timestamp.", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow RollingFileAppender to do Rolling with a Date Pattern or DailyRollingFileAppender to have Max Backup Parameter", "sentence_label": "title"}, {"sentence": "It would be nice to be able roll files with a date pattern and not just an index while still being able to specify the max file size and number of copies to keep.", "sentence_label": "expected"}, {"sentence": "Alternatively it would be good to be able to us the DailyRollingFileAppender with a max copies to keep parameter", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Scala wrapper for Log4j 2 API", "sentence_label": "title"}, {"sentence": "Scala wrapper for Log4j 2 API which makes use of Scala features like macros and string interpolation.", "sentence_label": "explanation"}, {"sentence": "Inspired from Typesafe's Scala Logging but should use Log4j 2 directly and expose its features.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "API change: add methods for logging CharSequences (was: Provide support for CharSequence parameters for low and zero-GC applications)", "sentence_label": "title"}, {"sentence": "Currently, the preferred way of logging character sequences in log4j 2 is by passing in tokens of type <CODE>.", "sentence_label": "explanation"}, {"sentence": "It would be very beneficial if the API could provide methods that take <CODE> tokens.", "sentence_label": "benefit"}, {"sentence": "This would allow high performance zero or low-GC applications to re-use the existing mutable structures implementing <CODE> for continuous logging without new objects being created.", "sentence_label": "benefit"}, {"sentence": "A high-performance implementation of the logger would be expected to copy out the contents of a single or multiple instances of <CODE> so that they could be re-used in the subsequent logging call.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[PatternLayout] Add an ANSI option to %xThrowable", "sentence_label": "title"}, {"sentence": "See screenshot attachments.", "sentence_label": "example"}, {"sentence": "The idea is to print out exceptions to the console using colors to make some information more obvious and liven things up.", "sentence_label": "expected"}, {"sentence": "The current style choices are arbitrary as are the style names Spock and Kirk.", "sentence_label": "current"}, {"sentence": "This is currently in branch StyledXException.", "sentence_label": "current"}, {"sentence": "A positive side effect of this code is that extended exceptions are rendered on a StringBuilder so less garbage is generated.", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for embedding the Flume agent into the Flume Appender.", "sentence_label": "title"}, {"sentence": "Apache Flume provides guaranteed delivery to the target log repository.", "sentence_label": "explanation"}, {"sentence": "Embedding the agent into the Appender means control will be returned to the application as soon as possible.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Specify the SocketAppender connect timeout value as part of the configuration", "sentence_label": "title"}, {"sentence": "I was testing the use case of taking the logserver down for maintenance and noticed that the SyslogAppender doesn't provide a way to override the default socket timeout.", "sentence_label": "current"}, {"sentence": "This resulted in my application noticeably hanging on startup when waiting for the socket to timeout.", "sentence_label": "drawback"}, {"sentence": "As a short term fix I created an extension largely based on the SyslogAppender that includes the connection timeout as a configurable parameter (timeoutMillis).", "sentence_label": "explanation"}, {"sentence": "I'd like something like this to be added in a future revision so I don't have to maintain this extension.", "sentence_label": "expected"}, {"sentence": "Here's my version:", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Date based file appender", "sentence_label": "title"}, {"sentence": "I'd like to reintroduce the option of logging to a file that has the current date in it.", "sentence_label": "expected"}, {"sentence": "For example, when the app starts up, it will start logging to <FILE>.", "sentence_label": "example"}, {"sentence": "At midnight, it starts logging to a new file named <FILE>.", "sentence_label": "explanation"}, {"sentence": "Log4j2's RollingFileAppender does not support this.", "sentence_label": "current"}, {"sentence": "In log4j2 the file appender will log to one file with a static file name, and then the content is moved over to another file.", "sentence_label": "current"}, {"sentence": "This used to be a feature in log4j 1.3, when using extras.", "sentence_label": "explanation"}, {"sentence": "I would configure it like this:", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support composite configurations", "sentence_label": "title"}, {"sentence": "Support was added to XMLConfiguration to allow XIncludes in the XML files.", "sentence_label": "current"}, {"sentence": "While this can be useful it does not allow for the use case where someone wants a default configuration and then a custom configuration to be merged with it.", "sentence_label": "drawback"}, {"sentence": "I am proposing creating a CompositeConfiguration class that accepts a comma separated list of configuration files.", "sentence_label": "expected"}, {"sentence": "It would then use the Configuration factories to create the appropriate Configuration classes for each of the underlying files.", "sentence_label": "explanation"}, {"sentence": "It would then merge the Node hierarchies created by each into a single tree and then finally construct the actual configuration Objects from that tree.", "sentence_label": "explanation"}, {"sentence": "There are a few issues with this -", "sentence_label": "explanation"}, {"sentence": "for example each configuration can specify debug and verbose attributes, duplicate property settings, handling duplicate Appender names, etc.", "sentence_label": "example"}, {"sentence": "Most of these should be fairly easy to resolve.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "The Logging API should support a Message object", "sentence_label": "title"}, {"sentence": "RFC 5424 defines StructuredData.", "sentence_label": "current"}, {"sentence": "While implementing this for Logback it was found that making SLF4J support a Message interface and then providing Message definitions for a \"SimpleMessage\" (message text only), \"ParamaterizedMessage\" (message plus substitution parameters) and StructuredDataMessage (a message that allows the formatted message to conform to RFC 5424) allows the API to be easily extendable with new Message types and makes it more efficient to pass them through the logging implementation.", "sentence_label": "current"}, {"sentence": "Log4j 2.0 should incorporate this into both the API and the implementation.", "sentence_label": "expected"}, {"sentence": "This will allow for easy implementation of a SyslogAppender that conforms with the new Syslog specification", "sentence_label": "benefit"}, {"sentence": "see <LINK>", "sentence_label": "example"}, {"sentence": "as well as using the RFC 5424 as a standard layout that can be used to transport messages via JMS or other protocols.", "sentence_label": "benefit"}, {"sentence": "See <LINK> and <LINK> for examples of how I accomplished this for slf4j and logback.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow plugins outside of Log4j 2 core to be preloaded.", "sentence_label": "title"}, {"sentence": "Loading plugins in Log4j 2 core is fast and easy because they have been added to the preload map.", "sentence_label": "current"}, {"sentence": "However, the FlumeNG appender and components in other packages must be loaded at runtime.", "sentence_label": "current"}, {"sentence": "This enhancement should allow any component to contain a preload map and all of them should be loaded together.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support existing ability to modify any of an event's fields", "sentence_label": "title"}, {"sentence": "RewriteAppender and RewritePolicy in log4j 1.2 give appender writers the ability to change events before they are sent to appenders.", "sentence_label": "explanation"}, {"sentence": "Two examples:", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add optional support for JCTools in AsyncAppender", "sentence_label": "title"}, {"sentence": "Spawning from the discussion in LOG4J2-1430, this feature request is to add support for using JCTools MPSC bounded lock-free queue in AsyncAppender.", "sentence_label": "expected"}, {"sentence": "As the work for this issue stems from the work in 1430, the code is all contained in the same branch.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add Cassandra (NoSQL) appender", "sentence_label": "title"}, {"sentence": "Add an appender for Cassandra.", "sentence_label": "expected"}, {"sentence": "This should be able to follow the same pattern as the other NoSQL appenders, or possibly the JDBC style appenders as Cassandra does normally use a SQL-like language called CQL.", "sentence_label": "explanation"}, {"sentence": "There are numerous Java drivers available for Cassandra: [URL]", "sentence_label": "example"}, {"sentence": "The main driver I'm familiar with is the Datastax driver as it's the one used by spring-data, but it may be worth comparing the various drivers to see if any of them would fit better into the architecture of log4j already.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Serialize configuration into a log4j2.xml file", "sentence_label": "title"}, {"sentence": "This would be useful for e.g. converting from Log4j 1 to Log4j 2 config.", "sentence_label": "benefit"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a TypeConverter for UUID", "sentence_label": "title"}, {"sentence": "Add a TypeConverter for UUID.", "sentence_label": "expected"}, {"sentence": "This will be useful in custom appenders that wish to convert a string into a native UUID", "sentence_label": "benefit"}, {"sentence": "for example, the UUID column type in Cassandra or Postgres", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Automated testing to verify no temporary objects allocated in gc-free configuration", "sentence_label": "title"}, {"sentence": "LOG4J2-1270 proposes changes to support gc-free behaviour (no allocation of temporary objects) in certain configurations.", "sentence_label": "explanation"}, {"sentence": "This ticket is about verifying that Log4j does not allocate in these configurations.", "sentence_label": "explanation"}, {"sentence": "It is not always obvious that some code creates objects, so it is easy for regressions to creep in during maintenance code changes.", "sentence_label": "explanation"}, {"sentence": "Ideally this verification is packaged so it can run automatically during the test phase of the build,", "sentence_label": "expected"}, {"sentence": "for example in a JUnit test.", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "WebLookup", "sentence_label": "title"}, {"sentence": "Add a \"web\" lookup plugin for resolving a webapp's root directory.", "sentence_label": "expected"}, {"sentence": "Investigate whether it can be included in BaseConfiguration's list of hard-wired plugins.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow shutdown hook registration handling to be customizable", "sentence_label": "title"}, {"sentence": "Besides the ability to enable or disable the shutdown hook, there should be a ShutdownRegistrationStrategy interface for customizing how to register a shutdown callback in LoggerContext.", "sentence_label": "expected"}, {"sentence": "This will allow application servers to specify their own class that can register the shutdown callback for a LoggerContext.", "sentence_label": "explanation"}, {"sentence": "To make this really flexible, Log4jContextFactory should be the class that creates the ShutdownRegistrationStrategy.", "sentence_label": "expected"}, {"sentence": "The basic idea behind this feature is already implemented.", "sentence_label": "explanation"}, {"sentence": "I'd like to make this API a bit better before 2.1 so we aren't stuck with a useless interface later on.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create a YAML layout", "sentence_label": "title"}, {"sentence": "Create a YAML layout;", "sentence_label": "expected"}, {"sentence": "this will reuse what we already have for XML and JSON through Jackson.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create SMTPAppender", "sentence_label": "title"}, {"sentence": "Somebody in twitterverse reverted back to log4j 1.2 because he missed the SMTP Appender", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Update Logger Wrapper Generator tool for new API methods", "sentence_label": "title"}, {"sentence": "The Logger interface has additional methods that accept a CharSequence (LOG4J2-1326) and with unrolled varargs (LOG4J2-1278).", "sentence_label": "explanation"}, {"sentence": "The Generate tool should generate code for these methods.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "JMX Client GUI should dynamically update when LoggerContext MBeans are registered/unregistered in MBean server", "sentence_label": "title"}, {"sentence": "Currently the Log4J2 JMX Client GUI will take a snapshot of the MBean server state when the client GUI is started.", "sentence_label": "current"}, {"sentence": "The GUI displays a tab for each LoggerContextAdmin MBean that existed at startup time.", "sentence_label": "current"}, {"sentence": "This is a static snapshot: these tabs do not change if the LoggerContext MBean is unregistered while the GUI is active.", "sentence_label": "current"}, {"sentence": "Also, if additional LoggerContext MBeans are registered after the GUI was started, the GUI will not be \"aware\" of this and will not display new tabs for the added LoggerContext.", "sentence_label": "current"}, {"sentence": "This ticket is a request to dynamically update the GUI in response to LoggerContext MBeans being registered/unregistered after the GUI was started.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for JSR 223 scripts in filters and the PatternSelector.", "sentence_label": "title"}, {"sentence": "Sometimes more flexibility is required in filtering and in selecting a pattern for the PatternLayout.", "sentence_label": "expected"}, {"sentence": "This enhancement provides support for JSR 223 scripts.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Ability to change the fileName dynamically in RollingFileAppender", "sentence_label": "title"}, {"sentence": "Right now RollingFileAppender rolls over the current file with fileName to the one generated by FilePattern.", "sentence_label": "current"}, {"sentence": "However, logging always continues in the same fileName for example fileName once created cannot be changed.", "sentence_label": "current"}, {"sentence": "Property Substitution is only once during initialization, fileName is never changed after RollingFileManager is initialized.", "sentence_label": "current"}, {"sentence": "The RollingFileManager is very tightly tied up to the fileName attribute.", "sentence_label": "current"}, {"sentence": "Consider that I want to name my log files like this using RollingFileAppender:", "sentence_label": "explanation"}, {"sentence": "There is no good way to achieve this, because even after rolling over the file, the fileName would still remain the same.", "sentence_label": "drawback"}, {"sentence": "If I initialized my fileName using ${date:yyyy-MM-dd}, date would be substituted only once during initialization and it would never change, always continue to log in the same log file (until I restart my application).", "sentence_label": "drawback"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create a Layout and SyslogAppender that support RFC 5424", "sentence_label": "title"}, {"sentence": "RFC 5424 ([URL]) was made a standard in March of 2009.", "sentence_label": "explanation"}, {"sentence": "Log4j 2.0 should provide a Layout and SyslogAppender that implements this standard.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add JSON encoding support to EncodingPatternConverter %encode{}.", "sentence_label": "title"}, {"sentence": "The existing implementation of EncodingPatternConverter is for escaping output for HTML specifically.", "sentence_label": "explanation"}, {"sentence": "This pattern converter should be extended to allow multiple types of encoding.", "sentence_label": "expected"}, {"sentence": "The existing HTML behavior should be the default, but an optional second parameter should be added to allow specifying a different format to encode for.", "sentence_label": "expected"}, {"sentence": "For JSON, encoding would require the following:", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for filtering input in TcpSocketServer and UdpSocketServer", "sentence_label": "title"}, {"sentence": "It is best practice to add a configurable class filter to ObjectInputStream usage when input comes from untrusted sources.", "sentence_label": "expected"}, {"sentence": "Add this feature to TcpSocketServer and UdpSocketServer along with sensible default settings.", "sentence_label": "expected"}, {"sentence": "This feature is unnecessary in JmsServer as that relies on the underlying configuration of the JMS server", "sentence_label": "explanation"}, {"sentence": "for example, ActiveMQ has a similar configuration option", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[Android] Compilation error when using log4j 2.9.0", "sentence_label": "title"}, {"sentence": "while trying to run the app with 2.9.0 we are facing the below exception.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Error using %K in pattern : MapPatternConverter cannot contain multiple static newInstance method", "sentence_label": "title"}, {"sentence": "When using a %K in a pattern, the [METHOD] is used and there is an error message: [TRACE]", "sentence_label": "current"}, {"sentence": "The control is done by [CLASS] here: [CODE]", "sentence_label": "explanation"}, {"sentence": "The class [CLASS] contains 2 newInstances message", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "RequestContextMappings should ignore private and instance fields", "sentence_label": "title"}, {"sentence": "RequestContextMappings inspects the user defined class passed as a constructor parameter, but it checks all fields, instead of just the public static ones (at least that's what I understand it should do).", "sentence_label": "current"}, {"sentence": "In Java 8 the issue is covered by catching an IllegalAccessException when accessing the field value, but in Java 11 this throws a NullPointerException for non-static fields.", "sentence_label": "explanation"}, {"sentence": "The proposed solution would be to replace clazz.getDeclaredFields() with clazz.getFields(), to obtain only the accessible public fields, and then check them to process only the static ones.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Android: Could not find class 'javax.naming.InitialContext', referenced from method org.apache.logging.log4j.core.lookup.JndiLookup.lookup", "sentence_label": "title"}, {"sentence": "Hi guys, i'm trying to use Log4J2 in an Android (19) application and it's not working.", "sentence_label": "current"}, {"sentence": "Here is the code i have and the stacktrace i obtain when running the application.", "sentence_label": "explanation"}, {"sentence": "Am i missing something or is Log4J2 not working yet in an Android environment ?", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Log4j2 Main Arguments Lookup by name doesn't work", "sentence_label": "title"}, {"sentence": "Accessing Main Arguments by using index based look up works: [PARAMS]", "sentence_label": "explanation"}, {"sentence": "Accessing Main Arguments by using name based look up doesn't work: [PARAMS]", "sentence_label": "current"}, {"sentence": "When trying to access by name it doesn't retrieve the argument but retrieves [FILE]", "sentence_label": "current"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Invalid JSON in JsonLayout", "sentence_label": "title"}, {"sentence": "Using the log4j2 JsonLayout can result in invalid JSON.", "sentence_label": "current"}, {"sentence": "Some parsers could not parse this syntax.", "sentence_label": "explanation"}, {"sentence": "The problem ist the attribute [PARAMS] from the timestamp: [CODE]", "sentence_label": "explanation"}, {"sentence": "The Attribute [PARAMS] starts with leading zeros.", "sentence_label": "explanation"}, {"sentence": "According to the JSON rfc4627 this is an invalid JSON number.", "sentence_label": "explanation"}, {"sentence": "Is it possible to correct this and remove the leading zeros?", "sentence_label": "useless"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "The log file is abnormal when configured as RollingFile", "sentence_label": "title"}, {"sentence": "After updating to the latest version, this problem still exists", "sentence_label": "explanation"}, {"sentence": "[URL]", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "StackOverflowException when server not reachable with SocketAppender", "sentence_label": "title"}, {"sentence": "SocketAppender crashes log4j with StackOverflowException when the server where the log file should be sent is not accessible.", "sentence_label": "current"}, {"sentence": "It looks like [METHOD] contains recursion.", "sentence_label": "explanation"}, {"sentence": "This also happens in 2.11.2 (even though log shows 2.11.0).", "sentence_label": "explanation"}, {"sentence": "This does not happen in 2.8.2 ( [METHOD] methods were not there in that version)", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Thread indefinitely blocked when logging a message in an interrupted thread", "sentence_label": "title"}, {"sentence": "Logging a message to the Flume appender in an interrupted thread undefinitely block the thread.", "sentence_label": "current"}, {"sentence": "The thread is blocked in an infinite loop here :[CODE]", "sentence_label": "explanation"}, {"sentence": "This test case allows to reproduce the problem", "sentence_label": "explanation"}, {"sentence": "[CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "could not load library jansi-1.8", "sentence_label": "title"}, {"sentence": "HI I get an log4j2 error I can only reproduce in conjunction with openejb.", "sentence_label": "current"}, {"sentence": "I only need to create a simple static final Logger in a class annotated @Stateless and I get the following error:[TRACE]", "sentence_label": "current"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] from AsyncLogger", "sentence_label": "title"}, {"sentence": "We've got several times following [EXCEPTION]: [TRACE]", "sentence_label": "current"}, {"sentence": "What is interesting this NPEs always preceeded by [CODE", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "uses wrong time for filename", "sentence_label": "title"}, {"sentence": "When there are both size based and time based triggering policies, if the size based policy is triggered, the file is named as if the time based policy was triggered.", "sentence_label": "current"}, {"sentence": "Example config: [CODE]", "sentence_label": "example"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Log4j2 async logger threads are locked on WAITING", "sentence_label": "title"}, {"sentence": "Recently our server stopped responding and from thread dump we found that most threads are blocked in \"WAITING (parking)\" state on logging.", "sentence_label": "current"}, {"sentence": "Any advises are welcome.", "sentence_label": "useless"}, {"sentence": "Attaching selected threads dump and [FILE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Thread crash when parameter is a null value for [PARAMS]", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "This will crash.", "sentence_label": "current"}, {"sentence": "It is not supposed to happen, but sometimes a parameter can be null unexpectedly.", "sentence_label": "explanation"}, {"sentence": "MapMessage should be \"null safe\".", "sentence_label": "expected"}, {"sentence": "[URL]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "UuidUtil array index out of bounds exception", "sentence_label": "title"}, {"sentence": "User sent me this.", "sentence_label": "useless"}, {"sentence": "No idea how to reproduce.", "sentence_label": "explanation"}, {"sentence": "[URL]", "sentence_label": "explanation"}, {"sentence": "Line 55: [CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Priority of the Event is not calculated correctly", "sentence_label": "title"}, {"sentence": "We are having a problem with the Priority of the event created by the log4j2 API.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "We are seeing the Severity is not being added when calculating the priority.", "sentence_label": "current"}, {"sentence": "We have test with another facility, and the multiplication is ok, but in every case the Severity is not added.", "sentence_label": "explanation"}, {"sentence": "Is this a known problem?", "sentence_label": "useless"}, {"sentence": "There is something wrong with our configuration?", "sentence_label": "useless"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Custom appenders no longer found with Java 11", "sentence_label": "title"}, {"sentence": "After upgrading to Java 11, the custom appenders are no longer found.", "sentence_label": "current"}, {"sentence": "The following errors are shown when running the app: [TRACE]", "sentence_label": "current"}, {"sentence": "The log4j config file can be found here: [CODE]", "sentence_label": "explanation"}, {"sentence": "and the appender here: [CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SocketAppender in UDP mode can't split messages", "sentence_label": "title"}, {"sentence": "We are using rsyslog wit udp.", "sentence_label": "explanation"}, {"sentence": "There is a problem with messages that exceed 64k size.", "sentence_label": "explanation"}, {"sentence": "The default TCP mode sends a new record when a new line symbol occurs.", "sentence_label": "current"}, {"sentence": "The UDP mode doesn't.", "sentence_label": "current"}, {"sentence": "There is no possibility in UDP to split the message in parts.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ERROR NoSql contains an invalid element or attribute \"MongoDb3\"", "sentence_label": "title"}, {"sentence": "I'm trying to setup log4j2 with mongo db in a very simple java project, but log4j keeps throwing me the following error", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}, {"sentence": "This is my current log4j2.xml: [CODE]", "sentence_label": "explanation"}, {"sentence": "And these are the dependencies I have: [CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JDBC Append should reconnect when connection is lost in [METHOD]", "sentence_label": "title"}, {"sentence": "JDBC Append should reconnect when connection is lost in [METHOD]", "sentence_label": "expected"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Package filter not working with %ex conversion pattern", "sentence_label": "title"}, {"sentence": "When using this log pattern in a RollingFile appender, the packages are not filtered out: [CODE]", "sentence_label": "current"}, {"sentence": "If instead I use: [CODE] then they are filtered out.", "sentence_label": "current"}, {"sentence": "According to the documentation both should work.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Out of Memory issue log4j2 Async Appender stops", "sentence_label": "title"}, {"sentence": "In one of the systems observed below out of memory", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] in [EXCEPTION]", "sentence_label": "title"}, {"sentence": "When exiting I always get the following exception", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Logs roll error when decrease the max count of log files", "sentence_label": "title"}, {"sentence": "When using log4j2 version 2.11.1, and the original configurations like below: [TRACE]", "sentence_label": "current"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "System property [PARAMS] with drive letter gives exception but works", "sentence_label": "title"}, {"sentence": "Setting system property [PARAMS], while working, the content is properly evaluated, first logs the following exception", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[ERROR]: [CLASS]", "sentence_label": "title"}, {"sentence": "Facing [ERROR] when using Java 11", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] when compiling plugin with Eclipse batch compiler", "sentence_label": "title"}, {"sentence": "Recently I started using log4j 2 in my project and I created some custom appenders and configuration factories using the [PARAMS] annotation.", "sentence_label": "explanation"}, {"sentence": "It all worked fine and show no errors compiling in Eclipse 4.9 and IntelliJ Idea.", "sentence_label": "current"}, {"sentence": "However, using the Eclipse batch compiler, my code fails with the following stacktrace: [TRACE]", "sentence_label": "current"}, {"sentence": "In order to reproduce this bug, I created this project with the minimal code to test my scenario.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] cannot delete folder", "sentence_label": "title"}, {"sentence": "My logs are store in daily folders, such as 2018-10-01, 2018-10-02 ... , and i only want last 5 days logs.", "sentence_label": "explanation"}, {"sentence": "Log4j2 can delete log files 5 days ago, but the folder were still there, can you delete the folders too?", "sentence_label": "current"}, {"sentence": "my config file: [CODE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "OutOfMemory: AsyncLogger Threads number increases under unknown circumstances", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "I have a strange behavior where my app goes OOM.", "sentence_label": "explanation"}, {"sentence": "when i analyse the heapdump, i find a lot of threads [CLASS] having each 37Mo memory.", "sentence_label": "current"}, {"sentence": "I saw many issues related to this behavior , most of them fixed on 2.6", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Events without attributes are not displayed", "sentence_label": "title"}, {"sentence": "If an event has no attributes, it's not displayed on the UI.", "sentence_label": "current"}, {"sentence": "This lead to some confusion where I couldn't edit or re-add an event without violating a database constraint or manually deleting the event from the catalog.", "sentence_label": "drawback"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "log4j2 lookups doesn't default to blank in case of null", "sentence_label": "title"}, {"sentence": "When we write something like below in log4j2.xml where [PARAMS], Log File will be created at [FILE]", "sentence_label": "current"}, {"sentence": "but when its not defined, file is created as [FILE] where we keep the variable intact.", "sentence_label": "current"}, {"sentence": "This might be expectation but not mentioned on website and also differs from intuition.", "sentence_label": "explanation"}, {"sentence": "I would have expected  [FILE] if logPath is not defined as system property", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "log4j-jcl cause memery leak in TomCat 8.5.24", "sentence_label": "title"}, {"sentence": "I build a skeleton Spring MVC project to test this.", "sentence_label": "explanation"}, {"sentence": "here is my whole dependencies in pom.xml:", "sentence_label": "explanation"}, {"sentence": "when undeploy or stop of the Application in TomCat,I got this: [TRACE]", "sentence_label": "current"}, {"sentence": "I also test this in Spring 4.2.0, It's the same result.", "sentence_label": "current"}, {"sentence": "I am a beginner in log4j2, Is there something I missed?", "sentence_label": "useless"}, {"sentence": "or it's indeed a bug?", "sentence_label": "useless"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "CassandraAppender does not write according to buffer size", "sentence_label": "title"}, {"sentence": "According to documentation [URL] , log should be written when bufferSize is reached.", "sentence_label": "expected"}, {"sentence": "The buffer is cleared, but the batchStatement in CassandraManager does not seem to be reset, resulting in accumulating the statements foreverer ( or until Casandra exception for batch size limit ).", "sentence_label": "current"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "error: cannot find symbol [CLASS]", "sentence_label": "title"}, {"sentence": "from: [URL]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "highlight not working anymore", "sentence_label": "title"}, {"sentence": "the ansi color support is broken since version 2.9.0 I used to setup my pattern like this: [CODE]", "sentence_label": "explanation"}, {"sentence": "but when I updated recently from 2.8.2 to version 2.11.0 it did not work anymore.", "sentence_label": "current"}, {"sentence": "I tried all versions backwards to 2.8.2 but all versions above 2.8.2 wont work with highlighting...", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Status logger write in file a line full of null", "sentence_label": "title"}, {"sentence": "Until log4j 2.10.0 version the status logger didn't write \"null\" in the file indicated in the xml configuration.", "sentence_label": "explanation"}, {"sentence": "it seems to happen when the log4j does not find the configuration in the context of the project, and takes the default configuration.", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SortedArrayStringMap does allow only filterable ObjectInputStreams", "sentence_label": "title"}, {"sentence": "When using the JPA Appender it is not anymore possible to use Hibernate.", "sentence_label": "current"}, {"sentence": "During the write process on the appender log4j2 detects a incompatible instance of ObjectInputStream.", "sentence_label": "explanation"}, {"sentence": "The root of the problem seems to be this change.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[CLASS] got wrong file name", "sentence_label": "title"}, {"sentence": "stack: [TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Upon shutdown async logger fails to drain the log lines", "sentence_label": "title"}, {"sentence": "I am using async logger configuration with [PARAMS] set [PARAMS] with a console appender.", "sentence_label": "explanation"}, {"sentence": "The application is run using exec.", "sentence_label": "explanation"}, {"sentence": "Application will spit out log lines and terminates gracefully.", "sentence_label": "explanation"}, {"sentence": "After upgrading to new release of log4j2 v2.10 (from 2.6) not all log lines are visible on the console.", "sentence_label": "current"}, {"sentence": "Looks like log lines are not flushed on application shutdown.", "sentence_label": "current"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "PatternLayout not working properly", "sentence_label": "title"}, {"sentence": "In PatternLayout log not worling for %M (%method) and %L (%line)", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Log4j2 Causing Fatal Exception in Android Project", "sentence_label": "title"}, {"sentence": "Moving a Java project with Maven over to an Android project with Gradle in IntelliJ and everything made the transition smoothly except for Log4j2.", "sentence_label": "explanation"}, {"sentence": "This error message fires whenever the program tries to create a Logger", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Chainsaw download link broken", "sentence_label": "title"}, {"sentence": "At [URL]", "sentence_label": "explanation"}, {"sentence": "Click Download link for more information.", "sentence_label": "explanation"}, {"sentence": "Link does not lead to [URL]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] Incorrect documentation", "sentence_label": "title"}, {"sentence": "The documentation for [METHOD] incorrectly says it logs at [PARAMS] when it actually logs at [PARAMS].", "sentence_label": "current"}, {"sentence": "[URL]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Logger does not print message in case if stacktrace is empty for Throwable", "sentence_label": "title"}, {"sentence": "There are user defined exceptions which does not print stack trace for security purposes.", "sentence_label": "explanation"}, {"sentence": "In this case, Logger render method will return empty stack trace.", "sentence_label": "explanation"}, {"sentence": "We can return the Throwable message if stacktrace is empty while logging the exception.", "sentence_label": "expected"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Deadlock bug", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JDK 9 Location info wrong for Solaris Sparc due to JVM bug", "sentence_label": "title"}, {"sentence": "The StackWalker used to obtain location info when running under Java 9 has a bug on Solaris Sparc.", "sentence_label": "current"}, {"sentence": "the line number returned by it is always start of the method, not the actual line number of the stack frame.", "sentence_label": "current"}, {"sentence": "For reference: [URL] and [URL]", "sentence_label": "explanation"}, {"sentence": "This issue here is to document the problem for people running into it.", "sentence_label": "explanation"}, {"sentence": "I think there's not much Log4J2 can do to work around it.", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot be configured for Android because of dependency on [CLASS] classes", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Scala API does not work with IBM Java 8 and Scala 2.12", "sentence_label": "title"}, {"sentence": "When compiling the API using IBM Java 8 on Scala 2.12 or 2.13.0-M1, the compiler crashes.", "sentence_label": "current"}, {"sentence": "This appears to be a known issue: [URL]", "sentence_label": "explanation"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "On shutdown, JDBC appender does not write buffered log messages to failover appender if database is unavailable", "sentence_label": "title"}, {"sentence": "With the following sample config: [CODE]", "sentence_label": "explanation"}, {"sentence": "If the database has failed and the application is shut down, the log messages are not written to the failover appender.", "sentence_label": "current"}], "project_name": "log4j.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Add support for Last.fm radio streaming", "sentence_label": "title"}, {"sentence": "It would be nice if Mopidy supported <FILE-RM> radio streaming,", "sentence_label": "expected"}, {"sentence": "for example through MPD commands like this: <COMMAND>", "sentence_label": "example"}, {"sentence": "This is already supported by the MPoD client.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for Spotify playlist management", "sentence_label": "title"}, {"sentence": "It would be nice to be able to manage Spotify playlists through Mopidy.", "sentence_label": "expected"}, {"sentence": "for example, create/rename/remove playlists, and add/move/remove tracks in playlists.", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for virtual directories in the library", "sentence_label": "title"}, {"sentence": "It would be nice to have virtual directories in the library that does not reflect directories on some file system, but exposes various collections of tracks from the backends.", "sentence_label": "expected"}, {"sentence": "Examples include:", "sentence_label": "example"}, {"sentence": "Possibly, each backend should be given its own top level namespace it could expose virtual directories within.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add an alternative storage for caching meta data", "sentence_label": "title"}, {"sentence": "The local backend could possibly benefit from having an alternative to the tag cache file for caching track meta data.", "sentence_label": "benefit"}, {"sentence": "A suggestion is using Sqlite.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add more powerful search capabilities", "sentence_label": "title"}, {"sentence": "Currently, the search capabilities in the local backend is quite naive and simplistic.", "sentence_label": "current"}, {"sentence": "It would be nice to have more powerful search capabilities, maybe using an existing search solution.", "sentence_label": "expected"}, {"sentence": "An existing search solutions that seems interesting is Whoosh which is a pure Python search engine, available under the Apache 2 license, both from PyPI and as a Debian package.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "WiMP / Tidal support", "sentence_label": "title"}, {"sentence": "It would be nice to have support for the Norwegian music streaming service, WiMP.", "sentence_label": "expected"}, {"sentence": "They currently have no public API or library, unlike Spotify, but according to tweets from their official Twitter account they do have private APIs that it is possible to gain access to.", "sentence_label": "current"}, {"sentence": "I guess they won't like their private APIs to be used in an open source project, but maybe we could get access and develop the backend as closed source, only to publish it once they make their API public?", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a DLNA Media Server (DMS) frontend", "sentence_label": "title"}, {"sentence": "We could expose the Mopidy library to DLNA players/renderers if we add a DLNA Media Server (DMS) frontend.", "sentence_label": "expected"}, {"sentence": "This would allow modern TVs and other DLNA compatible players to play music served by Mopidy.", "sentence_label": "benefit"}, {"sentence": "Coherence is a Python implementation of DLNA, and may help us implementing this.", "sentence_label": "explanation"}, {"sentence": "Note: This issue does not concern Mopidy playing music stored on other DLNA Media Servers, like a NAS on your local network.", "sentence_label": "explanation"}, {"sentence": "For that feature, see [URL].", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for XMMS2 clients", "sentence_label": "title"}, {"sentence": "If we add a frontend implementing the XMMS2 IPC protocol, then XMMS2 compatible clients would be able to control Mopidy", "sentence_label": "explanation"}, {"sentence": "just like MPD clients.", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for controlling Mopidy through LIRC", "sentence_label": "title"}, {"sentence": "If we add a frontend for controlling Mopidy through LIRC, one would be able to control Mopidy using infrared remote controls,", "sentence_label": "expected"}, {"sentence": "like the one you got for your TV.", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "LIRC mixer to control amplifiers remotely", "sentence_label": "title"}, {"sentence": "With a LIRC mixer, Mopidy would be able to control arbitrary amplifiers remotely.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "RAOP audio output", "sentence_label": "title"}, {"sentence": "If Mopidy supported RAOP audio streaming, we could stream audio to Apple's AirPort Express.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support Spotify playlist folders", "sentence_label": "title"}, {"sentence": "In Spotify you can organize playlists into folders, but Mopidy does not support this structure.", "sentence_label": "current"}, {"sentence": "Even though MPD does not support playlist folders, our backend API should expose the folder structure, and let it be up to the frontends to either flatten it or show it as is.", "sentence_label": "expected"}, {"sentence": "The MPD frontend could for example prefix playlist names with the playlist's location in the folder hierarchy.", "sentence_label": "example"}, {"sentence": "This requires support for playlist folders in pyspotify.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "FUSE frontend", "sentence_label": "title"}, {"sentence": "It would be nice with a FUSE frontend to expose objects as files accessible through the file system.", "sentence_label": "expected"}, {"sentence": "GithubFS example: [URL]", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Daemonize + logfile options", "sentence_label": "title"}, {"sentence": "Would be nice to be able to daemonize mopidy and have it redirect output to a designated file that can be rotated using the SIGHUP signal (new logfile).", "sentence_label": "expected"}, {"sentence": "I now use start-stop-daemon in combination with a shell script that redirects stdout and stderr to <FILE-LOG>.", "sentence_label": "explanation"}, {"sentence": "Not a pretty solution, but it works.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "MPD command: Implement 'listallinfo'", "sentence_label": "title"}, {"sentence": "I'm using the mpd frontend to communicate with mopidy but I've found a fundamental difference between the way mopidy responds to a command when compared with mpd.", "sentence_label": "explanation"}, {"sentence": "The command is listallinfo", "sentence_label": "explanation"}, {"sentence": "When used with no arguments in mpd, this returns a complete list of every track, with all its tags, that is currently in the tag cache.", "sentence_label": "current"}, {"sentence": "When used this way with mopidy I get <COMMAND> incorrect arguments.", "sentence_label": "current"}, {"sentence": "I used mopidy-scan<COMMAND> to create the tag cache, I'm not sure if this is relevant.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Stop using appsrc for spotify playback.", "sentence_label": "title"}, {"sentence": "All playback should be done via gstreamer elements that support the uri interface gstreamer supports.", "sentence_label": "expected"}, {"sentence": "This would greatly simplify a lot of issues as we could fall back to simply always passing the uri to the uridecodebin as is instead of doing funny things like using an appsrc for spotify.", "sentence_label": "benefit"}, {"sentence": "I have more thoughts about this and the recent comments in #40<html-link> and #38<html-link> fit into this.", "sentence_label": "explanation"}, {"sentence": "Major hurdle right now is that although I know how to write gstreamer elements in python (and C for that matter), it is not yet clear how to implement the URI interface via the python bindings.", "sentence_label": "explanation"}, {"sentence": "This might just be a gobject issue more than a gstreamer one, but I'm still looking.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support playlists with identical names", "sentence_label": "title"}, {"sentence": "Spotify supports playlists with identical names.", "sentence_label": "explanation"}, {"sentence": "In our MPD frontend we should probably append \"[1]\", \"[2]\", etc.", "sentence_label": "expected"}, {"sentence": "as the MPD protocol only references playlists by name, and they need to be unique.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "SHOUTcast: Clients get disconnected when we reach end of playlist", "sentence_label": "title"}, {"sentence": "It might be nice to switch to playing silence for streams to keep everyone connected.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add mute to the playback and gstreamer APIs", "sentence_label": "title"}, {"sentence": "Even though we don't have mute in MPD we should still support this for more sensible frontends.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for libcec based control", "sentence_label": "title"}, {"sentence": "Using libcec we could control devices and/or be controlled via HDMI CEC.", "sentence_label": "benefit"}, {"sentence": "See [URL]", "sentence_label": "example"}, {"sentence": "This would also allow for input switching, volume control and finally note that the raspi ha built in support for cec", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Use GstDiscoverer for scanning?", "sentence_label": "title"}, {"sentence": "= from [CODE] import discoverer could be used to have nicer API for scanning files", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Use m3u8 + utf-8 for playlists in localbackend", "sentence_label": "title"}, {"sentence": "Storing stuff as latin-1 is so 1990's, we want utf-8.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow for easier changing of logging settings", "sentence_label": "title"}, {"sentence": "Basically I want a setting and flag to control logger levels.", "sentence_label": "expected"}, {"sentence": "Something along the lines of <CODE> and <CODE>", "sentence_label": "explanation"}, {"sentence": "Goal is to make it much easier than it is today to have mopidy log levels be verbose for only the systems I'm actually working on.", "sentence_label": "benefit"}, {"sentence": "Current hack I do is just have an import logging in my local settings and set things up there.", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Always keep volume up to date", "sentence_label": "title"}, {"sentence": "We could poll the mixer volume regularly and trigger the volume_changed event when it changes", "sentence_label": "expected"}, {"sentence": "so that clients which doesn't poll volume will be updated when for example the user changes the volume using volume controls outside Mopidy.", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Log to /var/log", "sentence_label": "title"}, {"sentence": "Mopidy installed from a Debian package should be able to log to the system log dir, for example /var/log.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Cache files in /var/cache", "sentence_label": "title"}, {"sentence": "Mopidy installed from a Debian package should be able to cache files to the system cache dir, for example /var/cache.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Consider switch event propagation method", "sentence_label": "title"}, {"sentence": "Currently we broadcast to actors based on Pykka mixins", "sentence_label": "current"}, {"sentence": "an alternate that might make sense is to have our code actively register listeners against core instead.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Clearer frontends concept", "sentence_label": "title"}, {"sentence": "We should consider moving the <FILE-FM> scrobbler out of the frontends module and call it something else.", "sentence_label": "expected"}, {"sentence": "It's the only exception to the claim that \"frontends expose Mopidy's functionality to some client\".", "sentence_label": "explanation"}, {"sentence": "The only thing common in between the <FILE-FM> scrobbler and the other frontends are that they use the core API and shares the FRONTENDS setting.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create Pi Musicbox", "sentence_label": "title"}, {"sentence": "It would be nice to create an image for the Raspberry Pi containing nothing more than a fully working (headless) Mopidy server and an explanation=The user should only have to create an SD-card using the image, boot up the Pi and go to the ip of the Pi in the webbrowser.", "sentence_label": "expected"}, {"sentence": "After configuring username and other settings (service, audio-output, local) in this interface, the Pi should work easily.", "sentence_label": "benefit"}, {"sentence": "It's too difficult to set it up right now, with editing config-files, audio-issues, adding a repo, updating the system, etc.", "sentence_label": "drawback"}, {"sentence": "a couple of issues need to be fixed before this is possible, for example #280<issue-link>", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create expand playlist code for use in local/streaming backends.", "sentence_label": "title"}, {"sentence": "This code should be able to take a URI and 1) determine if it is a playlist based on basic extension matching 2) parse / expand it to a list of tracks and/or playlist instance.", "sentence_label": "expected"}, {"sentence": "As for playlist types we should consider supporting the current list is M3U(8), PLS, ASF, ASX, RAM and XSPF.", "sentence_label": "expected"}, {"sentence": "When it comes to actual use in the backends the idea is that we check for a playlist match in the lookup method of the library, and if we match fetch, parse and expand the playlist, returning the tracks instead.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Use auth token for lastfm credentials", "sentence_label": "title"}, {"sentence": "As #116<issue-link> we should not be storing plain text passwords.", "sentence_label": "expected"}, {"sentence": "We should look into if we can use pylast (or the scrobbler API directly) in such a way that we prompt for missing credentials, use them to get a token and then simply store the token for future authentications.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Adding artists to spotify backend should expand albums, then tracks.", "sentence_label": "title"}, {"sentence": "Currently we just expand tracks, most people adding an artist most likely want the tracks grouped by albums.", "sentence_label": "current"}, {"sentence": "We can either iterate over the albums from the artist browse objects, or manually group the tracks.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Persist mopidy state between runs", "sentence_label": "title"}, {"sentence": "Basically adding support for persisting the current tracklist and position in it in such a way we can reload it at startup.", "sentence_label": "expected"}, {"sentence": "Idea came out of now closed pull request #181<issue-link>", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add lists of tracks to queue via a simple id", "sentence_label": "title"}, {"sentence": "For the speed of the webclient it would be nice to be able to add a list of tracks from an album, playlist, artist, search, etc by not resending all tracks back to the server, but only an id", "sentence_label": "expected"}, {"sentence": "like <CODE>", "sentence_label": "example"}, {"sentence": "Mopidy can then add the tracks itself, which is a lot faster.", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add the 'starred' playlist to the playlist catalog", "sentence_label": "title"}, {"sentence": "I missed the 'starred' playlist from original spotify client at the mopidy playlist catalog.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add possibility to start multiple instances of mopidy on the same computer", "sentence_label": "title"}, {"sentence": "It would be nice to be able to start multiple instances of mopidy.", "sentence_label": "expected"}, {"sentence": "Every instance get its own <FILE-PY>-file which you has to specify as start parameter", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Narrow down library search to specific backend.", "sentence_label": "title"}, {"sentence": "Loving Mopidy!", "sentence_label": "useless"}, {"sentence": "Our office music player has been replaced by a Raspberry Pi hooked up to a speaker system.", "sentence_label": "explanation"}, {"sentence": "I've written a JS / Backbone web client (inspired by the web client by @woutervanwijk)", "sentence_label": "explanation"}, {"sentence": "I have a bit of a wishlist item that I want to tentatively propose.", "sentence_label": "useless"}, {"sentence": "Performing a lookup by id is great for pulling down the collection of artist data on Spotify, but it excludes local files.", "sentence_label": "current"}, {"sentence": "For local files, I'm currently doing a search or find_exact call (which I'm not too keen on) to grab the local files.", "sentence_label": "current"}, {"sentence": "Of course this also causes the Spotify backend to do its own search and so it adds considerable overhead.", "sentence_label": "current"}, {"sentence": "I suppose I'm asking for a search_local to only use the local backend.", "sentence_label": "expected"}, {"sentence": "However, this would possibly mean that there'd need to be a search_dummy, search_spotify, search_foo and so on.", "sentence_label": "explanation"}, {"sentence": "I don't know Python well enough to know whether those methods could be dynamically created or whether there'd have to be some sort of search_with method that allowed you to specify the backend as a parameter.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Drop Python 2.6 support", "sentence_label": "title"}, {"sentence": "Most distros we care about (Ubuntu, Arch, etc) have had Python 2.7 as the default Python 2.x implementation for a long time.", "sentence_label": "explanation"}, {"sentence": "We also care about Debian, and a lot of the users running Mopidy on Debian use Debian stable.", "sentence_label": "explanation"}, {"sentence": "The current Debian stable version, squeeze, has Python 2.6 as default.", "sentence_label": "explanation"}, {"sentence": "The next Debian stable version, wheezy, has Python 2.7 as default.", "sentence_label": "explanation"}, {"sentence": "The trend of the RC bug count concerning wheezy (see <LINK-HTTP>) indicates that wheezy may become the new Debian stable in 1-3 months time.", "sentence_label": "explanation"}, {"sentence": "Famous last words, I know", "sentence_label": "explanation"}, {"sentence": "I propose that as soon as Debian wheezy is released, we drop support for Python 2.6 and require Python 2.7.", "sentence_label": "expected"}, {"sentence": "This will have the following benefits:", "sentence_label": "benefit"}, {"sentence": "Feel free to add further benefits or drawbacks as comments.", "sentence_label": "useless"}, {"sentence": "Please shout out if you think we should continue to support Python 2.6 after Debian stable gets Python 2.7.", "sentence_label": "useless"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make scrobbler work with Libre.fm, etc", "sentence_label": "title"}, {"sentence": "The scrobbler frontend currently only works with <FILE-FM>.", "sentence_label": "current"}, {"sentence": "The underlying library, pylast, also supports <FILE-FM> and maybe other API-compliant services.", "sentence_label": "explanation"}, {"sentence": "We should generalize our frontend", "sentence_label": "expected"}, {"sentence": "so that it can be used with other services than <FILE-FM>.", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Multi unit synchronous audio", "sentence_label": "title"}, {"sentence": "I would like to use several (in my case Raspberry Pi with Pi Musicbox) in my house.", "sentence_label": "expected"}, {"sentence": "I would like to have all these units play the same stream synchronously.", "sentence_label": "expected"}, {"sentence": "This means that I could play the same Spotify music in all house with one Spotify account.", "sentence_label": "benefit"}, {"sentence": "To make this all audiobuffer in all units has to be synchronized with each other.", "sentence_label": "explanation"}, {"sentence": "The expensive audiosystem Sonos has this killer feature.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Keep a history of played tracks", "sentence_label": "title"}, {"sentence": "It would be a nice feature to have a history of tracks played so the user can trace earlier played tracks.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow metadata field in track model", "sentence_label": "title"}, {"sentence": "Primary use is for passing additional data to web frontends from backends", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for installing static dir folders to export over want=Basic idea is to have an extension hook that allows webclients to tell us they want to expose director(y/ies) on our explanation=The folder would automatically be installed as a resource and exposed on <PATH> could provide a list of installed clients and auto redirect if only one is installed.", "sentence_label": "title"}, {"sentence": "Core should store these resource folders allowing the explanation=Note that <PATH> without the trailing slash should redirect to <PATH>", "sentence_label": "expected"}, {"sentence": "Only slight annoyance in this is that this feels a bit like making the benefit=But it feels a lot better than having webclient packages reach into the", "sentence_label": "drawback"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support crossfading between tracks", "sentence_label": "title"}, {"sentence": "Hi,", "sentence_label": "useless"}, {"sentence": "Add the crossfade value in configuration file to a general crossfader between tracks changes.", "sentence_label": "expected"}, {"sentence": "Regardsm", "sentence_label": "useless"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Feature request: Build for Synology DiskStation", "sentence_label": "title"}, {"sentence": "Goal: Run mopidy directly on NAS, with output via USB DAC (HRT MusicStreamer in my case).", "sentence_label": "expected"}, {"sentence": "This could reduce computer count by one in my living room :)", "sentence_label": "benefit"}, {"sentence": "I tried building Mopidy to run directly on my DiskStation NAS.", "sentence_label": "explanation"}, {"sentence": "however, I only got to compiling gstreamer (on the NAS), but could not acquire a working glib.", "sentence_label": "explanation"}, {"sentence": "Maybe someone with a bit more linux/cross-compilation skills could assess if this is possible or not?", "sentence_label": "explanation"}, {"sentence": "In my particular NAS (DS413j) there is a Armv5 cpu without FPU.", "sentence_label": "explanation"}, {"sentence": "Can gstreamer/mopidy run without FPU?", "sentence_label": "explanation"}, {"sentence": "sources:[URL]", "sentence_label": "example"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support Stations, on-the-go current playlists", "sentence_label": "title"}, {"sentence": "When using services that let the user get rid of having to put manually his songs (by playlist or by search result), the current playlist gets updated automatically by the backend service when the previous track stops playing.", "sentence_label": "current"}, {"sentence": "The most complete case of use, it is when either listening to a grooveshark broadcast or when clicking in a Gerne/search result/user profile Radio", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Frontend support for users and access levels", "sentence_label": "title"}, {"sentence": "It would be nice for some use cases to limit control over mopidy from certain devices(clients) or users.", "sentence_label": "expected"}, {"sentence": "for example, At social events you would want guests to be able to add songs to the tracklist;", "sentence_label": "example"}, {"sentence": "however, for the enjoyment of other guests, you wouldn't want them to be able to delete songs from the tracklist or skip songs.", "sentence_label": "expected"}, {"sentence": "At the same time the host would want full control of the tracklist as to avoid songs inappropriate to the setting/venue or at the request of another guest.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Exclude files regex for mopidy-scan", "sentence_label": "title"}, {"sentence": "When I scan my music collection, mopidy-scan bombards me with messages like:<MESSAGE>", "sentence_label": "current"}, {"sentence": "Can I exclude files using something like <CODE>?", "sentence_label": "expected"}, {"sentence": "If not, this is a wish :)", "sentence_label": "useless"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create nightly Debian packages", "sentence_label": "title"}, {"sentence": "Having a daily built development PPA on Launchpad would ease testing  of latest code.", "sentence_label": "expected"}, {"sentence": "Adding a PPA is one of the easiest ways for users to access packages outside their distros and lowering this barrier as much as possible can help attract more testers", "sentence_label": "explanation"}, {"sentence": "Read more on why[URL]", "sentence_label": "example"}, {"sentence": "The way to accomplish  this is  using Launchpad's  \"packaging recipes\"  and code imports from  the  appropiate branches  at  Github.", "sentence_label": "explanation"}, {"sentence": "Mopidy's Launchpad page is already set up at: [URL]", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Auto-generate playlist in local backend based on \"new\" tracks", "sentence_label": "title"}, {"sentence": "It would be really neat if we could auto-generate a playlist having all the tracks added within the last X days - and label this playlist \"New music\" or something like it.", "sentence_label": "expected"}, {"sentence": "I rip my music on a continuous basis, but I sometimes forget about it, and this would be a nice way just to have it at hand and play the playlist.", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Scanner extension case insensitive", "sentence_label": "title"}, {"sentence": "The match against blacklisted extensions should be made case insensitive in my opinion.", "sentence_label": "expected"}, {"sentence": "It doesn't make sense to create a long list with duplicates when comparing like so:<list>", "sentence_label": "drawback"}, {"sentence": "Maybe a simple <CODE> on the extension will be enough?", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Allow skipping quotes for all MPD command arguments without spaces System_Do=The MPD docs on request format says:<MESSAGE>", "sentence_label": "title"}, {"sentence": "We're currently expecting to always get quotes, and only allow skipping the quotes for some cases that has been required to support popular clients.", "sentence_label": "current"}, {"sentence": "We should probably support both command <CODE> and command <CODE> for all MPD commands.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Switch to setting up logging on mopidy logger instead of root.", "sentence_label": "title"}, {"sentence": "We should switch to using the mopidy logger to setup our logging, leaving the root handler with a null handler.", "sentence_label": "expected"}, {"sentence": "Goal should be something like:<list>", "sentence_label": "explanation"}, {"sentence": "Advantage of this would be that we no longer need to actively suppress pykka, ws4py, cherrypy, etc, logging.", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Wishlist: HTTP command to check interface version", "sentence_label": "title"}, {"sentence": "It would be useful to have an HTTP API command (for example <CODE>) that would return the current mopidy version so that clients can check they are compatible with it.", "sentence_label": "expected"}, {"sentence": "I'm currently updating mine (RompR) to work with mopidy 0.17, and would like to be able to warn users that their version of mopidy is out of date if they're running an earlier version.", "sentence_label": "expected"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support split config files", "sentence_label": "title"}, {"sentence": "Mopidy needs support combining multiple config files.", "sentence_label": "expected"}, {"sentence": "so that Debian packages for extensions can install their own config fragments into for example [URL], and that way be configured to use for example <PATH> when running as a system daemon.", "sentence_label": "benefit"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Mixer volume in config", "sentence_label": "title"}, {"sentence": "Be able to set an initial value for the mixer volume in the config file.", "sentence_label": "expected"}, {"sentence": "This is useful when using a frontend like Pi-MusicBox, which uses the software mixer, in conjunction with DACs that have no mixer control like the HifiBerry.", "sentence_label": "benefit"}, {"sentence": "The current behavior sets the volume at 100% which is a proper setting for waking the neighbours", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Can't Play Previous Songs in Randon or Repeat Mode", "sentence_label": "title"}, {"sentence": "Using NCMPCPP controls or MPC Prev just result in the current song being repeated, it won't play the previous song.", "sentence_label": "current"}, {"sentence": "This works find with MPD, however, eliminating it from being a client error.", "sentence_label": "current"}, {"sentence": "I can provide any files you may need.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Hidden directory not skipped when at top level", "sentence_label": "title"}, {"sentence": "When building a local library with mopidy local scan, hidden directories are being skipped, but only if they are in a subdirectory of the media_dir.", "sentence_label": "current"}, {"sentence": "If they are directly in the media_dir, they are scanned.", "sentence_label": "current"}, {"sentence": "I believe the offending code is in class ScanCommand#121, which checks for /. in the relative path.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Error when trying to add stream via MPD client", "sentence_label": "title"}, {"sentence": "I activated the stream plugin and use GMPC to add a URL, however I get errors:[TRACE]", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Audio scanner not handling duration smaller than zero", "sentence_label": "title"}, {"sentence": "I was trying to play this stream:[URL]", "sentence_label": "explanation"}, {"sentence": "And I was getting this error:[TRACE]", "sentence_label": "current"}, {"sentence": "But I played changing the timeout setting on the configuration file adding:[CODE]", "sentence_label": "current"}, {"sentence": "Before I had nothing, and after adding the timeout setting is working.", "sentence_label": "current"}, {"sentence": "I spent a lot of time installing and uninstalling Gstreamer.", "sentence_label": "explanation"}, {"sentence": "The error message from the timeout should be better.", "sentence_label": "explanation"}, {"sentence": "I started changing the timeout setting after seeing this file: [URL]", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Character encoding issue during local media scan", "sentence_label": "title"}, {"sentence": "When running mopidy local scan on a clean mopidy install I get the following error message [TRACE]", "sentence_label": "current"}, {"sentence": "I am running mopidy on OSX, installed via homebrew.", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "can't play rtsp stream", "sentence_label": "title"}, {"sentence": "Hi, I'm using version 2.0 and I can't play rtsp stream, this is log output: [TRACE]", "sentence_label": "current"}, {"sentence": "I norrowed it down to the mopidy.audio.scan.Scanner class. if I type: [CODE]", "sentence_label": "current"}, {"sentence": "I get: [TRACE]", "sentence_label": "current"}, {"sentence": "You can reproduce it with some accessible link, e.g.: [URL] [URL]", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Scanner: Date tags not extracted since Mopidy 2.0", "sentence_label": "title"}, {"sentence": "Running on ubuntu, installed from the PPA. I've just added a few new local tracks (both MP3 and FLAC) and scanned them using mopidy local scan but I don't see the Date information for any of the tracks.", "sentence_label": "current"}, {"sentence": " Eg by using mpd command 'lsinfo \"directory/with/new/tracks\"', I get all the usual stuff except for Date.", "sentence_label": "current"}, {"sentence": " If I do lsinfo on a directory I had scanned prior to the upgrade to mopidy 2.0, I still see the Date information so it looks as if the scanner is broken.", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Can't build mopidy documentation", "sentence_label": "title"}, {"sentence": "n current develop branch: building the documentations fails due to static reference to gobject.", "sentence_label": "current"}, {"sentence": "Please check what other modules are not needed anymore. [URL]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Error mapping GST state", "sentence_label": "title"}, {"sentence": "I played around with stuff adding and playing tracks etc.", "sentence_label": "current"}, {"sentence": "Not sure what triggered this.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Fix unplayable track behavior in consume mode", "sentence_label": "title"}, {"sentence": "We need to reintroduce the tests and fixes done by @jcass77 in v1.1.2 for the combination of consume mode and unplayable tracks (tracks with a backend, but where the backend URI translation returns None).", "sentence_label": "explanation"}, {"sentence": "I dropped these fixes in the release-1.1 into develop merge (#1400).", "sentence_label": "explanation"}, {"sentence": "I have a branch I need to finish to reintroduce/redo the tests and fixes.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Audio dropout before track change", "sentence_label": "title"}, {"sentence": "With the current develop version I have audio dropouts a few seconds before a track change.", "sentence_label": "current"}, {"sentence": "The dropout occurs exactly when mopidy calls PlaybackProvider.translate_uri.", "sentence_label": "current"}, {"sentence": "In my backend PlaybackProvider.translate_uri blocks ~ 0.6 second for an internet access.", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Duplicate seek events to appsrc", "sentence_label": "title"}, {"sentence": "Currently we get one seek data event per output in the tee.", "sentence_label": "current"}, {"sentence": "This can be easily verified by commenting out the dummy fakesink in the tee, or adding extra ones.", "sentence_label": "current"}, {"sentence": "The end result of this is that mopidy-spotify seeking isn't smooth, as we start playing from the seeked position and then do it again shortly afterwards.", "sentence_label": "current"}, {"sentence": "Proper fix for this, assuming multiple outputs is still a goal is to have mopidy de-dupe this, or to do it ourselves via the new segment events getting to the tee.", "sentence_label": "explanation"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Mopidy randomly crashes", "sentence_label": "title"}, {"sentence": "The last few days/weeks I experienced some strange behavior with Mopidy.", "sentence_label": "explanation"}, {"sentence": "I'm running a setup with Mopidy en Mopify on a Raspberry running Raspbian.", "sentence_label": "current"}, {"sentence": "For some reason it sometimes randomly crashes when a song has ended.", "sentence_label": "current"}, {"sentence": "The output of service mopidy status shows me the following:[TRACE]", "sentence_label": "current"}, {"sentence": "Anyone who has any idea of what's happening?", "sentence_label": "useless"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Unplayable tracks are not processed correctly when 'paused'.", "sentence_label": "title"}, {"sentence": "When the user performs stop->next->play, Mopidy will keep skipping over unplayable tracks until it finds one that can be played.", "sentence_label": "current"}, {"sentence": "This also works if the user does pause->next->play.", "sentence_label": "current"}, {"sentence": "However, when the sequence changes to pause->next->resume, Mopidy will try to resume playback on the unplayable track, which could produce unexpected results.", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Mopidy Core crashes when playing bbc podcast", "sentence_label": "title"}, {"sentence": "Hi,I am using mopidy 1.1.1.1 with odroid.", "sentence_label": "explanation"}, {"sentence": "When I try to play the bbc podcasts the mopidy core crashes.", "sentence_label": "current"}, {"sentence": "Here is one example mp3 file [URL]", "sentence_label": "example"}, {"sentence": "From this podcast:[URL]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "dbus exception in zeroconf code", "sentence_label": "title"}, {"sentence": "We should catch this in such a way that we don't get a traceback.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Empty Track URI can cause crash", "sentence_label": "title"}, {"sentence": "I've seen an issue where using an empty file URI (as file:) would crash ncmpcpp: [URL]", "sentence_label": "current"}, {"sentence": "I could imagine several ways to prevent this, e.g. by not returning lists with empty uris in lsinfo.", "sentence_label": "explanation"}, {"sentence": "Another possibility might be to have something like blank=False for URI attributes in Track classes, but that's not so straight-forward (but I've some patch in this regard already).", "sentence_label": "explanation"}, {"sentence": "The track comes from mopidy-soundcloud, where this should be fixed additionally, too", "sentence_label": "explanation"}, {"sentence": "What do you think?", "sentence_label": "useless"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "FLACs in queue are not played one after another", "sentence_label": "title"}, {"sentence": "I've got mopidy in a virtualenv enviroment.", "sentence_label": "explanation"}, {"sentence": "Sound without resampling is directed to alsasink input (here USB DAC).", "sentence_label": "explanation"}, {"sentence": "My problem is when I queue several FLAC tracks (red book standard) for playback, when another track is to be played, mopidy fails.", "sentence_label": "current"}, {"sentence": "I need to manually click on a track to make this happen (via musicbox).", "sentence_label": "current"}, {"sentence": "I think the following is most important excerpt from a debug log file: [TRACE]", "sentence_label": "current"}], "project_name": "mopidy.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Tooltips not shown for disabled toolbar items on GTK", "sentence_label": "title"}, {"sentence": "Disabled toolbar items don't show tooltips when hovered on Linux-GTK.", "sentence_label": "current"}, {"sentence": "For example, hover over the Save button on the main toolbar of Eclipse when it is not enabled.", "sentence_label": "example"}, {"sentence": " I'm running Ubuntu Fiesty Fawn, GTK.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Allow to run tests with Maven, without OSGi", "sentence_label": "title"}, {"sentence": " It would help to be able to run SWT tests from Maven, with the same command-line as other platform modules (<CODE-command>).", "sentence_label": "expected"}, {"sentence": "However, those tests are currently failing because Tycho starts an Eclipse RCP application to host those tests, and that's not what expected/required for SWT test suite.", "sentence_label": "current"}, {"sentence": "= pom file should be configured to have SWT tests running as plain Java tests", "sentence_label": "expected"}, {"sentence": "= null", "sentence_label": "useless"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add readme for swt.examples", "sentence_label": "title"}, {"sentence": " It would be helpful to add a readme that tells people which classes to run to start the examples.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[api] Create functional interface to use Lambda expressions for selection events based on SelectionListener", "sentence_label": "title"}, {"sentence": " Unfortunately the addSelectionListener method in Button uses a non-functional interface.", "sentence_label": "current"}, {"sentence": " To use lambdas with SWT Button as event handler for Button I suggest to add a new method to Button called addOnClickListener similar to the following", "sentence_label": "expected"}, {"sentence": " <CODE>", "sentence_label": "explanation"}, {"sentence": "= Some links for more information:[URL] [URL]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[GTK] Add script to check which dynamic functions are deprecated", "sentence_label": "title"}, {"sentence": " I'm planning to add a script to SWT Tools which, when run, will output a list of deprecated functions based on the contents of <CODE>.", "sentence_label": "expected"}, {"sentence": "= Dynamic GTK functions aren't run through the compiler, so no deprecation warning is emitted.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "SWT Tools: Split Sleak and Spy into separate plugins", "sentence_label": "title"}, {"sentence": " It would be great if it was possible to use the Sleak and Spy tools independently from the rest of the tools plugin.", "sentence_label": "expected"}, {"sentence": "For example , we could add those tools in our target definitions and use them in the runtime Eclipse.", "sentence_label": "example"}, {"sentence": "= Right now, depending on <CODE> means depending on JDT which our project does not use.", "sentence_label": "current"}, {"sentence": "= So my suggesting is splitting the <CODE> plugin this way:", "sentence_label": "explanation"}, {"sentence": "= More things could be split off from <FILE> later as necessary.", "sentence_label": "explanation"}, {"sentence": "I have a patch underway for this.", "sentence_label": "useless"}, {"sentence": "Let me know if you have any other suggestions or concern.", "sentence_label": "useless"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a property for the current GTK theme being used", "sentence_label": "title"}, {"sentence": " it would be useful to know which GTK theme is used during an Eclipse session for troubleshooting purposes.", "sentence_label": "expected"}, {"sentence": "= when running tests remotely or when helping someone who doesn't know which theme is used, etc.", "sentence_label": "explanation"}, {"sentence": "= This could be similar to <CODE>.", "sentence_label": "example"}, {"sentence": "I suggest <CODE>.", "sentence_label": "explanation"}, {"sentence": "I think all the native hooks are there already because I can see the name of the theme being retrieved in <CODE>.", "sentence_label": "explanation"}, {"sentence": "Let me know if you think that's a acceptable idea", "sentence_label": "useless"}, {"sentence": "and if so, I'll start working on a patch!", "sentence_label": "useless"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add color tab to ControlExample", "sentence_label": "title"}, {"sentence": " Add a tab for system and named colors.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add test class for Spinner widget", "sentence_label": "title"}, {"sentence": "Add class <CODE>.", "sentence_label": "expected"}, {"sentence": "= Spinner has no test cases.", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for styling hyperlinks in the Link widget", "sentence_label": "title"}, {"sentence": " I'm currently trying to style Eclipse with a Dark theme (by that I mean I want a dark theme for everything).", "sentence_label": "current"}, {"sentence": "= Screenshot with showing hyperlinks I'm unable to style with css.", "sentence_label": "drawback"}, {"sentence": "I'm adding a screenshot to show what I mean by that if it didn't become clear.", "sentence_label": "expected"}, {"sentence": "This is on Eclipse 4.3m5 (Build id: I20130204-1400)", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Load TrueType fonts directly from a file.", "sentence_label": "title"}, {"sentence": "= In AWT a TrueType font file can be loaded directly into a Font object <CODE>", "sentence_label": "explanation"}, {"sentence": "This functionality is important with applications that display financial documents because security fonts or MICR fonts are rarely installed on an end-user systems.", "sentence_label": "explanation"}, {"sentence": "The ability to load a TrueType font file into a <CODE> object, or convert a AWT to a SWT is the feature request.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add a requestLayout method to Control", "sentence_label": "title"}, {"sentence": " Please add a new requestLayout() method to Control, which does essentially the same thing as <CODE> but without the performance problems mentioned by <LINK>", "sentence_label": "expected"}, {"sentence": "We should be marking the dirty widgets so that SWT does not need to perform an inefficient exhaustive search through the widget hierarchy.", "sentence_label": "expected"}, {"sentence": "Further, we should add javadoc for all other mechanisms which trigger layouts to direct callers to use this new method.", "sentence_label": "expected"}, {"sentence": "The snippet, above, is currently the most efficient and reliable method of triggering layouts in SWT, but most developers are unaware of this.", "sentence_label": "benefit"}, {"sentence": "Doing a search through the Eclipse code base, I see that most callers are still trying to guess the root widget affected by their change and invoke <CODE>, which is the worst-possible implementation.", "sentence_label": "current"}, {"sentence": "By making the most-efficient implementation also the easiest to use and documenting it better, it should make it easier to clean this up.", "sentence_label": "benefit"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[Widgets] Add API for multi-touch events and gestures", "sentence_label": "title"}, {"sentence": " Windows 7 and Snow Leopard <VERSION> have API now for multi-touch events.", "sentence_label": "explanation"}, {"sentence": "We should come up with some kind of SWT API to receive these events.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[GTK3] Port to GTK+ 3", "sentence_label": "title"}, {"sentence": " it would be good to move to GTK+ 3.x where possible.", "sentence_label": "expected"}, {"sentence": "Ideally one could build and run with an entirely GTK+ <VERSION> stack.", "sentence_label": "expected"}, {"sentence": " This may also allow removal of some of the GNOME dependencies that SWT has at present.", "sentence_label": "benefit"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " [API] Disable the move of a shell", "sentence_label": "title"}, {"sentence": "Currently, there's no direct way in SWT for disabling the move of a shell, other than using the NO_TRIM style hint, that also removes the titlebar and other other trim styles.", "sentence_label": "current"}, {"sentence": "However, this can be achieved in gtk (we tested this with gtk2, in CentOs running Metacity) and win32 (with Windows8.1).", "sentence_label": "explanation"}, {"sentence": "For gtk, one would have to call the gdk_window_set_functions [1] without the GDK_FUNC_MOVE hint[2], while for Windows one would have to disable the SC_MOVE menu item from the window's menu.", "sentence_label": "explanation"}, {"sentence": "We were thinking about adding a new style hint to the SWT class and name it NO_MOVE or NOT_MOVABLE.", "sentence_label": "expected"}, {"sentence": "What are your thoughts on this?", "sentence_label": "useless"}, {"sentence": "Would you be interested in a contribution?", "sentence_label": "useless"}, {"sentence": "Best wishes,", "sentence_label": "useless"}, {"sentence": "Alexandra", "sentence_label": "useless"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " [Browser] implement XULRunner 31 support", "sentence_label": "title"}, {"sentence": " As with previous ESRs, support for XULRunner 31 should be added once version 31 gets released.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Replace new Boolean with Boolean.valueOf", "sentence_label": "title"}, {"sentence": "There are some examples where new Boolean() is used in SWT.", "sentence_label": "example"}, {"sentence": "The static accessor <CODE> was added in Java 1.4 to provide access to a flyweight object where a unique identity is not required, and which can in-line in the JIT (object construction only in-lines when it can be proven that the object doesn't escape).", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Double icon in the dock on OSX", "sentence_label": "title"}, {"sentence": "When eclipse starts up it shows a double icon in the dock.", "sentence_label": "current"}, {"sentence": "In addition, there are time when the second icon does not disappear even after eclipse is fully started.", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "ControlExample: should be able to set text for Shell", "sentence_label": "title"}, {"sentence": " The 'Shell' tab of the ControlExample should allow me to set a text for the Shell.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[build] Support building libswt-awt-XXXX.so on Solaris/Motif", "sentence_label": "title"}, {"sentence": " If possible, this should be included in the builds.", "sentence_label": "expected"}, {"sentence": "Currently, it seems that the libswt-awt-XXXX.", "sentence_label": "current"}, {"sentence": "so library is not being built for Solaris/Motif.", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "The Control.setBackground doesn't support gradients", "sentence_label": "title"}, {"sentence": "Currently we are not able to set gradient as the background for the Controls.", "sentence_label": "current"}, {"sentence": "The gradients are supported by the CTabFolder class only.", "sentence_label": "current"}, {"sentence": "Therefore we have to create complex workarounds in the code,", "sentence_label": "drawback"}, {"sentence": " for example, support the gradients via images that is sometimes quite problematic.", "sentence_label": "example"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Add support for 'transparent' colors", "sentence_label": "title"}, {"sentence": " Setting the 'null' as the color value for the Control.setBackground method should be considered as the transparent color and it shouldn't be replaced with any system default color", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Make it easier to identify GTK version used by SWT (2/3)", "sentence_label": "title"}, {"sentence": "I don't know of a good way to find out whether SWT uses GTK2 or GTK3 in a running instance of Eclipse.", "sentence_label": "explanation"}, {"sentence": " Could SWT set a Java property, so that this can be seen in Help then Installation Details?", "sentence_label": "expected"}, {"sentence": " For example, <CODE>", "sentence_label": "example"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Image performance optimizations on OS X", "sentence_label": "title"}, {"sentence": " I would like to show an image preview panel, for instance, and there are specific methods in ImageIO that allow me to load very large images and thumbnail them to a target size REALLY fast and with very low memory usage", "sentence_label": "expected"}, {"sentence": "with ImageIO i can thumbnail an image in about 1/4 of a second vs using <CODE> in SWT takes as much as 5+ seconds", "sentence_label": "benefit"}, {"sentence": "I was looking into Image loading, and it appears that the heavy lifting is currently done in ImageData in SWT common.", "sentence_label": "current"}, {"sentence": "This means there isn't an obvious way to take advantage of native optimizations like ImageIO (Apple's not Sun's) on OS X.", "sentence_label": "drawback"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Workbench is automatically brought to front in focus follows mouse mode", "sentence_label": "title"}, {"sentence": "It is not common for people to use \"focus follows mouse\" in windows, but I do.", "sentence_label": "explanation"}, {"sentence": "When I happen to move my mouse over any eclipse window, it is popped to the front of other windows.", "sentence_label": "current"}, {"sentence": "To turn on sloppy focus in WinNT, set the following registry var: <CODE>", "sentence_label": "current"}, {"sentence": "If it doesn't exist, create it as a DWORD", "sentence_label": "current"}, {"sentence": "Then to test, start eclipse and any other window together.", "sentence_label": "current"}, {"sentence": "Make sure the windows overlap, but you can see parts of both windows.", "sentence_label": "current"}, {"sentence": "Now click on the non-eclipse window.", "sentence_label": "current"}, {"sentence": "It'll come to the top.", "sentence_label": "current"}, {"sentence": "Now just move the mouse over the eclipse window, and it will be brought to the front without clicking.", "sentence_label": "current"}, {"sentence": "Why???", "sentence_label": "useless"}, {"sentence": "Please disable this.", "sentence_label": "expected"}, {"sentence": "It should only come to front when clicked on, like all other apps.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": " Provide ability to handle reopen-events (user clicks dock icon for running application)", "sentence_label": "title"}, {"sentence": "On OS X, applications may not show windows while still running.", "sentence_label": "current"}, {"sentence": "Usually, there are two options to open a new application window: using the menu bar or clicking the dock icon.", "sentence_label": "explanation"}, {"sentence": "The first one is already supported by SWT 3.7, but not the second one (at least I did not found a possibility).", "sentence_label": "explanation"}, {"sentence": "Please add support for these reopen events.", "sentence_label": "expected"}, {"sentence": "When clicking on the dock icon and the application shows at least one window, bring it to front.", "sentence_label": "current"}, {"sentence": "For the case where no application window is visible, we need API to be notified about the dock icon click, so we can show a new window.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support links in StyledText", "sentence_label": "title"}, {"sentence": "StyledText should allow hyperlinks to be specified.", "sentence_label": "expected"}, {"sentence": "The links must become active (cursor changes, underlined, colour change) when the mouse is over the link or when the user tabs to the link.", "sentence_label": "expected"}, {"sentence": "Links must be traversable by tabbing.", "sentence_label": "expected"}, {"sentence": "There needs to be an event when the link is selected and when the link is activated", "sentence_label": "expected"}, {"sentence": " for example, in IE the status bar shows detailed info about the link when the user hovers over it.", "sentence_label": "example"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Spinner should support negative values", "sentence_label": "title"}, {"sentence": "Spinner should allow negative values.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[ScrolledComposite] ScrolledComposite page increment should default to size of client area", "sentence_label": "title"}, {"sentence": "ScrolledComposite page increment should default to size of client area", "sentence_label": "expected"}, {"sentence": "Currently when you try to page increment on a ScrolledComposite, it defaults to a value much smaller than the size of the client area.", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Support SWT.TOOL style for shells on the Mac", "sentence_label": "title"}, {"sentence": "Add support for the \"SWT.TOOL\" style for shells on the Mac.", "sentence_label": "expected"}, {"sentence": "Currently, TOOL shells look like ordinary shells.", "sentence_label": "current"}, {"sentence": "Would be nice if they could look like for example the font picker.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "MouseEvent#button, SWT#BUTTON*, and SWT#MOD* should spell out usual mapping", "sentence_label": "title"}, {"sentence": "MouseEvent#button, SWT#BUTTON*, and SWT#MOD* should spell out the commonly used physical mapping of these buttons/keys.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "[10.7] Let Eclipse use the new full-screen support in Lion", "sentence_label": "title"}, {"sentence": "It would be great if Eclipse could count with this new feature in Mac OS X <VERSION>.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Right and center alignment of Text widgets", "sentence_label": "title"}, {"sentence": " The styles <CODE> and <CODE> are not handled in the <CODE> method of Text widgets (<CODE>).", "sentence_label": "current"}, {"sentence": " Please add the following code: <CODE>.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "DCR - alignment in a text widget", "sentence_label": "title"}, {"sentence": " I am looking for a way to set the string in a text widget right aligned (for example for numbers).", "sentence_label": "explanation"}, {"sentence": " For a <CODE> there exists a function <CODE>", "sentence_label": "example"}, {"sentence": "There should be something similar for <CODE> to set left / right / center alignment.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "DCR - Tree.getTopItem/setTopItem", "sentence_label": "title"}, {"sentence": " To better restore the last UI state we would like to have a <CODE> API that works just like the Table API.", "sentence_label": "expected"}, {"sentence": " for example based on the current visible items return/set the index of the topmost visible item.", "sentence_label": "example"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "StyledText - Cursor should stop blinking when moving", "sentence_label": "title"}, {"sentence": " If I hold the \"down\" button inside a java file, the cursor blinks while moving downward.", "sentence_label": "current"}, {"sentence": " It should only blink when still.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Release SWT sources & javadoc in future builds", "sentence_label": "title"}, {"sentence": " Please release SWT sources as a <FILE_TYPE> that we can attach as source in future builds.", "sentence_label": "expected"}, {"sentence": " It used to be available before.", "sentence_label": "explanation"}, {"sentence": " SWT source is not available in <OPERATING_SYSTEM> / <OPERATING_SYSTEM>.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Accessible resizing of Views should move/change the Display's Cursor", "sentence_label": "title"}, {"sentence": " See windows behavior.", "sentence_label": "explanation"}, {"sentence": " Go to system menu and choose \"Size\", then use the arrow keys.", "sentence_label": "explanation"}, {"sentence": " The Cursor moves, and better yet it changes to indicate the interaction.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Moving shell above other shells does not work.", "sentence_label": "title"}, {"sentence": " Help browser on Windows needs to move above all shells, when called to display some help URL.", "sentence_label": "expected"}, {"sentence": " When the browser window is open it appears on the top,", "sentence_label": "current"}, {"sentence": "but when it is subsequently called to display URLs and move above, it sometimes stays behind other windows", "sentence_label": "current"}, {"sentence": "The browser window runs in a separate process from Eclipse.", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "Create project does not allow creation of folder in its project selection.", "sentence_label": "title"}, {"sentence": "To Reproduce:Select File->New Project->Simple", "sentence_label": "current"}, {"sentence": " Notice that the user cannot create a folder within this dialog.", "sentence_label": "drawback"}, {"sentence": " It would be quite useful not to have to use the file system to go and create a subfolder.", "sentence_label": "expected"}, {"sentence": " The fact that eclipse will NOT let you overlap projects exacerbates this problem", "sentence_label": "current"}, {"sentence": " If you want to have one folder to store all your projects, you have to create subfolders within this folder to house the projects", "sentence_label": "current"}, {"sentence": " It is this use case which makes would justify the browser having the create folder like many other applications which bring up a directory chooser.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "OleControlSite is not powerful enough", "sentence_label": "title"}, {"sentence": "OleControlSite class has no functionality to attach events to any COM interface (IUknown) needed.", "sentence_label": "current"}, {"sentence": " It would be great to create in it OleEventSink objects with IUknown of it and GUID of it's event sink and to add API for adding listeners to these sinks.", "sentence_label": "expected"}, {"sentence": " Now OleEventSink constructor doen't take such parameters, what is more - it  doesn't have a public constructor at all - it restricts developer.", "sentence_label": "current"}, {"sentence": " It is rather easy to do with C++, and with Java wrappers for COM (I used comjni from <URL>), and it is powerful feature to create applications with callbacks.", "sentence_label": "expected"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "StyledText - remove hardcoded margin", "sentence_label": "title"}, {"sentence": " I would like to see the option to remove the (hardcoded) margin of 2 pixels", "sentence_label": "expected"}, {"sentence": "I need this as I'm rendering a <CODE> over another <CODE>.", "sentence_label": "explanation"}, {"sentence": " A simple <CODE> would do it for me.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "fr"}, {"sentence_samples": [{"sentence": "R4_15_maintenance build failed", "sentence_label": "title"}, {"sentence": "R4_15_maintenance build failed with the follow messages:[TRACE]", "sentence_label": "current"}, {"sentence": "I think it's released to [URL]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "new test fails in build I20200206-1805", "sentence_label": "title"}, {"sentence": "see [URL]", "sentence_label": "explanation"}, {"sentence": "AllBrowserTests are failing with this error: [TRACE]", "sentence_label": "current"}, {"sentence": "I don't see any related changes in the SWT code, so probably environment change on Linux test machines?", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Crashes when double clicking JButton on JFrame", "sentence_label": "title"}, {"sentence": "Eclipse crashes when I double click a just created JButton on a JFrame.", "sentence_label": "current"}, {"sentence": "Tested on 4 computers with same Eclipse and Java versions.", "sentence_label": "explanation"}, {"sentence": "Two of them crash, two of them don't.", "sentence_label": "explanation"}, {"sentence": "To reproduce this issue just install Window Builder, create a new project, new --> Other --> Swing --> JFrame.", "sentence_label": "explanation"}, {"sentence": "I am attaching the crash report.", "sentence_label": "explanation"}, {"sentence": "Happens with Eclipse 2019-06, 2019-09.", "sentence_label": "explanation"}, {"sentence": "Doesn't happen with Eclipse Oxygen.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SWT fails to build with GCC 10", "sentence_label": "title"}, {"sentence": "When I try to build the SWT natives with GCC 10 (as is available on Fedora 32) then I get a build failure like this: [TRACE]", "sentence_label": "current"}, {"sentence": "This appears because of a change where gcc now defaults to a more strict setting concerning multiple declarations, causing such linker errors.", "sentence_label": "explanation"}, {"sentence": "Setting the -fcommon flag restores the old gcc behaviour but a more correct fix IMO would be declaring this variable with \"extern\"", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Sleak not working with RCP e4", "sentence_label": "title"}, {"sentence": "Hi, so Sleak is not working, I tried everything that the internet had to offer on a search for the reasons.", "sentence_label": "current"}, {"sentence": "I've installed it trought the update-site as discribed here: [URL]", "sentence_label": "explanation"}, {"sentence": "I launched eclipse according to the steps also mentoined on the site.", "sentence_label": "explanation"}, {"sentence": "But all I get is: \"WARNING: Device is not tracking resource allocation\"", "sentence_label": "explanation"}, {"sentence": "So the phrase \"The plug-in monitors all other plug-ins running in its Eclipse environment.\" did catch my Eye and I put [CODE] in the required plugins.", "sentence_label": "explanation"}, {"sentence": "But nothing changed.", "sentence_label": "explanation"}, {"sentence": "If it is somehow my fault, the thing that I can do needs to be documented because I am not an RCP beginner but I didn't find any solution.", "sentence_label": "useless"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SWT error with [ERROR]", "sentence_label": "title"}, {"sentence": "I am having the following problem with Linux version SWT.", "sentence_label": "current"}, {"sentence": "I use Windows 10 WSL Ubuntu Linux version 18.04.2 LTS.", "sentence_label": "explanation"}, {"sentence": "Java versions I tested are [CODE]", "sentence_label": "explanation"}, {"sentence": "I tested with the following SWT versions;", "sentence_label": "explanation"}, {"sentence": " All showing the following stack trace dump [TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "crash: fatal error in soup_session_feature_detach with WebKitGTK+ >= 1.11.91", "sentence_label": "title"}, {"sentence": "With recent versions of WebKitGTK+, Eclipse crashes whenever Javadoc hover help is to be displayed in Java editor.", "sentence_label": "current"}, {"sentence": "Looks this happens because WebKit doesn't attach a default Authenticate listener and therefore [METHOD] returns 0 in [METHOD].", "sentence_label": "explanation"}, {"sentence": "See attached patch for fix.", "sentence_label": "explanation"}, {"sentence": "Reproduced with all 3.8, 4.2 and 4.3 versions of SWT.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Build problems in bug 531634", "sentence_label": "title"}, {"sentence": "JUnit test failures are only reproducible on Jenkins and does not happen locally.", "sentence_label": "current"}, {"sentence": "I have created this bug for experiments, so that original bug's gerrit is not polluted.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Eclipse interface size problem with TV monitor", "sentence_label": "title"}, {"sentence": "Hi, I have a pc with elementary os and on it I have successfully installed Eclipse Neon 4.6.1.", "sentence_label": "explanation"}, {"sentence": "The problem is that the Eclipse GUI, is so great as to make it unusable.", "sentence_label": "current"}, {"sentence": "My pc is connected with an HDMI cable to the TV as a monitor with a resolution of 1920x1080, so gnome-tweak-tool I changed the scale factor setting it to 2, so make the whole operating system usable.", "sentence_label": "explanation"}, {"sentence": "The problem is that Eclipse does not seem interested in the scaling factor, just whatever it is, the graphical interface of the program remains unchanged, so too large to be used decently.", "sentence_label": "current"}, {"sentence": "I searched on the forum before posting my problem, but unfortunately they all seem to have the opposite problem to mine, or extremely small icons!", "sentence_label": "explanation"}, {"sentence": "My own concerns rather the fact that the icons and all the eclipse system are so large as to be shelled.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": " Text: Compute Size error", "sentence_label": "title"}, {"sentence": "Open the properties dialog for any package in linux-GTK, note the size of the text fields.", "sentence_label": "explanation"}, {"sentence": "(Path, type, location, last modified).", "sentence_label": "explanation"}, {"sentence": "Last modified is my favourite, nice wrapping.", "sentence_label": "explanation"}, {"sentence": "Compare with eclipse R2.0.1 (20020829) if you don't see the problem.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Locks up when activating task in task list", "sentence_label": "title"}, {"sentence": "When activating a certain task in Task List either by clicking on button on left side or choosing right click context menu and selecting \"Activate\".", "sentence_label": "current"}, {"sentence": "It locks up and I get spinning ball.", "sentence_label": "explanation"}, {"sentence": "Have to force eclipse quit with activity monitor.", "sentence_label": "explanation"}, {"sentence": "When opened after that, it opens to last state it was in before clicking activate.", "sentence_label": "current"}, {"sentence": "I have about 75 other tasks in task list that work ok when they are activated but this one does not.", "sentence_label": "explanation"}, {"sentence": "I tried creating a new task and gave it the same name and it still does it.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Opening File-import freezes all PC", "sentence_label": "title"}, {"sentence": "OS Ubuntu 17.10. Run Eclipse CDT 9.3.1, select File->import. file select dialog comes up. computer freezes.", "sentence_label": "explanation"}, {"sentence": "In the log file: [TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "DND does not work on ExpandBar", "sentence_label": "title"}, {"sentence": "Similar to: [URL]", "sentence_label": "explanation"}, {"sentence": "Except DND doesn't function if a widget is inside a 'ExpandBar' on GTK3.", "sentence_label": "current"}, {"sentence": "I am investigating/working on a fix now.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Non-latin1 characters not copied into clipboard", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "The line containing var1 can be selected copied into the clipboard (and then pasted elsewhere).", "sentence_label": "current"}, {"sentence": "The line containing var2 doesn't get copied.", "sentence_label": "current"}, {"sentence": "Similarly, text from an external source (tested with the gedit text editor) can only be pasted into Eclipse when it doesn't contain any non-latin1 characters.", "sentence_label": "current"}, {"sentence": "Text file encoding is set to UTF-8.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Eclipse failed to load on PPC64LE platform", "sentence_label": "title"}, {"sentence": "While trying to open eclipse on ppc64le platform the following error occured [TRACE]", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "taskitem doesnt work before shell.open()", "sentence_label": "title"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "expected: overlay text \"hi\" to show over the application icon", "sentence_label": "expected"}, {"sentence": "result: \"hi\" is not shown", "sentence_label": "current"}, {"sentence": "note: it all works if shell.open() is called before item.setOverlayText(\"hi\")", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Build input failure for I20180118-2000", "sentence_label": "title"}, {"sentence": "Build input failure for I20180118-2000", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Not able to edit in the Editing support cell when we use DialogCellEditor", "sentence_label": "title"}, {"sentence": "We are trying to edit in the textbox for DialogCellEditor, but it shows editable text box somewhere else on the table and on completion and Hit Enter key value does not persist in the table cell.", "sentence_label": "current"}, {"sentence": "To reproduce the issue please follow below steps: [LIST]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Wrong text background in Resource properties dialog", "sentence_label": "title"}, {"sentence": "See attached picture.", "sentence_label": "explanation"}, {"sentence": "That happened on recent 4.16 builds (I see this in I20200316-1800, GTK 3.22.30 on RHEL 7.4).", "sentence_label": "explanation"}, {"sentence": "I assume it is a regression from one of bug 561047 commits, probably some usual GTK CSS weirdness.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "The program 'Eclipse' received an X Window System error.", "sentence_label": "title"}, {"sentence": "If I try to open the run tab of any bnd.bnd eclipse will crash.", "sentence_label": "current"}, {"sentence": "this is the console output: [TRACE]", "sentence_label": "explanation"}, {"sentence": "How can I help to get a usable eclipse (again)...", "sentence_label": "useless"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JVM crash after connecting Windows Remote Desktop", "sentence_label": "title"}, {"sentence": "Launch Eclipse on a PC running Windows 10 Pro and open some Java code editors.", "sentence_label": "explanation"}, {"sentence": "Then go to another Windows 10 PC and connect to the first PC via the Microsoft Remote Desktop app.", "sentence_label": "explanation"}, {"sentence": "As soon as the connection establishes, Eclipse crashes.", "sentence_label": "explanation"}, {"sentence": "This bug appeared also in previous Eclipse versions.", "sentence_label": "explanation"}, {"sentence": "Configuration Details [LIST]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Buggy scroll-pane on left hand side of properties panel", "sentence_label": "title"}, {"sentence": "Scroll pane on the left hand size of the properties panel becomes stuck whenever the panel is closed and re-opened.", "sentence_label": "current"}, {"sentence": "Seems to get stuck on the item that was last selected in said panel.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "DND drag to table after previous drag threw exception causes SWT native code to hang", "sentence_label": "title"}, {"sentence": "Mac only.", "sentence_label": "explanation"}, {"sentence": "After an exception is thrown in a drag from table to table, attempting to drag again will hang the SWT thread in loop that consumes all memory.", "sentence_label": "current"}, {"sentence": "Thread stack dump looks like this:[TRACE]", "sentence_label": "explanation"}, {"sentence": "Reproducible: Always", "sentence_label": "explanation"}, {"sentence": "Steps to Reproduce: [LIST]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [METHOD]", "sentence_label": "title"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Eclipse hangs on opening source file with very long line", "sentence_label": "title"}, {"sentence": "Eclipse hangs if an XML file contains a very long line.", "sentence_label": "current"}, {"sentence": "Not sure if this is specific to editing XMLs (probably not) or it occurs with any type of file.", "sentence_label": "explanation"}, {"sentence": "Reproducible: Always", "sentence_label": "explanation"}, {"sentence": "Steps to Reproduce:[LIST]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Segmentation fault in [METHOD]", "sentence_label": "title"}, {"sentence": "This seems to happen near a garbage collection both with hotspot and openj9 VMs.", "sentence_label": "explanation"}, {"sentence": "With hotspot, the summary follows - I'll attach the full hs_err.log file.", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[METHOD] can crash with an NPE", "sentence_label": "title"}, {"sentence": "The cocoa version of TextLayout has these lines in [METHOD]: [CODE]", "sentence_label": "explanation"}, {"sentence": "We've received a crash report where an NPE occurred on line 239.", "sentence_label": "explanation"}, {"sentence": "This should mean that it is possible that the \"handle\" member of the Color object is \"null\".", "sentence_label": "explanation"}, {"sentence": "Does this mean I have disposed an SWT Color somewhere which is still referenced by a style?", "sentence_label": "explanation"}, {"sentence": "Or is the code in [METHOD] supposed to handle this situation?", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Eclipse crashes randomly", "sentence_label": "title"}, {"sentence": "Eclipse crashes what seams to be randomly.", "sentence_label": "current"}, {"sentence": "I suspect it is related to source control when comparing files.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Crash on focus change with Chinese input method", "sentence_label": "title"}, {"sentence": "I write a RCP program with eclipse3.8 a long time ago, recently, I upgraded it to eclipse4.13.", "sentence_label": "explanation"}, {"sentence": "Then, I find, When I use input Chinese characters, it always crashes.", "sentence_label": "current"}, {"sentence": "But when I use the English input method, it works well.", "sentence_label": "current"}, {"sentence": " Configuration Details [LIST]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Application hangs after throwing exception from handleEvent on MAC.", "sentence_label": "title"}, {"sentence": "SWT.Selection event works fine for widgets (e.g. for List) - it report about \"Unhandled event loop exception\" in stdout.", "sentence_label": "current"}, {"sentence": "But throving an exception during [METHOD] event handling freezes the application.", "sentence_label": "explanation"}, {"sentence": "Not reproduced on Windows.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Exception access violation", "sentence_label": "title"}, {"sentence": "A fatal error has been detected by the Java Runtime Environment:[TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "JVM crash when clicking to edit a cell in properties view", "sentence_label": "title"}, {"sentence": "I can always reproduce this.", "sentence_label": "explanation"}, {"sentence": "When I click on a cell in properties view to edit the value it crashes.", "sentence_label": "current"}, {"sentence": "I will attach a screenshot with the cell highlighted in red as well as the [FILE] that I get.", "sentence_label": "explanation"}, {"sentence": "Looking at the log file it seems to be SWT related.", "sentence_label": "explanation"}, {"sentence": "I initially had this with java 1.8.0_201 but I upgraded it to adopt open jdk 11.0.4.11 and I still get it.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cannot change value of variables", "sentence_label": "title"}, {"sentence": "After updating from 2019-06 to 2019-09 release I cannot longer change the value of a variable during a debug session (gdb).", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "DateTime doesn't send selection event", "sentence_label": "title"}, {"sentence": "DateTime doesn't send selection event (SWT.Selection) in any way.", "sentence_label": "current"}, {"sentence": "It doesn't send selection event when spinner buttons (+/-) clicked.", "sentence_label": "current"}, {"sentence": "It doesn't send selection event when text changed and when i paste some text (Ctrl+V).", "sentence_label": "current"}, {"sentence": "So where is no ability to know about date changed.", "sentence_label": "drawback"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Null pointer exception to invoke [METHOD] because of graphicsContext variable", "sentence_label": "title"}, {"sentence": "I am getting a Null Pointer Exception while creating an object of [CLASS] with a Label as a parameter.", "sentence_label": "current"}, {"sentence": "[CODE]", "sentence_label": "explanation"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[ERROR]: Unhandled event loop exception when using Ctrl+F6, Ctrl+F7, ...", "sentence_label": "title"}, {"sentence": "Since the upgrade to 2019-03 the keyboard shortcuts Ctrl+F6, Ctrl+F7, Ctrl+F8, Ctrl+E throw the following error", "sentence_label": "current"}, {"sentence": "[TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Cursor lookup failure causes \"No more handles\"", "sentence_label": "title"}, {"sentence": "See [URL] for details.", "sentence_label": "explanation"}, {"sentence": "Happens in both the Eclipse provided in the Ubuntu distribution (which is Neon) and in Oxygen downloaded from eclipse.org.", "sentence_label": "explanation"}, {"sentence": "I don't know if this is an Eclipse issue or an Ubuntu issue hence tickets filed in both places.", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SWT widgets documentation links fail", "sentence_label": "title"}, {"sentence": "When I click on a widget icon on the page [URL] this takes me to a page listing documentation sets, whereas it should take me to a page showing documentation of the widget I clicked on.", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "[EXCEPTION] in [METHOD]", "sentence_label": "title"}, {"sentence": "Happens rarely.", "sentence_label": "explanation"}, {"sentence": "It looks like bundle is null here: [TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "Combo doesn't render the whole text", "sentence_label": "title"}, {"sentence": "Go to Preferences/Workspace and look at the \"Report unknown project nature as:\" combo.", "sentence_label": "explanation"}, {"sentence": "If set to Warning the last symbol 'g' is not rendered (only small part of it visible).", "sentence_label": "current"}], "project_name": "swt.txt", "document_label": "non_fr"}, {"sentence_samples": [{"sentence": "SWT error occurred on Eclipse 200405060200", "sentence_label": "title"}, {"sentence": "I can't reproduce this problem, but I was doing thing something like creating, editing, building, then deleting a file in CDT.", "sentence_label": "explanation"}, {"sentence": "Suddenly, I had an error dialog: [TRACE]", "sentence_label": "explanation"}], "project_name": "swt.txt", "document_label": "non_fr"}]